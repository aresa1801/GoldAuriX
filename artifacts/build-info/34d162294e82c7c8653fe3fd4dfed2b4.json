{
	"id": "34d162294e82c7c8653fe3fd4dfed2b4",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.30",
	"solcLongVersion": "0.8.30+commit.73712a01",
	"input": {
		"language": "Solidity",
		"sources": {
			"VaultManager.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\n\n/**\n * @title VaultManager\n * @notice Manajemen cadangan emas fisik untuk GoldToken\n */\ncontract VaultManager is AccessControl {\n    bytes32 public constant VAULT_ADMIN_ROLE = keccak256(\"VAULT_ADMIN_ROLE\");\n    bytes32 public constant TOKEN_CONTRACT_ROLE = keccak256(\"TOKEN_CONTRACT_ROLE\");\n\n    uint256 public totalReserveGrams;  // Total gram emas di vault fisik\n    uint256 public reserveUsed;        // Total gram emas yang sudah dicetak menjadi token\n\n    event ReserveUpdated(uint256 newTotal);\n    event ReserveUsedAdded(uint256 amount);\n    event ReserveUsedReduced(uint256 amount);\n\n    constructor(address admin) {\n        require(admin != address(0), \"Invalid admin\");\n        _grantRole(DEFAULT_ADMIN_ROLE, admin);\n        _grantRole(VAULT_ADMIN_ROLE, admin);\n    }\n\n    /**\n     * @notice Update jumlah total emas fisik (hanya oleh Vault Admin)\n     */\n    function setTotalReserve(uint256 grams) external onlyRole(VAULT_ADMIN_ROLE) {\n        require(grams >= reserveUsed, \"Reserve can't be less than used\");\n        totalReserveGrams = grams;\n        emit ReserveUpdated(grams);\n    }\n\n    /**\n     * @notice Dipanggil oleh GoldToken saat mint → menambah cadangan yang terpakai\n     */\n    function addReserveUsed(uint256 amount) external onlyRole(TOKEN_CONTRACT_ROLE) {\n        require(reserveUsed + amount <= totalReserveGrams, \"Not enough physical reserve\");\n        reserveUsed += amount;\n        emit ReserveUsedAdded(amount);\n    }\n\n    /**\n     * @notice Dipanggil saat redeem → mengurangi cadangan yang terpakai\n     */\n    function reduceReserveUsed(uint256 amount) external onlyRole(TOKEN_CONTRACT_ROLE) {\n        require(amount <= reserveUsed, \"Cannot reduce more than used\");\n        reserveUsed -= amount;\n        emit ReserveUsedReduced(amount);\n    }\n\n    /**\n     * @notice Lihat sisa cadangan emas fisik yang tersedia\n     */\n    function availableGrams() external view returns (uint256) {\n        return totalReserveGrams - reserveUsed;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControl} from \"./IAccessControl.sol\";\nimport {Context} from \"../utils/Context.sol\";\nimport {ERC165} from \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address account => bool) hasRole;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 role => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\n        return _roles[role].hasRole[account];\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n     * is missing `role`.\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert AccessControlUnauthorizedAccount(account, role);\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\n        if (callerConfirmation != _msgSender()) {\n            revert AccessControlBadConfirmation();\n        }\n\n        _revokeRole(role, callerConfirmation);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (!hasRole(role, account)) {\n            _roles[role].hasRole[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Attempts to revoke `role` from `account` and returns a boolean indicating if `role` was revoked.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (hasRole(role, account)) {\n            _roles[role].hasRole[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (access/IAccessControl.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev External interface of AccessControl declared to support ERC-165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev The `account` is missing a role.\n     */\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\n\n    /**\n     * @dev The caller of a function is not the expected one.\n     *\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\n     */\n    error AccessControlBadConfirmation();\n\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted to signal this.\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n     * Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) external;\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"AccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xc1bebdee8943bd5e9ef1e0f2e63296aa1dd4171a66b9e74d0286220e891e1458\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://928cf2f0042c606f3dcb21bd8a272573f462a215cd65285d2d6b407f31e9bd67\",\"dweb:/ipfs/QmWGxjckno6sfjHPX5naPnsfsyisgy4PJDf46eLw9umfpx\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x4d9a2b261b56a1e4a37bb038151dec98b952fed16de2bdfdda27e38e2b12b530\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f724110f7aeb6151af800ab8c12e6060b29bda9e013f0ccb331eb754d6a7cbf0\",\"dweb:/ipfs/QmUcjzCZpxtUPdEThtAzE1f9LvuJiUGZxTdH9N6bHrb5Cf\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 26,
								"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)21_storage"
							},
							"t_struct(RoleData)21_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 18,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 20,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"IAccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "External interface of AccessControl declared to support ERC-165 detection.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC-165 detection.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x4d9a2b261b56a1e4a37bb038151dec98b952fed16de2bdfdda27e38e2b12b530\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f724110f7aeb6151af800ab8c12e6060b29bda9e013f0ccb331eb754d6a7cbf0\",\"dweb:/ipfs/QmUcjzCZpxtUPdEThtAzE1f9LvuJiUGZxTdH9N6bHrb5Cf\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"VaultManager.sol": {
				"VaultManager": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "admin",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newTotal",
									"type": "uint256"
								}
							],
							"name": "ReserveUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "ReserveUsedAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "ReserveUsedReduced",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "TOKEN_CONTRACT_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "VAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "addReserveUsed",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "availableGrams",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "reduceReserveUsed",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "reserveUsed",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "grams",
									"type": "uint256"
								}
							],
							"name": "setTotalReserve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalReserveGrams",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"title": "VaultManager",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"VaultManager.sol\":206:2098  contract VaultManager is AccessControl {... */\n  mstore(0x40, 0x80)\n    /* \"VaultManager.sol\":714:895  constructor(address admin) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"VaultManager.sol\":776:777  0 */\n  0x00\n    /* \"VaultManager.sol\":759:778  admin != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"VaultManager.sol\":759:764  admin */\n  dup2\n    /* \"VaultManager.sol\":759:778  admin != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"VaultManager.sol\":751:796  require(admin != address(0), \"Invalid admin\") */\n  tag_6\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_7\n  swap1\n  tag_8\n  jump\t// in\ntag_7:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_6:\n    /* \"VaultManager.sol\":806:843  _grantRole(DEFAULT_ADMIN_ROLE, admin) */\n  tag_9\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2232:2236  0x00 */\n  0x00\n    /* \"VaultManager.sol\":817:835  DEFAULT_ADMIN_ROLE */\n  0x00\n  shl\n    /* \"VaultManager.sol\":837:842  admin */\n  dup3\n    /* \"VaultManager.sol\":806:816  _grantRole */\n  shl(0x20, tag_10)\n    /* \"VaultManager.sol\":806:843  _grantRole(DEFAULT_ADMIN_ROLE, admin) */\n  0x20\n  shr\n  jump\t// in\ntag_9:\n  pop\n    /* \"VaultManager.sol\":853:888  _grantRole(VAULT_ADMIN_ROLE, admin) */\n  tag_11\n    /* \"VaultManager.sol\":294:323  keccak256(\"VAULT_ADMIN_ROLE\") */\n  0x7edcee67725a77bfa311b39349d7e96df9b23fbdbdcb328dfc17d77926920c13\n    /* \"VaultManager.sol\":882:887  admin */\n  dup3\n    /* \"VaultManager.sol\":853:863  _grantRole */\n  shl(0x20, tag_10)\n    /* \"VaultManager.sol\":853:888  _grantRole(VAULT_ADMIN_ROLE, admin) */\n  0x20\n  shr\n  jump\t// in\ntag_11:\n  pop\n    /* \"VaultManager.sol\":714:895  constructor(address admin) {... */\n  pop\n    /* \"VaultManager.sol\":206:2098  contract VaultManager is AccessControl {... */\n  jump(tag_12)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\ntag_10:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6256:6260  bool */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n  tag_14\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6285:6289  role */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6298  account */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6284  hasRole */\n  shl(0x20, tag_15)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n  0x20\n  shr\n  jump\t// in\ntag_14:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\n  tag_16\n  jumpi\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6347:6351  true */\n  0x01\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6321  _roles */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6322:6326  role */\n  dup6\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6335  _roles[role].hasRole */\n  0x00\n  add\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6336:6343  account */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6351  _roles[role].hasRole[account] = true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n  tag_17\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6407  _msgSender */\n  shl(0x20, tag_18)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_17:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6388:6395  account */\n  dup3\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6382:6386  role */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6431:6435  true */\n  0x01\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6424:6435  return true */\n  swap1\n  pop\n  jump(tag_13)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\ntag_16:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6473:6478  false */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6466:6478  return false */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\ntag_13:\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\ntag_15:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2931:2935  bool */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2960  _roles */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2961:2965  role */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2974  _roles[role].hasRole */\n  0x00\n  add\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2975:2982  account */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2947:2983  return _roles[role].hasRole[account] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\ntag_18:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_23:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  0x00\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_25:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_26:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_38\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_25\n  jump\t// in\ntag_38:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_27:\n    /* \"#utility.yul\":641:665   */\n  tag_40\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_26\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_41\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  0x00\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_41:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_28:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_43\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_27\n  jump\t// in\ntag_43:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_45\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_46\n  tag_23\n  jump\t// in\ntag_46:\n    /* \"#utility.yul\":932:1051   */\ntag_45:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_47\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_28\n  jump\t// in\ntag_47:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1202:1371   */\ntag_29:\n    /* \"#utility.yul\":1286:1297   */\n  0x00\n    /* \"#utility.yul\":1320:1326   */\n  dup3\n    /* \"#utility.yul\":1315:1318   */\n  dup3\n    /* \"#utility.yul\":1308:1327   */\n  mstore\n    /* \"#utility.yul\":1360:1364   */\n  0x20\n    /* \"#utility.yul\":1355:1358   */\n  dup3\n    /* \"#utility.yul\":1351:1365   */\n  add\n    /* \"#utility.yul\":1336:1365   */\n  swap1\n  pop\n    /* \"#utility.yul\":1202:1371   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1377:1540   */\ntag_30:\n    /* \"#utility.yul\":1517:1532   */\n  0x496e76616c69642061646d696e00000000000000000000000000000000000000\n    /* \"#utility.yul\":1513:1514   */\n  0x00\n    /* \"#utility.yul\":1505:1511   */\n  dup3\n    /* \"#utility.yul\":1501:1515   */\n  add\n    /* \"#utility.yul\":1494:1533   */\n  mstore\n    /* \"#utility.yul\":1377:1540   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1546:1912   */\ntag_31:\n    /* \"#utility.yul\":1688:1691   */\n  0x00\n    /* \"#utility.yul\":1709:1776   */\n  tag_51\n    /* \"#utility.yul\":1773:1775   */\n  0x0d\n    /* \"#utility.yul\":1768:1771   */\n  dup4\n    /* \"#utility.yul\":1709:1776   */\n  tag_29\n  jump\t// in\ntag_51:\n    /* \"#utility.yul\":1702:1776   */\n  swap2\n  pop\n    /* \"#utility.yul\":1785:1878   */\n  tag_52\n    /* \"#utility.yul\":1874:1877   */\n  dup3\n    /* \"#utility.yul\":1785:1878   */\n  tag_30\n  jump\t// in\ntag_52:\n    /* \"#utility.yul\":1903:1905   */\n  0x20\n    /* \"#utility.yul\":1898:1901   */\n  dup3\n    /* \"#utility.yul\":1894:1906   */\n  add\n    /* \"#utility.yul\":1887:1906   */\n  swap1\n  pop\n    /* \"#utility.yul\":1546:1912   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1918:2337   */\ntag_8:\n    /* \"#utility.yul\":2084:2088   */\n  0x00\n    /* \"#utility.yul\":2122:2124   */\n  0x20\n    /* \"#utility.yul\":2111:2120   */\n  dup3\n    /* \"#utility.yul\":2107:2125   */\n  add\n    /* \"#utility.yul\":2099:2125   */\n  swap1\n  pop\n    /* \"#utility.yul\":2171:2180   */\n  dup2\n    /* \"#utility.yul\":2165:2169   */\n  dup2\n    /* \"#utility.yul\":2161:2181   */\n  sub\n    /* \"#utility.yul\":2157:2158   */\n  0x00\n    /* \"#utility.yul\":2146:2155   */\n  dup4\n    /* \"#utility.yul\":2142:2159   */\n  add\n    /* \"#utility.yul\":2135:2182   */\n  mstore\n    /* \"#utility.yul\":2199:2330   */\n  tag_54\n    /* \"#utility.yul\":2325:2329   */\n  dup2\n    /* \"#utility.yul\":2199:2330   */\n  tag_31\n  jump\t// in\ntag_54:\n    /* \"#utility.yul\":2191:2330   */\n  swap1\n  pop\n    /* \"#utility.yul\":1918:2337   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"VaultManager.sol\":206:2098  contract VaultManager is AccessControl {... */\ntag_12:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"VaultManager.sol\":206:2098  contract VaultManager is AccessControl {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x64e7782a\n      gt\n      tag_18\n      jumpi\n      dup1\n      0xc112a08f\n      gt\n      tag_19\n      jumpi\n      dup1\n      0xc112a08f\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xd547741f\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xecad4f68\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xff9b1b11\n      eq\n      tag_17\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0x64e7782a\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x91d14854\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x9e341119\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xa217fddf\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_18:\n      dup1\n      0x2f2ff15d\n      gt\n      tag_20\n      jumpi\n      dup1\n      0x2f2ff15d\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x36568abe\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x3dd0104e\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x4f547369\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_20:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x0fbbfb55\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x248a9ca3\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2565:2767  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_3:\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      tag_24\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"VaultManager.sol\":329:407  bytes32 public constant TOKEN_CONTRACT_ROLE = keccak256(\"TOKEN_CONTRACT_ROLE\") */\n    tag_4:\n      tag_27\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n    tag_5:\n      tag_31\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      tag_34\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      tag_35\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4226:4362  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_6:\n      tag_36\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      tag_39\n      jump\t// in\n    tag_36:\n      stop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5328:5573  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_7:\n      tag_40\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_41\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_41:\n      tag_42\n      jump\t// in\n    tag_40:\n      stop\n        /* \"VaultManager.sol\":1324:1571  function addReserveUsed(uint256 amount) external onlyRole(TOKEN_CONTRACT_ROLE) {... */\n    tag_8:\n      tag_43\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_44\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      tag_46\n      jump\t// in\n    tag_43:\n      stop\n        /* \"VaultManager.sol\":988:1216  function setTotalReserve(uint256 grams) external onlyRole(VAULT_ADMIN_ROLE) {... */\n    tag_9:\n      tag_47\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_48\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_48:\n      tag_49\n      jump\t// in\n    tag_47:\n      stop\n        /* \"VaultManager.sol\":414:446  uint256 public totalReserveGrams */\n    tag_10:\n      tag_50\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      tag_52\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_11:\n      tag_54\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_55\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_55:\n      tag_56\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      tag_57\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"VaultManager.sol\":251:323  bytes32 public constant VAULT_ADMIN_ROLE = keccak256(\"VAULT_ADMIN_ROLE\") */\n    tag_12:\n      tag_58\n      tag_59\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      tag_60\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2187:2236  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_13:\n      tag_61\n      tag_62\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      tag_63\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"VaultManager.sol\":487:513  uint256 public reserveUsed */\n    tag_14:\n      tag_64\n      tag_65\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      tag_66\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4642:4780  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_15:\n      tag_67\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_68\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_68:\n      tag_69\n      jump\t// in\n    tag_67:\n      stop\n        /* \"VaultManager.sol\":1668:1901  function reduceReserveUsed(uint256 amount) external onlyRole(TOKEN_CONTRACT_ROLE) {... */\n    tag_16:\n      tag_70\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_71\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_71:\n      tag_72\n      jump\t// in\n    tag_70:\n      stop\n        /* \"VaultManager.sol\":1983:2096  function availableGrams() external view returns (uint256) {... */\n    tag_17:\n      tag_73\n      tag_74\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      tag_75\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2565:2767  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_24:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2650:2654  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2688:2720  type(IAccessControl).interfaceId */\n      0x7965db0b00000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2720  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2684  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2720  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2760  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      dup1\n      tag_77\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2724:2760  super.supportsInterface(interfaceId) */\n      tag_78\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2748:2759  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2724:2747  super.supportsInterface */\n      tag_79\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2724:2760  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_78:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2760  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n    tag_77:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2666:2760  return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2565:2767  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"VaultManager.sol\":329:407  bytes32 public constant TOKEN_CONTRACT_ROLE = keccak256(\"TOKEN_CONTRACT_ROLE\") */\n    tag_28:\n        /* \"VaultManager.sol\":375:407  keccak256(\"TOKEN_CONTRACT_ROLE\") */\n      0xd32fd1ee5f4f111da6f27444787e5200ec57a8849509c00ef2998467052b32a3\n        /* \"VaultManager.sol\":329:407  bytes32 public constant TOKEN_CONTRACT_ROLE = keccak256(\"TOKEN_CONTRACT_ROLE\") */\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n    tag_34:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3875:3882  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3907  _roles */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3913  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3908:3912  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3913  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3923  _roles[role].adminRole */\n      0x01\n      add\n      sload\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3894:3923  return _roles[role].adminRole */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4226:4362  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_39:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4300:4318  getRoleAdmin(role) */\n      tag_81\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4313:4317  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4300:4312  getRoleAdmin */\n      tag_34\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4300:4318  getRoleAdmin(role) */\n      jump\t// in\n    tag_81:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_83\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_84\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_83:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4330:4355  _grantRole(role, account) */\n      tag_86\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4341:4345  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4347:4354  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4330:4340  _grantRole */\n      tag_87\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4330:4355  _grantRole(role, account) */\n      jump\t// in\n    tag_86:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4226:4362  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5328:5573  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_42:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5443:5455  _msgSender() */\n      tag_89\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5443:5453  _msgSender */\n      tag_90\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5443:5455  _msgSender() */\n      jump\t// in\n    tag_89:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5421:5455  callerConfirmation != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5421:5439  callerConfirmation */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5421:5455  callerConfirmation != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5417:5519  if (callerConfirmation != _msgSender()) {... */\n      tag_91\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5478:5508  AccessControlBadConfirmation() */\n      mload(0x40)\n      0x6697b23200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5417:5519  if (callerConfirmation != _msgSender()) {... */\n    tag_91:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5529:5566  _revokeRole(role, callerConfirmation) */\n      tag_92\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5541:5545  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5547:5565  callerConfirmation */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5529:5540  _revokeRole */\n      tag_93\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5529:5566  _revokeRole(role, callerConfirmation) */\n      jump\t// in\n    tag_92:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5328:5573  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"VaultManager.sol\":1324:1571  function addReserveUsed(uint256 amount) external onlyRole(TOKEN_CONTRACT_ROLE) {... */\n    tag_46:\n        /* \"VaultManager.sol\":375:407  keccak256(\"TOKEN_CONTRACT_ROLE\") */\n      0xd32fd1ee5f4f111da6f27444787e5200ec57a8849509c00ef2998467052b32a3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_95\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_84\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_95:\n        /* \"VaultManager.sol\":1445:1462  totalReserveGrams */\n      sload(0x01)\n        /* \"VaultManager.sol\":1435:1441  amount */\n      dup3\n        /* \"VaultManager.sol\":1421:1432  reserveUsed */\n      sload(0x02)\n        /* \"VaultManager.sol\":1421:1441  reserveUsed + amount */\n      tag_97\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_97:\n        /* \"VaultManager.sol\":1421:1462  reserveUsed + amount <= totalReserveGrams */\n      gt\n      iszero\n        /* \"VaultManager.sol\":1413:1494  require(reserveUsed + amount <= totalReserveGrams, \"Not enough physical reserve\") */\n      tag_99\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_100\n      swap1\n      tag_101\n      jump\t// in\n    tag_100:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_99:\n        /* \"VaultManager.sol\":1519:1525  amount */\n      dup2\n        /* \"VaultManager.sol\":1504:1515  reserveUsed */\n      0x02\n      0x00\n        /* \"VaultManager.sol\":1504:1525  reserveUsed += amount */\n      dup3\n      dup3\n      sload\n      tag_102\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_102:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"VaultManager.sol\":1540:1564  ReserveUsedAdded(amount) */\n      0xa0a9af6ae1130972d7fbd89d32fd511aabd55c98d30aa1d4b23d823fd9927fe6\n        /* \"VaultManager.sol\":1557:1563  amount */\n      dup3\n        /* \"VaultManager.sol\":1540:1564  ReserveUsedAdded(amount) */\n      mload(0x40)\n      tag_103\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_103:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"VaultManager.sol\":1324:1571  function addReserveUsed(uint256 amount) external onlyRole(TOKEN_CONTRACT_ROLE) {... */\n      pop\n      pop\n      jump\t// out\n        /* \"VaultManager.sol\":988:1216  function setTotalReserve(uint256 grams) external onlyRole(VAULT_ADMIN_ROLE) {... */\n    tag_49:\n        /* \"VaultManager.sol\":294:323  keccak256(\"VAULT_ADMIN_ROLE\") */\n      0x7edcee67725a77bfa311b39349d7e96df9b23fbdbdcb328dfc17d77926920c13\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_105\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_84\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_105:\n        /* \"VaultManager.sol\":1091:1102  reserveUsed */\n      sload(0x02)\n        /* \"VaultManager.sol\":1082:1087  grams */\n      dup3\n        /* \"VaultManager.sol\":1082:1102  grams >= reserveUsed */\n      lt\n      iszero\n        /* \"VaultManager.sol\":1074:1138  require(grams >= reserveUsed, \"Reserve can't be less than used\") */\n      tag_107\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_108\n      swap1\n      tag_109\n      jump\t// in\n    tag_108:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_107:\n        /* \"VaultManager.sol\":1168:1173  grams */\n      dup2\n        /* \"VaultManager.sol\":1148:1165  totalReserveGrams */\n      0x01\n        /* \"VaultManager.sol\":1148:1173  totalReserveGrams = grams */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"VaultManager.sol\":1188:1209  ReserveUpdated(grams) */\n      0x85e15aee91823036f338b40b55f10eea0356cfb9da506963651ac73e503f47db\n        /* \"VaultManager.sol\":1203:1208  grams */\n      dup3\n        /* \"VaultManager.sol\":1188:1209  ReserveUpdated(grams) */\n      mload(0x40)\n      tag_110\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_110:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"VaultManager.sol\":988:1216  function setTotalReserve(uint256 grams) external onlyRole(VAULT_ADMIN_ROLE) {... */\n      pop\n      pop\n      jump\t// out\n        /* \"VaultManager.sol\":414:446  uint256 public totalReserveGrams */\n    tag_51:\n      sload(0x01)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_56:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2931:2935  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2960  _roles */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2961:2965  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2974  _roles[role].hasRole */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2975:2982  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2947:2983  return _roles[role].hasRole[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"VaultManager.sol\":251:323  bytes32 public constant VAULT_ADMIN_ROLE = keccak256(\"VAULT_ADMIN_ROLE\") */\n    tag_59:\n        /* \"VaultManager.sol\":294:323  keccak256(\"VAULT_ADMIN_ROLE\") */\n      0x7edcee67725a77bfa311b39349d7e96df9b23fbdbdcb328dfc17d77926920c13\n        /* \"VaultManager.sol\":251:323  bytes32 public constant VAULT_ADMIN_ROLE = keccak256(\"VAULT_ADMIN_ROLE\") */\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2187:2236  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_62:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2232:2236  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2187:2236  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n      0x00\n      shl\n      dup2\n      jump\t// out\n        /* \"VaultManager.sol\":487:513  uint256 public reserveUsed */\n    tag_65:\n      sload(0x02)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4642:4780  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_69:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4717:4735  getRoleAdmin(role) */\n      tag_112\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4730:4734  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4717:4729  getRoleAdmin */\n      tag_34\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4717:4735  getRoleAdmin(role) */\n      jump\t// in\n    tag_112:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_114\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_84\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_114:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4747:4773  _revokeRole(role, account) */\n      tag_116\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4759:4763  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4765:4772  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4747:4758  _revokeRole */\n      tag_93\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4747:4773  _revokeRole(role, account) */\n      jump\t// in\n    tag_116:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4642:4780  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"VaultManager.sol\":1668:1901  function reduceReserveUsed(uint256 amount) external onlyRole(TOKEN_CONTRACT_ROLE) {... */\n    tag_72:\n        /* \"VaultManager.sol\":375:407  keccak256(\"TOKEN_CONTRACT_ROLE\") */\n      0xd32fd1ee5f4f111da6f27444787e5200ec57a8849509c00ef2998467052b32a3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_118\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_84\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_118:\n        /* \"VaultManager.sol\":1778:1789  reserveUsed */\n      sload(0x02)\n        /* \"VaultManager.sol\":1768:1774  amount */\n      dup3\n        /* \"VaultManager.sol\":1768:1789  amount <= reserveUsed */\n      gt\n      iszero\n        /* \"VaultManager.sol\":1760:1822  require(amount <= reserveUsed, \"Cannot reduce more than used\") */\n      tag_120\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_121\n      swap1\n      tag_122\n      jump\t// in\n    tag_121:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_120:\n        /* \"VaultManager.sol\":1847:1853  amount */\n      dup2\n        /* \"VaultManager.sol\":1832:1843  reserveUsed */\n      0x02\n      0x00\n        /* \"VaultManager.sol\":1832:1853  reserveUsed -= amount */\n      dup3\n      dup3\n      sload\n      tag_123\n      swap2\n      swap1\n      tag_124\n      jump\t// in\n    tag_123:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"VaultManager.sol\":1868:1894  ReserveUsedReduced(amount) */\n      0xa480c0c45745eee4dee1efebcb3bc13dfad876477c3ebfcd594efdda76cd24c4\n        /* \"VaultManager.sol\":1887:1893  amount */\n      dup3\n        /* \"VaultManager.sol\":1868:1894  ReserveUsedReduced(amount) */\n      mload(0x40)\n      tag_125\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_125:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"VaultManager.sol\":1668:1901  function reduceReserveUsed(uint256 amount) external onlyRole(TOKEN_CONTRACT_ROLE) {... */\n      pop\n      pop\n      jump\t// out\n        /* \"VaultManager.sol\":1983:2096  function availableGrams() external view returns (uint256) {... */\n    tag_74:\n        /* \"VaultManager.sol\":2032:2039  uint256 */\n      0x00\n        /* \"VaultManager.sol\":2078:2089  reserveUsed */\n      sload(0x02)\n        /* \"VaultManager.sol\":2058:2075  totalReserveGrams */\n      sload(0x01)\n        /* \"VaultManager.sol\":2058:2089  totalReserveGrams - reserveUsed */\n      tag_127\n      swap2\n      swap1\n      tag_124\n      jump\t// in\n    tag_127:\n        /* \"VaultManager.sol\":2051:2089  return totalReserveGrams - reserveUsed */\n      swap1\n      pop\n        /* \"VaultManager.sol\":1983:2096  function availableGrams() external view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":763:909  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n    tag_79:\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":839:843  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":877:902  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":862:902  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":862:873  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":862:902  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":855:902  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":763:909  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3199:3302  function _checkRole(bytes32 role) internal view virtual {... */\n    tag_84:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3265:3295  _checkRole(role, _msgSender()) */\n      tag_130\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3276:3280  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3282:3294  _msgSender() */\n      tag_131\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3282:3292  _msgSender */\n      tag_90\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3282:3294  _msgSender() */\n      jump\t// in\n    tag_131:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3265:3275  _checkRole */\n      tag_132\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3265:3295  _checkRole(role, _msgSender()) */\n      jump\t// in\n    tag_130:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3199:3302  function _checkRole(bytes32 role) internal view virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_87:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6256:6260  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n      tag_134\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6285:6289  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6298  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6284  hasRole */\n      tag_56\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n      jump\t// in\n    tag_134:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\n      tag_135\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6347:6351  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6321  _roles */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6322:6326  role */\n      dup6\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6335  _roles[role].hasRole */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6336:6343  account */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6351  _roles[role].hasRole[account] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n      tag_136\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6407  _msgSender */\n      tag_90\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n      jump\t// in\n    tag_136:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6388:6395  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6382:6386  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6431:6435  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6424:6435  return true */\n      swap1\n      pop\n      jump(tag_133)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\n    tag_135:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6473:6478  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6466:6478  return false */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_133:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_90:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6732:7049  function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_93:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6810:6814  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6830:6852  hasRole(role, account) */\n      tag_140\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6838:6842  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6844:6851  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6830:6837  hasRole */\n      tag_56\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6830:6852  hasRole(role, account) */\n      jump\t// in\n    tag_140:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6826:7043  if (hasRole(role, account)) {... */\n      iszero\n      tag_141\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6900:6905  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6868:6874  _roles */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6868:6880  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6875:6879  role */\n      dup6\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6868:6880  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6868:6888  _roles[role].hasRole */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6868:6897  _roles[role].hasRole[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6889:6896  account */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6868:6897  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6868:6905  _roles[role].hasRole[account] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6951:6963  _msgSender() */\n      tag_142\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6951:6961  _msgSender */\n      tag_90\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6951:6963  _msgSender() */\n      jump\t// in\n    tag_142:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6924:6964  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6942:6949  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6924:6964  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6936:6940  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6924:6964  RoleRevoked(role, account, _msgSender()) */\n      0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6985:6989  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6978:6989  return true */\n      swap1\n      pop\n      jump(tag_139)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6826:7043  if (hasRole(role, account)) {... */\n    tag_141:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7027:7032  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7020:7032  return false */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6732:7049  function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_139:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3432:3629  function _checkRole(bytes32 role, address account) internal view virtual {... */\n    tag_132:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3520:3542  hasRole(role, account) */\n      tag_145\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3528:3532  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3534:3541  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3520:3527  hasRole */\n      tag_56\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3520:3542  hasRole(role, account) */\n      jump\t// in\n    tag_145:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3515:3623  if (!hasRole(role, account)) {... */\n      tag_146\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3598:3605  account */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3607:3611  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3565:3612  AccessControlUnauthorizedAccount(account, role) */\n      mload(0x40)\n      0xe2517d3f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_147\n      swap3\n      swap2\n      swap1\n      tag_148\n      jump\t// in\n    tag_147:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3515:3623  if (!hasRole(role, account)) {... */\n    tag_146:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3432:3629  function _checkRole(bytes32 role, address account) internal view virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_150:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      0x00\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_152:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_153:\n        /* \"#utility.yul\":561:584   */\n      tag_184\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_152\n      jump\t// in\n    tag_184:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_185\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      0x00\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_185:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_154:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_187\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_153\n      jump\t// in\n    tag_187:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_23:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_189\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_190\n      tag_150\n      jump\t// in\n    tag_190:\n        /* \"#utility.yul\":833:952   */\n    tag_189:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_191\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_154\n      jump\t// in\n    tag_191:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_155:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_156:\n        /* \"#utility.yul\":1268:1289   */\n      tag_194\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_155\n      jump\t// in\n    tag_194:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_26:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_196\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_156\n      jump\t// in\n    tag_196:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1595   */\n    tag_157:\n        /* \"#utility.yul\":1555:1562   */\n      0x00\n        /* \"#utility.yul\":1584:1589   */\n      dup2\n        /* \"#utility.yul\":1573:1589   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1595   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1601:1719   */\n    tag_158:\n        /* \"#utility.yul\":1688:1712   */\n      tag_199\n        /* \"#utility.yul\":1706:1711   */\n      dup2\n        /* \"#utility.yul\":1688:1712   */\n      tag_157\n      jump\t// in\n    tag_199:\n        /* \"#utility.yul\":1683:1686   */\n      dup3\n        /* \"#utility.yul\":1676:1713   */\n      mstore\n        /* \"#utility.yul\":1601:1719   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1725:1947   */\n    tag_30:\n        /* \"#utility.yul\":1818:1822   */\n      0x00\n        /* \"#utility.yul\":1856:1858   */\n      0x20\n        /* \"#utility.yul\":1845:1854   */\n      dup3\n        /* \"#utility.yul\":1841:1859   */\n      add\n        /* \"#utility.yul\":1833:1859   */\n      swap1\n      pop\n        /* \"#utility.yul\":1869:1940   */\n      tag_201\n        /* \"#utility.yul\":1937:1938   */\n      0x00\n        /* \"#utility.yul\":1926:1935   */\n      dup4\n        /* \"#utility.yul\":1922:1939   */\n      add\n        /* \"#utility.yul\":1913:1919   */\n      dup5\n        /* \"#utility.yul\":1869:1940   */\n      tag_158\n      jump\t// in\n    tag_201:\n        /* \"#utility.yul\":1725:1947   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1953:2075   */\n    tag_159:\n        /* \"#utility.yul\":2026:2050   */\n      tag_203\n        /* \"#utility.yul\":2044:2049   */\n      dup2\n        /* \"#utility.yul\":2026:2050   */\n      tag_157\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":2019:2024   */\n      dup2\n        /* \"#utility.yul\":2016:2051   */\n      eq\n        /* \"#utility.yul\":2006:2069   */\n      tag_204\n      jumpi\n        /* \"#utility.yul\":2065:2066   */\n      0x00\n        /* \"#utility.yul\":2062:2063   */\n      0x00\n        /* \"#utility.yul\":2055:2067   */\n      revert\n        /* \"#utility.yul\":2006:2069   */\n    tag_204:\n        /* \"#utility.yul\":1953:2075   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2081:2220   */\n    tag_160:\n        /* \"#utility.yul\":2127:2132   */\n      0x00\n        /* \"#utility.yul\":2165:2171   */\n      dup2\n        /* \"#utility.yul\":2152:2172   */\n      calldataload\n        /* \"#utility.yul\":2143:2172   */\n      swap1\n      pop\n        /* \"#utility.yul\":2181:2214   */\n      tag_206\n        /* \"#utility.yul\":2208:2213   */\n      dup2\n        /* \"#utility.yul\":2181:2214   */\n      tag_159\n      jump\t// in\n    tag_206:\n        /* \"#utility.yul\":2081:2220   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2226:2555   */\n    tag_33:\n        /* \"#utility.yul\":2285:2291   */\n      0x00\n        /* \"#utility.yul\":2334:2336   */\n      0x20\n        /* \"#utility.yul\":2322:2331   */\n      dup3\n        /* \"#utility.yul\":2313:2320   */\n      dup5\n        /* \"#utility.yul\":2309:2332   */\n      sub\n        /* \"#utility.yul\":2305:2337   */\n      slt\n        /* \"#utility.yul\":2302:2421   */\n      iszero\n      tag_208\n      jumpi\n        /* \"#utility.yul\":2340:2419   */\n      tag_209\n      tag_150\n      jump\t// in\n    tag_209:\n        /* \"#utility.yul\":2302:2421   */\n    tag_208:\n        /* \"#utility.yul\":2460:2461   */\n      0x00\n        /* \"#utility.yul\":2485:2538   */\n      tag_210\n        /* \"#utility.yul\":2530:2537   */\n      dup5\n        /* \"#utility.yul\":2521:2527   */\n      dup3\n        /* \"#utility.yul\":2510:2519   */\n      dup6\n        /* \"#utility.yul\":2506:2528   */\n      add\n        /* \"#utility.yul\":2485:2538   */\n      tag_160\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":2475:2538   */\n      swap2\n      pop\n        /* \"#utility.yul\":2431:2548   */\n      pop\n        /* \"#utility.yul\":2226:2555   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2561:2687   */\n    tag_161:\n        /* \"#utility.yul\":2598:2605   */\n      0x00\n        /* \"#utility.yul\":2638:2680   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2631:2636   */\n      dup3\n        /* \"#utility.yul\":2627:2681   */\n      and\n        /* \"#utility.yul\":2616:2681   */\n      swap1\n      pop\n        /* \"#utility.yul\":2561:2687   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2693:2789   */\n    tag_162:\n        /* \"#utility.yul\":2730:2737   */\n      0x00\n        /* \"#utility.yul\":2759:2783   */\n      tag_213\n        /* \"#utility.yul\":2777:2782   */\n      dup3\n        /* \"#utility.yul\":2759:2783   */\n      tag_161\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":2748:2783   */\n      swap1\n      pop\n        /* \"#utility.yul\":2693:2789   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2795:2917   */\n    tag_163:\n        /* \"#utility.yul\":2868:2892   */\n      tag_215\n        /* \"#utility.yul\":2886:2891   */\n      dup2\n        /* \"#utility.yul\":2868:2892   */\n      tag_162\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":2861:2866   */\n      dup2\n        /* \"#utility.yul\":2858:2893   */\n      eq\n        /* \"#utility.yul\":2848:2911   */\n      tag_216\n      jumpi\n        /* \"#utility.yul\":2907:2908   */\n      0x00\n        /* \"#utility.yul\":2904:2905   */\n      0x00\n        /* \"#utility.yul\":2897:2909   */\n      revert\n        /* \"#utility.yul\":2848:2911   */\n    tag_216:\n        /* \"#utility.yul\":2795:2917   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2923:3062   */\n    tag_164:\n        /* \"#utility.yul\":2969:2974   */\n      0x00\n        /* \"#utility.yul\":3007:3013   */\n      dup2\n        /* \"#utility.yul\":2994:3014   */\n      calldataload\n        /* \"#utility.yul\":2985:3014   */\n      swap1\n      pop\n        /* \"#utility.yul\":3023:3056   */\n      tag_218\n        /* \"#utility.yul\":3050:3055   */\n      dup2\n        /* \"#utility.yul\":3023:3056   */\n      tag_163\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":2923:3062   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3068:3542   */\n    tag_38:\n        /* \"#utility.yul\":3136:3142   */\n      0x00\n        /* \"#utility.yul\":3144:3150   */\n      0x00\n        /* \"#utility.yul\":3193:3195   */\n      0x40\n        /* \"#utility.yul\":3181:3190   */\n      dup4\n        /* \"#utility.yul\":3172:3179   */\n      dup6\n        /* \"#utility.yul\":3168:3191   */\n      sub\n        /* \"#utility.yul\":3164:3196   */\n      slt\n        /* \"#utility.yul\":3161:3280   */\n      iszero\n      tag_220\n      jumpi\n        /* \"#utility.yul\":3199:3278   */\n      tag_221\n      tag_150\n      jump\t// in\n    tag_221:\n        /* \"#utility.yul\":3161:3280   */\n    tag_220:\n        /* \"#utility.yul\":3319:3320   */\n      0x00\n        /* \"#utility.yul\":3344:3397   */\n      tag_222\n        /* \"#utility.yul\":3389:3396   */\n      dup6\n        /* \"#utility.yul\":3380:3386   */\n      dup3\n        /* \"#utility.yul\":3369:3378   */\n      dup7\n        /* \"#utility.yul\":3365:3387   */\n      add\n        /* \"#utility.yul\":3344:3397   */\n      tag_160\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":3334:3397   */\n      swap3\n      pop\n        /* \"#utility.yul\":3290:3407   */\n      pop\n        /* \"#utility.yul\":3446:3448   */\n      0x20\n        /* \"#utility.yul\":3472:3525   */\n      tag_223\n        /* \"#utility.yul\":3517:3524   */\n      dup6\n        /* \"#utility.yul\":3508:3514   */\n      dup3\n        /* \"#utility.yul\":3497:3506   */\n      dup7\n        /* \"#utility.yul\":3493:3515   */\n      add\n        /* \"#utility.yul\":3472:3525   */\n      tag_164\n      jump\t// in\n    tag_223:\n        /* \"#utility.yul\":3462:3525   */\n      swap2\n      pop\n        /* \"#utility.yul\":3417:3535   */\n      pop\n        /* \"#utility.yul\":3068:3542   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3548:3625   */\n    tag_165:\n        /* \"#utility.yul\":3585:3592   */\n      0x00\n        /* \"#utility.yul\":3614:3619   */\n      dup2\n        /* \"#utility.yul\":3603:3619   */\n      swap1\n      pop\n        /* \"#utility.yul\":3548:3625   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3631:3753   */\n    tag_166:\n        /* \"#utility.yul\":3704:3728   */\n      tag_226\n        /* \"#utility.yul\":3722:3727   */\n      dup2\n        /* \"#utility.yul\":3704:3728   */\n      tag_165\n      jump\t// in\n    tag_226:\n        /* \"#utility.yul\":3697:3702   */\n      dup2\n        /* \"#utility.yul\":3694:3729   */\n      eq\n        /* \"#utility.yul\":3684:3747   */\n      tag_227\n      jumpi\n        /* \"#utility.yul\":3743:3744   */\n      0x00\n        /* \"#utility.yul\":3740:3741   */\n      0x00\n        /* \"#utility.yul\":3733:3745   */\n      revert\n        /* \"#utility.yul\":3684:3747   */\n    tag_227:\n        /* \"#utility.yul\":3631:3753   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3759:3898   */\n    tag_167:\n        /* \"#utility.yul\":3805:3810   */\n      0x00\n        /* \"#utility.yul\":3843:3849   */\n      dup2\n        /* \"#utility.yul\":3830:3850   */\n      calldataload\n        /* \"#utility.yul\":3821:3850   */\n      swap1\n      pop\n        /* \"#utility.yul\":3859:3892   */\n      tag_229\n        /* \"#utility.yul\":3886:3891   */\n      dup2\n        /* \"#utility.yul\":3859:3892   */\n      tag_166\n      jump\t// in\n    tag_229:\n        /* \"#utility.yul\":3759:3898   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3904:4233   */\n    tag_45:\n        /* \"#utility.yul\":3963:3969   */\n      0x00\n        /* \"#utility.yul\":4012:4014   */\n      0x20\n        /* \"#utility.yul\":4000:4009   */\n      dup3\n        /* \"#utility.yul\":3991:3998   */\n      dup5\n        /* \"#utility.yul\":3987:4010   */\n      sub\n        /* \"#utility.yul\":3983:4015   */\n      slt\n        /* \"#utility.yul\":3980:4099   */\n      iszero\n      tag_231\n      jumpi\n        /* \"#utility.yul\":4018:4097   */\n      tag_232\n      tag_150\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":3980:4099   */\n    tag_231:\n        /* \"#utility.yul\":4138:4139   */\n      0x00\n        /* \"#utility.yul\":4163:4216   */\n      tag_233\n        /* \"#utility.yul\":4208:4215   */\n      dup5\n        /* \"#utility.yul\":4199:4205   */\n      dup3\n        /* \"#utility.yul\":4188:4197   */\n      dup6\n        /* \"#utility.yul\":4184:4206   */\n      add\n        /* \"#utility.yul\":4163:4216   */\n      tag_167\n      jump\t// in\n    tag_233:\n        /* \"#utility.yul\":4153:4216   */\n      swap2\n      pop\n        /* \"#utility.yul\":4109:4226   */\n      pop\n        /* \"#utility.yul\":3904:4233   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4239:4357   */\n    tag_168:\n        /* \"#utility.yul\":4326:4350   */\n      tag_235\n        /* \"#utility.yul\":4344:4349   */\n      dup2\n        /* \"#utility.yul\":4326:4350   */\n      tag_165\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":4321:4324   */\n      dup3\n        /* \"#utility.yul\":4314:4351   */\n      mstore\n        /* \"#utility.yul\":4239:4357   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4363:4585   */\n    tag_53:\n        /* \"#utility.yul\":4456:4460   */\n      0x00\n        /* \"#utility.yul\":4494:4496   */\n      0x20\n        /* \"#utility.yul\":4483:4492   */\n      dup3\n        /* \"#utility.yul\":4479:4497   */\n      add\n        /* \"#utility.yul\":4471:4497   */\n      swap1\n      pop\n        /* \"#utility.yul\":4507:4578   */\n      tag_237\n        /* \"#utility.yul\":4575:4576   */\n      0x00\n        /* \"#utility.yul\":4564:4573   */\n      dup4\n        /* \"#utility.yul\":4560:4577   */\n      add\n        /* \"#utility.yul\":4551:4557   */\n      dup5\n        /* \"#utility.yul\":4507:4578   */\n      tag_168\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":4363:4585   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4591:4771   */\n    tag_169:\n        /* \"#utility.yul\":4639:4716   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4636:4637   */\n      0x00\n        /* \"#utility.yul\":4629:4717   */\n      mstore\n        /* \"#utility.yul\":4736:4740   */\n      0x11\n        /* \"#utility.yul\":4733:4734   */\n      0x04\n        /* \"#utility.yul\":4726:4741   */\n      mstore\n        /* \"#utility.yul\":4760:4764   */\n      0x24\n        /* \"#utility.yul\":4757:4758   */\n      0x00\n        /* \"#utility.yul\":4750:4765   */\n      revert\n        /* \"#utility.yul\":4777:4968   */\n    tag_98:\n        /* \"#utility.yul\":4817:4820   */\n      0x00\n        /* \"#utility.yul\":4836:4856   */\n      tag_240\n        /* \"#utility.yul\":4854:4855   */\n      dup3\n        /* \"#utility.yul\":4836:4856   */\n      tag_165\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":4831:4856   */\n      swap2\n      pop\n        /* \"#utility.yul\":4870:4890   */\n      tag_241\n        /* \"#utility.yul\":4888:4889   */\n      dup4\n        /* \"#utility.yul\":4870:4890   */\n      tag_165\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":4865:4890   */\n      swap3\n      pop\n        /* \"#utility.yul\":4913:4914   */\n      dup3\n        /* \"#utility.yul\":4910:4911   */\n      dup3\n        /* \"#utility.yul\":4906:4915   */\n      add\n        /* \"#utility.yul\":4899:4915   */\n      swap1\n      pop\n        /* \"#utility.yul\":4934:4937   */\n      dup1\n        /* \"#utility.yul\":4931:4932   */\n      dup3\n        /* \"#utility.yul\":4928:4938   */\n      gt\n        /* \"#utility.yul\":4925:4961   */\n      iszero\n      tag_242\n      jumpi\n        /* \"#utility.yul\":4941:4959   */\n      tag_243\n      tag_169\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":4925:4961   */\n    tag_242:\n        /* \"#utility.yul\":4777:4968   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4974:5143   */\n    tag_170:\n        /* \"#utility.yul\":5058:5069   */\n      0x00\n        /* \"#utility.yul\":5092:5098   */\n      dup3\n        /* \"#utility.yul\":5087:5090   */\n      dup3\n        /* \"#utility.yul\":5080:5099   */\n      mstore\n        /* \"#utility.yul\":5132:5136   */\n      0x20\n        /* \"#utility.yul\":5127:5130   */\n      dup3\n        /* \"#utility.yul\":5123:5137   */\n      add\n        /* \"#utility.yul\":5108:5137   */\n      swap1\n      pop\n        /* \"#utility.yul\":4974:5143   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5149:5326   */\n    tag_171:\n        /* \"#utility.yul\":5289:5318   */\n      0x4e6f7420656e6f75676820706879736963616c20726573657276650000000000\n        /* \"#utility.yul\":5285:5286   */\n      0x00\n        /* \"#utility.yul\":5277:5283   */\n      dup3\n        /* \"#utility.yul\":5273:5287   */\n      add\n        /* \"#utility.yul\":5266:5319   */\n      mstore\n        /* \"#utility.yul\":5149:5326   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5332:5698   */\n    tag_172:\n        /* \"#utility.yul\":5474:5477   */\n      0x00\n        /* \"#utility.yul\":5495:5562   */\n      tag_247\n        /* \"#utility.yul\":5559:5561   */\n      0x1b\n        /* \"#utility.yul\":5554:5557   */\n      dup4\n        /* \"#utility.yul\":5495:5562   */\n      tag_170\n      jump\t// in\n    tag_247:\n        /* \"#utility.yul\":5488:5562   */\n      swap2\n      pop\n        /* \"#utility.yul\":5571:5664   */\n      tag_248\n        /* \"#utility.yul\":5660:5663   */\n      dup3\n        /* \"#utility.yul\":5571:5664   */\n      tag_171\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":5689:5691   */\n      0x20\n        /* \"#utility.yul\":5684:5687   */\n      dup3\n        /* \"#utility.yul\":5680:5692   */\n      add\n        /* \"#utility.yul\":5673:5692   */\n      swap1\n      pop\n        /* \"#utility.yul\":5332:5698   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5704:6123   */\n    tag_101:\n        /* \"#utility.yul\":5870:5874   */\n      0x00\n        /* \"#utility.yul\":5908:5910   */\n      0x20\n        /* \"#utility.yul\":5897:5906   */\n      dup3\n        /* \"#utility.yul\":5893:5911   */\n      add\n        /* \"#utility.yul\":5885:5911   */\n      swap1\n      pop\n        /* \"#utility.yul\":5957:5966   */\n      dup2\n        /* \"#utility.yul\":5951:5955   */\n      dup2\n        /* \"#utility.yul\":5947:5967   */\n      sub\n        /* \"#utility.yul\":5943:5944   */\n      0x00\n        /* \"#utility.yul\":5932:5941   */\n      dup4\n        /* \"#utility.yul\":5928:5945   */\n      add\n        /* \"#utility.yul\":5921:5968   */\n      mstore\n        /* \"#utility.yul\":5985:6116   */\n      tag_250\n        /* \"#utility.yul\":6111:6115   */\n      dup2\n        /* \"#utility.yul\":5985:6116   */\n      tag_172\n      jump\t// in\n    tag_250:\n        /* \"#utility.yul\":5977:6116   */\n      swap1\n      pop\n        /* \"#utility.yul\":5704:6123   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6129:6310   */\n    tag_173:\n        /* \"#utility.yul\":6269:6302   */\n      0x526573657276652063616e2774206265206c657373207468616e207573656400\n        /* \"#utility.yul\":6265:6266   */\n      0x00\n        /* \"#utility.yul\":6257:6263   */\n      dup3\n        /* \"#utility.yul\":6253:6267   */\n      add\n        /* \"#utility.yul\":6246:6303   */\n      mstore\n        /* \"#utility.yul\":6129:6310   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6316:6682   */\n    tag_174:\n        /* \"#utility.yul\":6458:6461   */\n      0x00\n        /* \"#utility.yul\":6479:6546   */\n      tag_253\n        /* \"#utility.yul\":6543:6545   */\n      0x1f\n        /* \"#utility.yul\":6538:6541   */\n      dup4\n        /* \"#utility.yul\":6479:6546   */\n      tag_170\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":6472:6546   */\n      swap2\n      pop\n        /* \"#utility.yul\":6555:6648   */\n      tag_254\n        /* \"#utility.yul\":6644:6647   */\n      dup3\n        /* \"#utility.yul\":6555:6648   */\n      tag_173\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":6673:6675   */\n      0x20\n        /* \"#utility.yul\":6668:6671   */\n      dup3\n        /* \"#utility.yul\":6664:6676   */\n      add\n        /* \"#utility.yul\":6657:6676   */\n      swap1\n      pop\n        /* \"#utility.yul\":6316:6682   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6688:7107   */\n    tag_109:\n        /* \"#utility.yul\":6854:6858   */\n      0x00\n        /* \"#utility.yul\":6892:6894   */\n      0x20\n        /* \"#utility.yul\":6881:6890   */\n      dup3\n        /* \"#utility.yul\":6877:6895   */\n      add\n        /* \"#utility.yul\":6869:6895   */\n      swap1\n      pop\n        /* \"#utility.yul\":6941:6950   */\n      dup2\n        /* \"#utility.yul\":6935:6939   */\n      dup2\n        /* \"#utility.yul\":6931:6951   */\n      sub\n        /* \"#utility.yul\":6927:6928   */\n      0x00\n        /* \"#utility.yul\":6916:6925   */\n      dup4\n        /* \"#utility.yul\":6912:6929   */\n      add\n        /* \"#utility.yul\":6905:6952   */\n      mstore\n        /* \"#utility.yul\":6969:7100   */\n      tag_256\n        /* \"#utility.yul\":7095:7099   */\n      dup2\n        /* \"#utility.yul\":6969:7100   */\n      tag_174\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":6961:7100   */\n      swap1\n      pop\n        /* \"#utility.yul\":6688:7107   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7113:7291   */\n    tag_175:\n        /* \"#utility.yul\":7253:7283   */\n      0x43616e6e6f7420726564756365206d6f7265207468616e207573656400000000\n        /* \"#utility.yul\":7249:7250   */\n      0x00\n        /* \"#utility.yul\":7241:7247   */\n      dup3\n        /* \"#utility.yul\":7237:7251   */\n      add\n        /* \"#utility.yul\":7230:7284   */\n      mstore\n        /* \"#utility.yul\":7113:7291   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7297:7663   */\n    tag_176:\n        /* \"#utility.yul\":7439:7442   */\n      0x00\n        /* \"#utility.yul\":7460:7527   */\n      tag_259\n        /* \"#utility.yul\":7524:7526   */\n      0x1c\n        /* \"#utility.yul\":7519:7522   */\n      dup4\n        /* \"#utility.yul\":7460:7527   */\n      tag_170\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":7453:7527   */\n      swap2\n      pop\n        /* \"#utility.yul\":7536:7629   */\n      tag_260\n        /* \"#utility.yul\":7625:7628   */\n      dup3\n        /* \"#utility.yul\":7536:7629   */\n      tag_175\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":7654:7656   */\n      0x20\n        /* \"#utility.yul\":7649:7652   */\n      dup3\n        /* \"#utility.yul\":7645:7657   */\n      add\n        /* \"#utility.yul\":7638:7657   */\n      swap1\n      pop\n        /* \"#utility.yul\":7297:7663   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7669:8088   */\n    tag_122:\n        /* \"#utility.yul\":7835:7839   */\n      0x00\n        /* \"#utility.yul\":7873:7875   */\n      0x20\n        /* \"#utility.yul\":7862:7871   */\n      dup3\n        /* \"#utility.yul\":7858:7876   */\n      add\n        /* \"#utility.yul\":7850:7876   */\n      swap1\n      pop\n        /* \"#utility.yul\":7922:7931   */\n      dup2\n        /* \"#utility.yul\":7916:7920   */\n      dup2\n        /* \"#utility.yul\":7912:7932   */\n      sub\n        /* \"#utility.yul\":7908:7909   */\n      0x00\n        /* \"#utility.yul\":7897:7906   */\n      dup4\n        /* \"#utility.yul\":7893:7910   */\n      add\n        /* \"#utility.yul\":7886:7933   */\n      mstore\n        /* \"#utility.yul\":7950:8081   */\n      tag_262\n        /* \"#utility.yul\":8076:8080   */\n      dup2\n        /* \"#utility.yul\":7950:8081   */\n      tag_176\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":7942:8081   */\n      swap1\n      pop\n        /* \"#utility.yul\":7669:8088   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8094:8288   */\n    tag_124:\n        /* \"#utility.yul\":8134:8138   */\n      0x00\n        /* \"#utility.yul\":8154:8174   */\n      tag_264\n        /* \"#utility.yul\":8172:8173   */\n      dup3\n        /* \"#utility.yul\":8154:8174   */\n      tag_165\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":8149:8174   */\n      swap2\n      pop\n        /* \"#utility.yul\":8188:8208   */\n      tag_265\n        /* \"#utility.yul\":8206:8207   */\n      dup4\n        /* \"#utility.yul\":8188:8208   */\n      tag_165\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":8183:8208   */\n      swap3\n      pop\n        /* \"#utility.yul\":8232:8233   */\n      dup3\n        /* \"#utility.yul\":8229:8230   */\n      dup3\n        /* \"#utility.yul\":8225:8234   */\n      sub\n        /* \"#utility.yul\":8217:8234   */\n      swap1\n      pop\n        /* \"#utility.yul\":8256:8257   */\n      dup2\n        /* \"#utility.yul\":8250:8254   */\n      dup2\n        /* \"#utility.yul\":8247:8258   */\n      gt\n        /* \"#utility.yul\":8244:8281   */\n      iszero\n      tag_266\n      jumpi\n        /* \"#utility.yul\":8261:8279   */\n      tag_267\n      tag_169\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":8244:8281   */\n    tag_266:\n        /* \"#utility.yul\":8094:8288   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8294:8412   */\n    tag_177:\n        /* \"#utility.yul\":8381:8405   */\n      tag_269\n        /* \"#utility.yul\":8399:8404   */\n      dup2\n        /* \"#utility.yul\":8381:8405   */\n      tag_162\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":8376:8379   */\n      dup3\n        /* \"#utility.yul\":8369:8406   */\n      mstore\n        /* \"#utility.yul\":8294:8412   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8418:8750   */\n    tag_148:\n        /* \"#utility.yul\":8539:8543   */\n      0x00\n        /* \"#utility.yul\":8577:8579   */\n      0x40\n        /* \"#utility.yul\":8566:8575   */\n      dup3\n        /* \"#utility.yul\":8562:8580   */\n      add\n        /* \"#utility.yul\":8554:8580   */\n      swap1\n      pop\n        /* \"#utility.yul\":8590:8661   */\n      tag_271\n        /* \"#utility.yul\":8658:8659   */\n      0x00\n        /* \"#utility.yul\":8647:8656   */\n      dup4\n        /* \"#utility.yul\":8643:8660   */\n      add\n        /* \"#utility.yul\":8634:8640   */\n      dup6\n        /* \"#utility.yul\":8590:8661   */\n      tag_177\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":8671:8743   */\n      tag_272\n        /* \"#utility.yul\":8739:8741   */\n      0x20\n        /* \"#utility.yul\":8728:8737   */\n      dup4\n        /* \"#utility.yul\":8724:8742   */\n      add\n        /* \"#utility.yul\":8715:8721   */\n      dup5\n        /* \"#utility.yul\":8671:8743   */\n      tag_158\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":8418:8750   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220ce98851f138beb9738db75883288cb82641e74e13f1fa7eb39191ef5cbfb347064736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_502": {
									"entryPoint": null,
									"id": 502,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_grantRole_256": {
									"entryPoint": 233,
									"id": 256,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_msgSender_390": {
									"entryPoint": 577,
									"id": 390,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@hasRole_80": {
									"entryPoint": 478,
									"id": 80,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 658,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 678,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_61dd2a6cf2ead59b09922a19257b57dec215ba2abf4fa7a561c379f2a10b24a5_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 777,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_61dd2a6cf2ead59b09922a19257b57dec215ba2abf4fa7a561c379f2a10b24a5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 811,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 721,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 619,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 588,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 584,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_61dd2a6cf2ead59b09922a19257b57dec215ba2abf4fa7a561c379f2a10b24a5": {
									"entryPoint": 737,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 636,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:2340:6",
										"nodeType": "YulBlock",
										"src": "0:2340:6",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:6",
													"nodeType": "YulBlock",
													"src": "47:35:6",
													"statements": [
														{
															"nativeSrc": "57:19:6",
															"nodeType": "YulAssignment",
															"src": "57:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:6",
																		"nodeType": "YulLiteral",
																		"src": "73:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:6"
																},
																"nativeSrc": "67:9:6",
																"nodeType": "YulFunctionCall",
																"src": "67:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:6",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:6",
														"nodeType": "YulTypedName",
														"src": "40:6:6",
														"type": ""
													}
												],
												"src": "7:75:6"
											},
											{
												"body": {
													"nativeSrc": "177:28:6",
													"nodeType": "YulBlock",
													"src": "177:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:6",
																		"nodeType": "YulLiteral",
																		"src": "194:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:6",
																		"nodeType": "YulLiteral",
																		"src": "197:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:6"
																},
																"nativeSrc": "187:12:6",
																"nodeType": "YulFunctionCall",
																"src": "187:12:6"
															},
															"nativeSrc": "187:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:6"
											},
											{
												"body": {
													"nativeSrc": "300:28:6",
													"nodeType": "YulBlock",
													"src": "300:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:6",
																		"nodeType": "YulLiteral",
																		"src": "317:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:6",
																		"nodeType": "YulLiteral",
																		"src": "320:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:6"
																},
																"nativeSrc": "310:12:6",
																"nodeType": "YulFunctionCall",
																"src": "310:12:6"
															},
															"nativeSrc": "310:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:6"
											},
											{
												"body": {
													"nativeSrc": "379:81:6",
													"nodeType": "YulBlock",
													"src": "379:81:6",
													"statements": [
														{
															"nativeSrc": "389:65:6",
															"nodeType": "YulAssignment",
															"src": "389:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:6",
																		"nodeType": "YulLiteral",
																		"src": "411:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:6"
																},
																"nativeSrc": "400:54:6",
																"nodeType": "YulFunctionCall",
																"src": "400:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:6",
														"nodeType": "YulTypedName",
														"src": "361:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:6",
														"nodeType": "YulTypedName",
														"src": "371:7:6",
														"type": ""
													}
												],
												"src": "334:126:6"
											},
											{
												"body": {
													"nativeSrc": "511:51:6",
													"nodeType": "YulBlock",
													"src": "511:51:6",
													"statements": [
														{
															"nativeSrc": "521:35:6",
															"nodeType": "YulAssignment",
															"src": "521:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:6"
																},
																"nativeSrc": "532:24:6",
																"nodeType": "YulFunctionCall",
																"src": "532:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:6",
														"nodeType": "YulTypedName",
														"src": "493:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:6",
														"nodeType": "YulTypedName",
														"src": "503:7:6",
														"type": ""
													}
												],
												"src": "466:96:6"
											},
											{
												"body": {
													"nativeSrc": "611:79:6",
													"nodeType": "YulBlock",
													"src": "611:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:6",
																"nodeType": "YulBlock",
																"src": "668:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:6",
																					"nodeType": "YulLiteral",
																					"src": "677:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:6",
																					"nodeType": "YulLiteral",
																					"src": "680:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:6"
																			},
																			"nativeSrc": "670:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:6"
																		},
																		"nativeSrc": "670:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:6"
																				},
																				"nativeSrc": "641:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:6"
																		},
																		"nativeSrc": "631:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:6"
																},
																"nativeSrc": "624:43:6",
																"nodeType": "YulFunctionCall",
																"src": "624:43:6"
															},
															"nativeSrc": "621:63:6",
															"nodeType": "YulIf",
															"src": "621:63:6"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:6",
														"nodeType": "YulTypedName",
														"src": "604:5:6",
														"type": ""
													}
												],
												"src": "568:122:6"
											},
											{
												"body": {
													"nativeSrc": "759:80:6",
													"nodeType": "YulBlock",
													"src": "759:80:6",
													"statements": [
														{
															"nativeSrc": "769:22:6",
															"nodeType": "YulAssignment",
															"src": "769:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:6"
																},
																"nativeSrc": "778:13:6",
																"nodeType": "YulFunctionCall",
																"src": "778:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:6"
																},
																"nativeSrc": "800:33:6",
																"nodeType": "YulFunctionCall",
																"src": "800:33:6"
															},
															"nativeSrc": "800:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:6"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:6",
														"nodeType": "YulTypedName",
														"src": "737:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:6",
														"nodeType": "YulTypedName",
														"src": "745:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:6",
														"nodeType": "YulTypedName",
														"src": "753:5:6",
														"type": ""
													}
												],
												"src": "696:143:6"
											},
											{
												"body": {
													"nativeSrc": "922:274:6",
													"nodeType": "YulBlock",
													"src": "922:274:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "968:83:6",
																"nodeType": "YulBlock",
																"src": "968:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "970:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:6"
																			},
																			"nativeSrc": "970:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:6"
																		},
																		"nativeSrc": "970:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "943:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "952:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "939:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:6"
																		},
																		"nativeSrc": "939:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "964:2:6",
																		"nodeType": "YulLiteral",
																		"src": "964:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "935:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:6"
																},
																"nativeSrc": "935:32:6",
																"nodeType": "YulFunctionCall",
																"src": "935:32:6"
															},
															"nativeSrc": "932:119:6",
															"nodeType": "YulIf",
															"src": "932:119:6"
														},
														{
															"nativeSrc": "1061:128:6",
															"nodeType": "YulBlock",
															"src": "1061:128:6",
															"statements": [
																{
																	"nativeSrc": "1076:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1090:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1080:6:6",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1105:74:6",
																	"nodeType": "YulAssignment",
																	"src": "1105:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1151:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1162:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1147:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:6"
																				},
																				"nativeSrc": "1147:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1171:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1115:31:6",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:6"
																		},
																		"nativeSrc": "1115:64:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1105:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "845:351:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "892:9:6",
														"nodeType": "YulTypedName",
														"src": "892:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "903:7:6",
														"nodeType": "YulTypedName",
														"src": "903:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "915:6:6",
														"nodeType": "YulTypedName",
														"src": "915:6:6",
														"type": ""
													}
												],
												"src": "845:351:6"
											},
											{
												"body": {
													"nativeSrc": "1298:73:6",
													"nodeType": "YulBlock",
													"src": "1298:73:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1315:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "1315:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1320:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1320:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1308:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1308:6:6"
																},
																"nativeSrc": "1308:19:6",
																"nodeType": "YulFunctionCall",
																"src": "1308:19:6"
															},
															"nativeSrc": "1308:19:6",
															"nodeType": "YulExpressionStatement",
															"src": "1308:19:6"
														},
														{
															"nativeSrc": "1336:29:6",
															"nodeType": "YulAssignment",
															"src": "1336:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1355:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "1355:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1360:4:6",
																		"nodeType": "YulLiteral",
																		"src": "1360:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1351:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1351:3:6"
																},
																"nativeSrc": "1351:14:6",
																"nodeType": "YulFunctionCall",
																"src": "1351:14:6"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "1336:11:6",
																	"nodeType": "YulIdentifier",
																	"src": "1336:11:6"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "1202:169:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1270:3:6",
														"nodeType": "YulTypedName",
														"src": "1270:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1275:6:6",
														"nodeType": "YulTypedName",
														"src": "1275:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "1286:11:6",
														"nodeType": "YulTypedName",
														"src": "1286:11:6",
														"type": ""
													}
												],
												"src": "1202:169:6"
											},
											{
												"body": {
													"nativeSrc": "1483:57:6",
													"nodeType": "YulBlock",
													"src": "1483:57:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "1505:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1505:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1513:1:6",
																				"nodeType": "YulLiteral",
																				"src": "1513:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1501:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1501:3:6"
																		},
																		"nativeSrc": "1501:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1501:14:6"
																	},
																	{
																		"hexValue": "496e76616c69642061646d696e",
																		"kind": "string",
																		"nativeSrc": "1517:15:6",
																		"nodeType": "YulLiteral",
																		"src": "1517:15:6",
																		"type": "",
																		"value": "Invalid admin"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1494:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1494:6:6"
																},
																"nativeSrc": "1494:39:6",
																"nodeType": "YulFunctionCall",
																"src": "1494:39:6"
															},
															"nativeSrc": "1494:39:6",
															"nodeType": "YulExpressionStatement",
															"src": "1494:39:6"
														}
													]
												},
												"name": "store_literal_in_memory_61dd2a6cf2ead59b09922a19257b57dec215ba2abf4fa7a561c379f2a10b24a5",
												"nativeSrc": "1377:163:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "1475:6:6",
														"nodeType": "YulTypedName",
														"src": "1475:6:6",
														"type": ""
													}
												],
												"src": "1377:163:6"
											},
											{
												"body": {
													"nativeSrc": "1692:220:6",
													"nodeType": "YulBlock",
													"src": "1692:220:6",
													"statements": [
														{
															"nativeSrc": "1702:74:6",
															"nodeType": "YulAssignment",
															"src": "1702:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1768:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "1768:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1773:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1773:2:6",
																		"type": "",
																		"value": "13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1709:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "1709:58:6"
																},
																"nativeSrc": "1709:67:6",
																"nodeType": "YulFunctionCall",
																"src": "1709:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "1702:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1702:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1874:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "1874:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_61dd2a6cf2ead59b09922a19257b57dec215ba2abf4fa7a561c379f2a10b24a5",
																	"nativeSrc": "1785:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "1785:88:6"
																},
																"nativeSrc": "1785:93:6",
																"nodeType": "YulFunctionCall",
																"src": "1785:93:6"
															},
															"nativeSrc": "1785:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "1785:93:6"
														},
														{
															"nativeSrc": "1887:19:6",
															"nodeType": "YulAssignment",
															"src": "1887:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1898:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "1898:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1903:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1903:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1894:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1894:3:6"
																},
																"nativeSrc": "1894:12:6",
																"nodeType": "YulFunctionCall",
																"src": "1894:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "1887:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1887:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_61dd2a6cf2ead59b09922a19257b57dec215ba2abf4fa7a561c379f2a10b24a5_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "1546:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1680:3:6",
														"nodeType": "YulTypedName",
														"src": "1680:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "1688:3:6",
														"nodeType": "YulTypedName",
														"src": "1688:3:6",
														"type": ""
													}
												],
												"src": "1546:366:6"
											},
											{
												"body": {
													"nativeSrc": "2089:248:6",
													"nodeType": "YulBlock",
													"src": "2089:248:6",
													"statements": [
														{
															"nativeSrc": "2099:26:6",
															"nodeType": "YulAssignment",
															"src": "2099:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2111:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2111:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2122:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2122:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2107:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2107:3:6"
																},
																"nativeSrc": "2107:18:6",
																"nodeType": "YulFunctionCall",
																"src": "2107:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2099:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "2099:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2146:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2146:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2157:1:6",
																				"nodeType": "YulLiteral",
																				"src": "2157:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2142:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2142:3:6"
																		},
																		"nativeSrc": "2142:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2142:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2165:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "2165:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2171:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2171:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2161:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2161:3:6"
																		},
																		"nativeSrc": "2161:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2161:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2135:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2135:6:6"
																},
																"nativeSrc": "2135:47:6",
																"nodeType": "YulFunctionCall",
																"src": "2135:47:6"
															},
															"nativeSrc": "2135:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "2135:47:6"
														},
														{
															"nativeSrc": "2191:139:6",
															"nodeType": "YulAssignment",
															"src": "2191:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "2325:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "2325:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_61dd2a6cf2ead59b09922a19257b57dec215ba2abf4fa7a561c379f2a10b24a5_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2199:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "2199:124:6"
																},
																"nativeSrc": "2199:131:6",
																"nodeType": "YulFunctionCall",
																"src": "2199:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2191:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "2191:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_61dd2a6cf2ead59b09922a19257b57dec215ba2abf4fa7a561c379f2a10b24a5__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1918:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2069:9:6",
														"nodeType": "YulTypedName",
														"src": "2069:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2084:4:6",
														"nodeType": "YulTypedName",
														"src": "2084:4:6",
														"type": ""
													}
												],
												"src": "1918:419:6"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_61dd2a6cf2ead59b09922a19257b57dec215ba2abf4fa7a561c379f2a10b24a5(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid admin\")\n\n    }\n\n    function abi_encode_t_stringliteral_61dd2a6cf2ead59b09922a19257b57dec215ba2abf4fa7a561c379f2a10b24a5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 13)\n        store_literal_in_memory_61dd2a6cf2ead59b09922a19257b57dec215ba2abf4fa7a561c379f2a10b24a5(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_61dd2a6cf2ead59b09922a19257b57dec215ba2abf4fa7a561c379f2a10b24a5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_61dd2a6cf2ead59b09922a19257b57dec215ba2abf4fa7a561c379f2a10b24a5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b506040516111eb3803806111eb833981810160405281019061003191906102a6565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361009f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100969061032b565b60405180910390fd5b6100b15f5f1b826100e960201b60201c565b506100e27f7edcee67725a77bfa311b39349d7e96df9b23fbdbdcb328dfc17d77926920c13826100e960201b60201c565b5050610349565b5f6100fa83836101de60201b60201c565b6101d45760015f5f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555061017161024160201b60201c565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a4600190506101d8565b5f90505b92915050565b5f5f5f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f33905090565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6102758261024c565b9050919050565b6102858161026b565b811461028f575f5ffd5b50565b5f815190506102a08161027c565b92915050565b5f602082840312156102bb576102ba610248565b5b5f6102c884828501610292565b91505092915050565b5f82825260208201905092915050565b7f496e76616c69642061646d696e000000000000000000000000000000000000005f82015250565b5f610315600d836102d1565b9150610320826102e1565b602082019050919050565b5f6020820190508181035f83015261034281610309565b9050919050565b610e95806103565f395ff3fe608060405234801561000f575f5ffd5b50600436106100f3575f3560e01c806364e7782a11610095578063c112a08f11610064578063c112a08f1461026f578063d547741f1461028d578063ecad4f68146102a9578063ff9b1b11146102c5576100f3565b806364e7782a146101e557806391d14854146102035780639e34111914610233578063a217fddf14610251576100f3565b80632f2ff15d116100d15780632f2ff15d1461017557806336568abe146101915780633dd0104e146101ad5780634f547369146101c9576100f3565b806301ffc9a7146100f75780630fbbfb5514610127578063248a9ca314610145575b5f5ffd5b610111600480360381019061010c9190610a4c565b6102e3565b60405161011e9190610a91565b60405180910390f35b61012f61035c565b60405161013c9190610ac2565b60405180910390f35b61015f600480360381019061015a9190610b05565b610380565b60405161016c9190610ac2565b60405180910390f35b61018f600480360381019061018a9190610b8a565b61039c565b005b6101ab60048036038101906101a69190610b8a565b6103be565b005b6101c760048036038101906101c29190610bfb565b610439565b005b6101e360048036038101906101de9190610bfb565b610508565b005b6101ed6105b9565b6040516101fa9190610c35565b60405180910390f35b61021d60048036038101906102189190610b8a565b6105bf565b60405161022a9190610a91565b60405180910390f35b61023b610622565b6040516102489190610ac2565b60405180910390f35b610259610646565b6040516102669190610ac2565b60405180910390f35b61027761064c565b6040516102849190610c35565b60405180910390f35b6102a760048036038101906102a29190610b8a565b610652565b005b6102c360048036038101906102be9190610bfb565b610674565b005b6102cd610736565b6040516102da9190610c35565b60405180910390f35b5f7f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061035557506103548261074c565b5b9050919050565b7fd32fd1ee5f4f111da6f27444787e5200ec57a8849509c00ef2998467052b32a381565b5f5f5f8381526020019081526020015f20600101549050919050565b6103a582610380565b6103ae816107b5565b6103b883836107c9565b50505050565b6103c66108b2565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461042a576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61043482826108b9565b505050565b7fd32fd1ee5f4f111da6f27444787e5200ec57a8849509c00ef2998467052b32a3610463816107b5565b600154826002546104749190610c7b565b11156104b5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104ac90610d08565b60405180910390fd5b8160025f8282546104c69190610c7b565b925050819055507fa0a9af6ae1130972d7fbd89d32fd511aabd55c98d30aa1d4b23d823fd9927fe6826040516104fc9190610c35565b60405180910390a15050565b7f7edcee67725a77bfa311b39349d7e96df9b23fbdbdcb328dfc17d77926920c13610532816107b5565b600254821015610577576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056e90610d70565b60405180910390fd5b816001819055507f85e15aee91823036f338b40b55f10eea0356cfb9da506963651ac73e503f47db826040516105ad9190610c35565b60405180910390a15050565b60015481565b5f5f5f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b7f7edcee67725a77bfa311b39349d7e96df9b23fbdbdcb328dfc17d77926920c1381565b5f5f1b81565b60025481565b61065b82610380565b610664816107b5565b61066e83836108b9565b50505050565b7fd32fd1ee5f4f111da6f27444787e5200ec57a8849509c00ef2998467052b32a361069e816107b5565b6002548211156106e3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106da90610dd8565b60405180910390fd5b8160025f8282546106f49190610df6565b925050819055507fa480c0c45745eee4dee1efebcb3bc13dfad876477c3ebfcd594efdda76cd24c48260405161072a9190610c35565b60405180910390a15050565b5f6002546001546107479190610df6565b905090565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6107c6816107c16108b2565b6109a2565b50565b5f6107d483836105bf565b6108a85760015f5f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055506108456108b2565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a4600190506108ac565b5f90505b92915050565b5f33905090565b5f6108c483836105bf565b15610998575f5f5f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055506109356108b2565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a46001905061099c565b5f90505b92915050565b6109ac82826105bf565b6109ef5780826040517fe2517d3f0000000000000000000000000000000000000000000000000000000081526004016109e6929190610e38565b60405180910390fd5b5050565b5f5ffd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b610a2b816109f7565b8114610a35575f5ffd5b50565b5f81359050610a4681610a22565b92915050565b5f60208284031215610a6157610a606109f3565b5b5f610a6e84828501610a38565b91505092915050565b5f8115159050919050565b610a8b81610a77565b82525050565b5f602082019050610aa45f830184610a82565b92915050565b5f819050919050565b610abc81610aaa565b82525050565b5f602082019050610ad55f830184610ab3565b92915050565b610ae481610aaa565b8114610aee575f5ffd5b50565b5f81359050610aff81610adb565b92915050565b5f60208284031215610b1a57610b196109f3565b5b5f610b2784828501610af1565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610b5982610b30565b9050919050565b610b6981610b4f565b8114610b73575f5ffd5b50565b5f81359050610b8481610b60565b92915050565b5f5f60408385031215610ba057610b9f6109f3565b5b5f610bad85828601610af1565b9250506020610bbe85828601610b76565b9150509250929050565b5f819050919050565b610bda81610bc8565b8114610be4575f5ffd5b50565b5f81359050610bf581610bd1565b92915050565b5f60208284031215610c1057610c0f6109f3565b5b5f610c1d84828501610be7565b91505092915050565b610c2f81610bc8565b82525050565b5f602082019050610c485f830184610c26565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610c8582610bc8565b9150610c9083610bc8565b9250828201905080821115610ca857610ca7610c4e565b5b92915050565b5f82825260208201905092915050565b7f4e6f7420656e6f75676820706879736963616c207265736572766500000000005f82015250565b5f610cf2601b83610cae565b9150610cfd82610cbe565b602082019050919050565b5f6020820190508181035f830152610d1f81610ce6565b9050919050565b7f526573657276652063616e2774206265206c657373207468616e2075736564005f82015250565b5f610d5a601f83610cae565b9150610d6582610d26565b602082019050919050565b5f6020820190508181035f830152610d8781610d4e565b9050919050565b7f43616e6e6f7420726564756365206d6f7265207468616e2075736564000000005f82015250565b5f610dc2601c83610cae565b9150610dcd82610d8e565b602082019050919050565b5f6020820190508181035f830152610def81610db6565b9050919050565b5f610e0082610bc8565b9150610e0b83610bc8565b9250828203905081811115610e2357610e22610c4e565b5b92915050565b610e3281610b4f565b82525050565b5f604082019050610e4b5f830185610e29565b610e586020830184610ab3565b939250505056fea2646970667358221220ce98851f138beb9738db75883288cb82641e74e13f1fa7eb39191ef5cbfb347064736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x11EB CODESIZE SUB DUP1 PUSH2 0x11EB DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x2A6 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x96 SWAP1 PUSH2 0x32B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB1 PUSH0 PUSH0 SHL DUP3 PUSH2 0xE9 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0xE2 PUSH32 0x7EDCEE67725A77BFA311B39349D7E96DF9B23FBDBDCB328DFC17D77926920C13 DUP3 PUSH2 0xE9 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP PUSH2 0x349 JUMP JUMPDEST PUSH0 PUSH2 0xFA DUP4 DUP4 PUSH2 0x1DE PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x1D4 JUMPI PUSH1 0x1 PUSH0 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x171 PUSH2 0x241 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x1D8 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x275 DUP3 PUSH2 0x24C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x285 DUP2 PUSH2 0x26B JUMP JUMPDEST DUP2 EQ PUSH2 0x28F JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2A0 DUP2 PUSH2 0x27C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2BB JUMPI PUSH2 0x2BA PUSH2 0x248 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2C8 DUP5 DUP3 DUP6 ADD PUSH2 0x292 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C69642061646D696E00000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x315 PUSH1 0xD DUP4 PUSH2 0x2D1 JUMP JUMPDEST SWAP2 POP PUSH2 0x320 DUP3 PUSH2 0x2E1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x342 DUP2 PUSH2 0x309 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE95 DUP1 PUSH2 0x356 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF3 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x64E7782A GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xC112A08F GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xC112A08F EQ PUSH2 0x26F JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x28D JUMPI DUP1 PUSH4 0xECAD4F68 EQ PUSH2 0x2A9 JUMPI DUP1 PUSH4 0xFF9B1B11 EQ PUSH2 0x2C5 JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x64E7782A EQ PUSH2 0x1E5 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x203 JUMPI DUP1 PUSH4 0x9E341119 EQ PUSH2 0x233 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x251 JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x2F2FF15D GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x175 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x191 JUMPI DUP1 PUSH4 0x3DD0104E EQ PUSH2 0x1AD JUMPI DUP1 PUSH4 0x4F547369 EQ PUSH2 0x1C9 JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xF7 JUMPI DUP1 PUSH4 0xFBBFB55 EQ PUSH2 0x127 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x145 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x111 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10C SWAP2 SWAP1 PUSH2 0xA4C JUMP JUMPDEST PUSH2 0x2E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11E SWAP2 SWAP1 PUSH2 0xA91 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12F PUSH2 0x35C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13C SWAP2 SWAP1 PUSH2 0xAC2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15A SWAP2 SWAP1 PUSH2 0xB05 JUMP JUMPDEST PUSH2 0x380 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16C SWAP2 SWAP1 PUSH2 0xAC2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18A SWAP2 SWAP1 PUSH2 0xB8A JUMP JUMPDEST PUSH2 0x39C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1AB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A6 SWAP2 SWAP1 PUSH2 0xB8A JUMP JUMPDEST PUSH2 0x3BE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C2 SWAP2 SWAP1 PUSH2 0xBFB JUMP JUMPDEST PUSH2 0x439 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DE SWAP2 SWAP1 PUSH2 0xBFB JUMP JUMPDEST PUSH2 0x508 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1ED PUSH2 0x5B9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FA SWAP2 SWAP1 PUSH2 0xC35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x21D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x218 SWAP2 SWAP1 PUSH2 0xB8A JUMP JUMPDEST PUSH2 0x5BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22A SWAP2 SWAP1 PUSH2 0xA91 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23B PUSH2 0x622 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x248 SWAP2 SWAP1 PUSH2 0xAC2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x259 PUSH2 0x646 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x266 SWAP2 SWAP1 PUSH2 0xAC2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x277 PUSH2 0x64C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x284 SWAP2 SWAP1 PUSH2 0xC35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A2 SWAP2 SWAP1 PUSH2 0xB8A JUMP JUMPDEST PUSH2 0x652 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2C3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2BE SWAP2 SWAP1 PUSH2 0xBFB JUMP JUMPDEST PUSH2 0x674 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2CD PUSH2 0x736 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DA SWAP2 SWAP1 PUSH2 0xC35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x355 JUMPI POP PUSH2 0x354 DUP3 PUSH2 0x74C JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0xD32FD1EE5F4F111DA6F27444787E5200EC57A8849509C00EF2998467052B32A3 DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3A5 DUP3 PUSH2 0x380 JUMP JUMPDEST PUSH2 0x3AE DUP2 PUSH2 0x7B5 JUMP JUMPDEST PUSH2 0x3B8 DUP4 DUP4 PUSH2 0x7C9 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x3C6 PUSH2 0x8B2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x42A JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x434 DUP3 DUP3 PUSH2 0x8B9 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0xD32FD1EE5F4F111DA6F27444787E5200EC57A8849509C00EF2998467052B32A3 PUSH2 0x463 DUP2 PUSH2 0x7B5 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP3 PUSH1 0x2 SLOAD PUSH2 0x474 SWAP2 SWAP1 PUSH2 0xC7B JUMP JUMPDEST GT ISZERO PUSH2 0x4B5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4AC SWAP1 PUSH2 0xD08 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x4C6 SWAP2 SWAP1 PUSH2 0xC7B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH32 0xA0A9AF6AE1130972D7FBD89D32FD511AABD55C98D30AA1D4B23D823FD9927FE6 DUP3 PUSH1 0x40 MLOAD PUSH2 0x4FC SWAP2 SWAP1 PUSH2 0xC35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH32 0x7EDCEE67725A77BFA311B39349D7E96DF9B23FBDBDCB328DFC17D77926920C13 PUSH2 0x532 DUP2 PUSH2 0x7B5 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP3 LT ISZERO PUSH2 0x577 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x56E SWAP1 PUSH2 0xD70 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH32 0x85E15AEE91823036F338B40B55F10EEA0356CFB9DA506963651AC73E503F47DB DUP3 PUSH1 0x40 MLOAD PUSH2 0x5AD SWAP2 SWAP1 PUSH2 0xC35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x7EDCEE67725A77BFA311B39349D7E96DF9B23FBDBDCB328DFC17D77926920C13 DUP2 JUMP JUMPDEST PUSH0 PUSH0 SHL DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x65B DUP3 PUSH2 0x380 JUMP JUMPDEST PUSH2 0x664 DUP2 PUSH2 0x7B5 JUMP JUMPDEST PUSH2 0x66E DUP4 DUP4 PUSH2 0x8B9 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH32 0xD32FD1EE5F4F111DA6F27444787E5200EC57A8849509C00EF2998467052B32A3 PUSH2 0x69E DUP2 PUSH2 0x7B5 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP3 GT ISZERO PUSH2 0x6E3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6DA SWAP1 PUSH2 0xDD8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x6F4 SWAP2 SWAP1 PUSH2 0xDF6 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH32 0xA480C0C45745EEE4DEE1EFEBCB3BC13DFAD876477C3EBFCD594EFDDA76CD24C4 DUP3 PUSH1 0x40 MLOAD PUSH2 0x72A SWAP2 SWAP1 PUSH2 0xC35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD PUSH1 0x1 SLOAD PUSH2 0x747 SWAP2 SWAP1 PUSH2 0xDF6 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7C6 DUP2 PUSH2 0x7C1 PUSH2 0x8B2 JUMP JUMPDEST PUSH2 0x9A2 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x7D4 DUP4 DUP4 PUSH2 0x5BF JUMP JUMPDEST PUSH2 0x8A8 JUMPI PUSH1 0x1 PUSH0 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x845 PUSH2 0x8B2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x8AC JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x8C4 DUP4 DUP4 PUSH2 0x5BF JUMP JUMPDEST ISZERO PUSH2 0x998 JUMPI PUSH0 PUSH0 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x935 PUSH2 0x8B2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x99C JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x9AC DUP3 DUP3 PUSH2 0x5BF JUMP JUMPDEST PUSH2 0x9EF JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9E6 SWAP3 SWAP2 SWAP1 PUSH2 0xE38 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA2B DUP2 PUSH2 0x9F7 JUMP JUMPDEST DUP2 EQ PUSH2 0xA35 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA46 DUP2 PUSH2 0xA22 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA61 JUMPI PUSH2 0xA60 PUSH2 0x9F3 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xA6E DUP5 DUP3 DUP6 ADD PUSH2 0xA38 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA8B DUP2 PUSH2 0xA77 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xAA4 PUSH0 DUP4 ADD DUP5 PUSH2 0xA82 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xABC DUP2 PUSH2 0xAAA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xAD5 PUSH0 DUP4 ADD DUP5 PUSH2 0xAB3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xAE4 DUP2 PUSH2 0xAAA JUMP JUMPDEST DUP2 EQ PUSH2 0xAEE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xAFF DUP2 PUSH2 0xADB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB1A JUMPI PUSH2 0xB19 PUSH2 0x9F3 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xB27 DUP5 DUP3 DUP6 ADD PUSH2 0xAF1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xB59 DUP3 PUSH2 0xB30 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB69 DUP2 PUSH2 0xB4F JUMP JUMPDEST DUP2 EQ PUSH2 0xB73 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB84 DUP2 PUSH2 0xB60 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBA0 JUMPI PUSH2 0xB9F PUSH2 0x9F3 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xBAD DUP6 DUP3 DUP7 ADD PUSH2 0xAF1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xBBE DUP6 DUP3 DUP7 ADD PUSH2 0xB76 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBDA DUP2 PUSH2 0xBC8 JUMP JUMPDEST DUP2 EQ PUSH2 0xBE4 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBF5 DUP2 PUSH2 0xBD1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC10 JUMPI PUSH2 0xC0F PUSH2 0x9F3 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xC1D DUP5 DUP3 DUP6 ADD PUSH2 0xBE7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC2F DUP2 PUSH2 0xBC8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC48 PUSH0 DUP4 ADD DUP5 PUSH2 0xC26 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xC85 DUP3 PUSH2 0xBC8 JUMP JUMPDEST SWAP2 POP PUSH2 0xC90 DUP4 PUSH2 0xBC8 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xCA8 JUMPI PUSH2 0xCA7 PUSH2 0xC4E JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F7420656E6F75676820706879736963616C20726573657276650000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xCF2 PUSH1 0x1B DUP4 PUSH2 0xCAE JUMP JUMPDEST SWAP2 POP PUSH2 0xCFD DUP3 PUSH2 0xCBE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xD1F DUP2 PUSH2 0xCE6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x526573657276652063616E2774206265206C657373207468616E207573656400 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xD5A PUSH1 0x1F DUP4 PUSH2 0xCAE JUMP JUMPDEST SWAP2 POP PUSH2 0xD65 DUP3 PUSH2 0xD26 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xD87 DUP2 PUSH2 0xD4E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E6E6F7420726564756365206D6F7265207468616E207573656400000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xDC2 PUSH1 0x1C DUP4 PUSH2 0xCAE JUMP JUMPDEST SWAP2 POP PUSH2 0xDCD DUP3 PUSH2 0xD8E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xDEF DUP2 PUSH2 0xDB6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xE00 DUP3 PUSH2 0xBC8 JUMP JUMPDEST SWAP2 POP PUSH2 0xE0B DUP4 PUSH2 0xBC8 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xE23 JUMPI PUSH2 0xE22 PUSH2 0xC4E JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE32 DUP2 PUSH2 0xB4F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xE4B PUSH0 DUP4 ADD DUP6 PUSH2 0xE29 JUMP JUMPDEST PUSH2 0xE58 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xAB3 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCE SWAP9 DUP6 0x1F SGT DUP12 0xEB SWAP8 CODESIZE 0xDB PUSH22 0x883288CB82641E74E13F1FA7EB39191EF5CBFB347064 PUSH20 0x6F6C634300081E00330000000000000000000000 ",
							"sourceMap": "206:1892:5:-:0;;;714:181;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;776:1;759:19;;:5;:19;;;751:45;;;;;;;;;;;;:::i;:::-;;;;;;;;;806:37;2232:4:0;817:18:5;;837:5;806:10;;;:37;;:::i;:::-;;853:35;294:29;882:5;853:10;;;:35;;:::i;:::-;;714:181;206:1892;;6179:316:0;6256:4;6277:22;6285:4;6291:7;6277;;;:22;;:::i;:::-;6272:217;;6347:4;6315:6;:12;6322:4;6315:12;;;;;;;;;;;:20;;:29;6336:7;6315:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;6397:12;:10;;;:12;;:::i;:::-;6370:40;;6388:7;6370:40;;6382:4;6370:40;;;;;;;;;;6431:4;6424:11;;;;6272:217;6473:5;6466:12;;6179:316;;;;;:::o;2854:136::-;2931:4;2954:6;:12;2961:4;2954:12;;;;;;;;;;;:20;;:29;2975:7;2954:29;;;;;;;;;;;;;;;;;;;;;;;;;2947:36;;2854:136;;;;:::o;656:96:2:-;709:7;735:10;728:17;;656:96;:::o;88:117:6:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;1202:169::-;1286:11;1320:6;1315:3;1308:19;1360:4;1355:3;1351:14;1336:29;;1202:169;;;;:::o;1377:163::-;1517:15;1513:1;1505:6;1501:14;1494:39;1377:163;:::o;1546:366::-;1688:3;1709:67;1773:2;1768:3;1709:67;:::i;:::-;1702:74;;1785:93;1874:3;1785:93;:::i;:::-;1903:2;1898:3;1894:12;1887:19;;1546:366;;;:::o;1918:419::-;2084:4;2122:2;2111:9;2107:18;2099:26;;2171:9;2165:4;2161:20;2157:1;2146:9;2142:17;2135:47;2199:131;2325:4;2199:131;:::i;:::-;2191:139;;1918:419;;;:::o;206:1892:5:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@DEFAULT_ADMIN_ROLE_29": {
									"entryPoint": 1606,
									"id": 29,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@TOKEN_CONTRACT_ROLE_460": {
									"entryPoint": 860,
									"id": 460,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@VAULT_ADMIN_ROLE_455": {
									"entryPoint": 1570,
									"id": 455,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkRole_114": {
									"entryPoint": 2466,
									"id": 114,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkRole_93": {
									"entryPoint": 1973,
									"id": 93,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_grantRole_256": {
									"entryPoint": 1993,
									"id": 256,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_msgSender_390": {
									"entryPoint": 2226,
									"id": 390,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_revokeRole_294": {
									"entryPoint": 2233,
									"id": 294,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@addReserveUsed_554": {
									"entryPoint": 1081,
									"id": 554,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@availableGrams_590": {
									"entryPoint": 1846,
									"id": 590,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getRoleAdmin_128": {
									"entryPoint": 896,
									"id": 128,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@grantRole_147": {
									"entryPoint": 924,
									"id": 147,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@hasRole_80": {
									"entryPoint": 1471,
									"id": 80,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@reduceReserveUsed_579": {
									"entryPoint": 1652,
									"id": 579,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@renounceRole_189": {
									"entryPoint": 958,
									"id": 189,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@reserveUsed_464": {
									"entryPoint": 1612,
									"id": 464,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@revokeRole_166": {
									"entryPoint": 1618,
									"id": 166,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setTotalReserve_527": {
									"entryPoint": 1288,
									"id": 527,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@supportsInterface_431": {
									"entryPoint": 1868,
									"id": 431,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_62": {
									"entryPoint": 739,
									"id": 62,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@totalReserveGrams_462": {
									"entryPoint": 1465,
									"id": 462,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 2934,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32": {
									"entryPoint": 2801,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 2616,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 3047,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": 2821,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32t_address": {
									"entryPoint": 2954,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 2636,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3067,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 3625,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 2690,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 2739,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_1d88c19f1771ead97d1d8c1080a13fbfbebc79ee9232b2bae71b67f9d8b68315_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3510,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_7ca5de1ae439e47ccafba2180917e70dafc962b691748ba4e06b2eb078edc69d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3302,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d9d6b5663c54077957b99c11e6b017d0ab71e81c5145a89235fd96dcb89ab3db_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3406,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3110,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed": {
									"entryPoint": 3640,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 2705,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": 2754,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1d88c19f1771ead97d1d8c1080a13fbfbebc79ee9232b2bae71b67f9d8b68315__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3544,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7ca5de1ae439e47ccafba2180917e70dafc962b691748ba4e06b2eb078edc69d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3336,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d9d6b5663c54077957b99c11e6b017d0ab71e81c5145a89235fd96dcb89ab3db__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3440,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3125,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 3246,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3195,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 3574,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2895,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 2679,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 2730,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 2551,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2864,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 3016,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3150,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2547,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_1d88c19f1771ead97d1d8c1080a13fbfbebc79ee9232b2bae71b67f9d8b68315": {
									"entryPoint": 3470,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_7ca5de1ae439e47ccafba2180917e70dafc962b691748ba4e06b2eb078edc69d": {
									"entryPoint": 3262,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d9d6b5663c54077957b99c11e6b017d0ab71e81c5145a89235fd96dcb89ab3db": {
									"entryPoint": 3366,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 2912,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes32": {
									"entryPoint": 2779,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 2594,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 3025,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:8753:6",
										"nodeType": "YulBlock",
										"src": "0:8753:6",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:6",
													"nodeType": "YulBlock",
													"src": "47:35:6",
													"statements": [
														{
															"nativeSrc": "57:19:6",
															"nodeType": "YulAssignment",
															"src": "57:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:6",
																		"nodeType": "YulLiteral",
																		"src": "73:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:6"
																},
																"nativeSrc": "67:9:6",
																"nodeType": "YulFunctionCall",
																"src": "67:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:6",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:6",
														"nodeType": "YulTypedName",
														"src": "40:6:6",
														"type": ""
													}
												],
												"src": "7:75:6"
											},
											{
												"body": {
													"nativeSrc": "177:28:6",
													"nodeType": "YulBlock",
													"src": "177:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:6",
																		"nodeType": "YulLiteral",
																		"src": "194:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:6",
																		"nodeType": "YulLiteral",
																		"src": "197:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:6"
																},
																"nativeSrc": "187:12:6",
																"nodeType": "YulFunctionCall",
																"src": "187:12:6"
															},
															"nativeSrc": "187:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:6"
											},
											{
												"body": {
													"nativeSrc": "300:28:6",
													"nodeType": "YulBlock",
													"src": "300:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:6",
																		"nodeType": "YulLiteral",
																		"src": "317:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:6",
																		"nodeType": "YulLiteral",
																		"src": "320:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:6"
																},
																"nativeSrc": "310:12:6",
																"nodeType": "YulFunctionCall",
																"src": "310:12:6"
															},
															"nativeSrc": "310:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:6"
											},
											{
												"body": {
													"nativeSrc": "378:105:6",
													"nodeType": "YulBlock",
													"src": "378:105:6",
													"statements": [
														{
															"nativeSrc": "388:89:6",
															"nodeType": "YulAssignment",
															"src": "388:89:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "403:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "410:66:6",
																		"nodeType": "YulLiteral",
																		"src": "410:66:6",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "399:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:6"
																},
																"nativeSrc": "399:78:6",
																"nodeType": "YulFunctionCall",
																"src": "399:78:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "388:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nativeSrc": "334:149:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "360:5:6",
														"nodeType": "YulTypedName",
														"src": "360:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "370:7:6",
														"nodeType": "YulTypedName",
														"src": "370:7:6",
														"type": ""
													}
												],
												"src": "334:149:6"
											},
											{
												"body": {
													"nativeSrc": "531:78:6",
													"nodeType": "YulBlock",
													"src": "531:78:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "587:16:6",
																"nodeType": "YulBlock",
																"src": "587:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "596:1:6",
																					"nodeType": "YulLiteral",
																					"src": "596:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "599:1:6",
																					"nodeType": "YulLiteral",
																					"src": "599:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "589:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:6"
																			},
																			"nativeSrc": "589:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:6"
																		},
																		"nativeSrc": "589:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "554:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "578:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nativeSrc": "561:16:6",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:6"
																				},
																				"nativeSrc": "561:23:6",
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "551:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:6"
																		},
																		"nativeSrc": "551:34:6",
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "544:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:6"
																},
																"nativeSrc": "544:42:6",
																"nodeType": "YulFunctionCall",
																"src": "544:42:6"
															},
															"nativeSrc": "541:62:6",
															"nodeType": "YulIf",
															"src": "541:62:6"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nativeSrc": "489:120:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "524:5:6",
														"nodeType": "YulTypedName",
														"src": "524:5:6",
														"type": ""
													}
												],
												"src": "489:120:6"
											},
											{
												"body": {
													"nativeSrc": "666:86:6",
													"nodeType": "YulBlock",
													"src": "666:86:6",
													"statements": [
														{
															"nativeSrc": "676:29:6",
															"nodeType": "YulAssignment",
															"src": "676:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "698:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "685:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:6"
																},
																"nativeSrc": "685:20:6",
																"nodeType": "YulFunctionCall",
																"src": "685:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "676:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "740:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "714:25:6",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:6"
																},
																"nativeSrc": "714:32:6",
																"nodeType": "YulFunctionCall",
																"src": "714:32:6"
															},
															"nativeSrc": "714:32:6",
															"nodeType": "YulExpressionStatement",
															"src": "714:32:6"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nativeSrc": "615:137:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "644:6:6",
														"nodeType": "YulTypedName",
														"src": "644:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "652:3:6",
														"nodeType": "YulTypedName",
														"src": "652:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "660:5:6",
														"nodeType": "YulTypedName",
														"src": "660:5:6",
														"type": ""
													}
												],
												"src": "615:137:6"
											},
											{
												"body": {
													"nativeSrc": "823:262:6",
													"nodeType": "YulBlock",
													"src": "823:262:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "869:83:6",
																"nodeType": "YulBlock",
																"src": "869:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "871:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:6"
																			},
																			"nativeSrc": "871:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:6"
																		},
																		"nativeSrc": "871:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "844:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "853:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "840:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:6"
																		},
																		"nativeSrc": "840:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "865:2:6",
																		"nodeType": "YulLiteral",
																		"src": "865:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "836:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:6"
																},
																"nativeSrc": "836:32:6",
																"nodeType": "YulFunctionCall",
																"src": "836:32:6"
															},
															"nativeSrc": "833:119:6",
															"nodeType": "YulIf",
															"src": "833:119:6"
														},
														{
															"nativeSrc": "962:116:6",
															"nodeType": "YulBlock",
															"src": "962:116:6",
															"statements": [
																{
																	"nativeSrc": "977:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "991:1:6",
																		"nodeType": "YulLiteral",
																		"src": "991:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "981:6:6",
																			"nodeType": "YulTypedName",
																			"src": "981:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1006:62:6",
																	"nodeType": "YulAssignment",
																	"src": "1006:62:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1040:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1051:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1036:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:6"
																				},
																				"nativeSrc": "1036:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1060:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nativeSrc": "1016:19:6",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:6"
																		},
																		"nativeSrc": "1016:52:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1006:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "758:327:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "793:9:6",
														"nodeType": "YulTypedName",
														"src": "793:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "804:7:6",
														"nodeType": "YulTypedName",
														"src": "804:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "816:6:6",
														"nodeType": "YulTypedName",
														"src": "816:6:6",
														"type": ""
													}
												],
												"src": "758:327:6"
											},
											{
												"body": {
													"nativeSrc": "1133:48:6",
													"nodeType": "YulBlock",
													"src": "1133:48:6",
													"statements": [
														{
															"nativeSrc": "1143:32:6",
															"nodeType": "YulAssignment",
															"src": "1143:32:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1168:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1161:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:6"
																		},
																		"nativeSrc": "1161:13:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1154:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:6"
																},
																"nativeSrc": "1154:21:6",
																"nodeType": "YulFunctionCall",
																"src": "1154:21:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1143:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1091:90:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1115:5:6",
														"nodeType": "YulTypedName",
														"src": "1115:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1125:7:6",
														"nodeType": "YulTypedName",
														"src": "1125:7:6",
														"type": ""
													}
												],
												"src": "1091:90:6"
											},
											{
												"body": {
													"nativeSrc": "1246:50:6",
													"nodeType": "YulBlock",
													"src": "1246:50:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1263:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1283:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1268:14:6",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:6"
																		},
																		"nativeSrc": "1268:21:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1256:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:6"
																},
																"nativeSrc": "1256:34:6",
																"nodeType": "YulFunctionCall",
																"src": "1256:34:6"
															},
															"nativeSrc": "1256:34:6",
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:6"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1187:109:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1234:5:6",
														"nodeType": "YulTypedName",
														"src": "1234:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1241:3:6",
														"nodeType": "YulTypedName",
														"src": "1241:3:6",
														"type": ""
													}
												],
												"src": "1187:109:6"
											},
											{
												"body": {
													"nativeSrc": "1394:118:6",
													"nodeType": "YulBlock",
													"src": "1394:118:6",
													"statements": [
														{
															"nativeSrc": "1404:26:6",
															"nodeType": "YulAssignment",
															"src": "1404:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1416:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1427:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1412:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:6"
																},
																"nativeSrc": "1412:18:6",
																"nodeType": "YulFunctionCall",
																"src": "1412:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1404:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1478:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1491:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1502:1:6",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1487:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:6"
																		},
																		"nativeSrc": "1487:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "1440:37:6",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:6"
																},
																"nativeSrc": "1440:65:6",
																"nodeType": "YulFunctionCall",
																"src": "1440:65:6"
															},
															"nativeSrc": "1440:65:6",
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1302:210:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1366:9:6",
														"nodeType": "YulTypedName",
														"src": "1366:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1378:6:6",
														"nodeType": "YulTypedName",
														"src": "1378:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1389:4:6",
														"nodeType": "YulTypedName",
														"src": "1389:4:6",
														"type": ""
													}
												],
												"src": "1302:210:6"
											},
											{
												"body": {
													"nativeSrc": "1563:32:6",
													"nodeType": "YulBlock",
													"src": "1563:32:6",
													"statements": [
														{
															"nativeSrc": "1573:16:6",
															"nodeType": "YulAssignment",
															"src": "1573:16:6",
															"value": {
																"name": "value",
																"nativeSrc": "1584:5:6",
																"nodeType": "YulIdentifier",
																"src": "1584:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1573:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "1573:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nativeSrc": "1518:77:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1545:5:6",
														"nodeType": "YulTypedName",
														"src": "1545:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1555:7:6",
														"nodeType": "YulTypedName",
														"src": "1555:7:6",
														"type": ""
													}
												],
												"src": "1518:77:6"
											},
											{
												"body": {
													"nativeSrc": "1666:53:6",
													"nodeType": "YulBlock",
													"src": "1666:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1683:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "1683:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1706:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "1706:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nativeSrc": "1688:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "1688:17:6"
																		},
																		"nativeSrc": "1688:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1688:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1676:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1676:6:6"
																},
																"nativeSrc": "1676:37:6",
																"nodeType": "YulFunctionCall",
																"src": "1676:37:6"
															},
															"nativeSrc": "1676:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "1676:37:6"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nativeSrc": "1601:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1654:5:6",
														"nodeType": "YulTypedName",
														"src": "1654:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1661:3:6",
														"nodeType": "YulTypedName",
														"src": "1661:3:6",
														"type": ""
													}
												],
												"src": "1601:118:6"
											},
											{
												"body": {
													"nativeSrc": "1823:124:6",
													"nodeType": "YulBlock",
													"src": "1823:124:6",
													"statements": [
														{
															"nativeSrc": "1833:26:6",
															"nodeType": "YulAssignment",
															"src": "1833:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1845:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1845:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1856:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1856:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1841:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1841:3:6"
																},
																"nativeSrc": "1841:18:6",
																"nodeType": "YulFunctionCall",
																"src": "1841:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1833:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1833:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1913:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1913:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1926:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1926:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1937:1:6",
																				"nodeType": "YulLiteral",
																				"src": "1937:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1922:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1922:3:6"
																		},
																		"nativeSrc": "1922:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1922:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "1869:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "1869:43:6"
																},
																"nativeSrc": "1869:71:6",
																"nodeType": "YulFunctionCall",
																"src": "1869:71:6"
															},
															"nativeSrc": "1869:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "1869:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nativeSrc": "1725:222:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1795:9:6",
														"nodeType": "YulTypedName",
														"src": "1795:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1807:6:6",
														"nodeType": "YulTypedName",
														"src": "1807:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1818:4:6",
														"nodeType": "YulTypedName",
														"src": "1818:4:6",
														"type": ""
													}
												],
												"src": "1725:222:6"
											},
											{
												"body": {
													"nativeSrc": "1996:79:6",
													"nodeType": "YulBlock",
													"src": "1996:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2053:16:6",
																"nodeType": "YulBlock",
																"src": "2053:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2062:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2062:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2065:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2065:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2055:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2055:6:6"
																			},
																			"nativeSrc": "2055:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2055:12:6"
																		},
																		"nativeSrc": "2055:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2055:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2019:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "2019:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2044:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "2044:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nativeSrc": "2026:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "2026:17:6"
																				},
																				"nativeSrc": "2026:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2026:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2016:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "2016:2:6"
																		},
																		"nativeSrc": "2016:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2016:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2009:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2009:6:6"
																},
																"nativeSrc": "2009:43:6",
																"nodeType": "YulFunctionCall",
																"src": "2009:43:6"
															},
															"nativeSrc": "2006:63:6",
															"nodeType": "YulIf",
															"src": "2006:63:6"
														}
													]
												},
												"name": "validator_revert_t_bytes32",
												"nativeSrc": "1953:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1989:5:6",
														"nodeType": "YulTypedName",
														"src": "1989:5:6",
														"type": ""
													}
												],
												"src": "1953:122:6"
											},
											{
												"body": {
													"nativeSrc": "2133:87:6",
													"nodeType": "YulBlock",
													"src": "2133:87:6",
													"statements": [
														{
															"nativeSrc": "2143:29:6",
															"nodeType": "YulAssignment",
															"src": "2143:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2165:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2165:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2152:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "2152:12:6"
																},
																"nativeSrc": "2152:20:6",
																"nodeType": "YulFunctionCall",
																"src": "2152:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2143:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "2143:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2208:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "2208:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nativeSrc": "2181:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "2181:26:6"
																},
																"nativeSrc": "2181:33:6",
																"nodeType": "YulFunctionCall",
																"src": "2181:33:6"
															},
															"nativeSrc": "2181:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "2181:33:6"
														}
													]
												},
												"name": "abi_decode_t_bytes32",
												"nativeSrc": "2081:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2111:6:6",
														"nodeType": "YulTypedName",
														"src": "2111:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2119:3:6",
														"nodeType": "YulTypedName",
														"src": "2119:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2127:5:6",
														"nodeType": "YulTypedName",
														"src": "2127:5:6",
														"type": ""
													}
												],
												"src": "2081:139:6"
											},
											{
												"body": {
													"nativeSrc": "2292:263:6",
													"nodeType": "YulBlock",
													"src": "2292:263:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2338:83:6",
																"nodeType": "YulBlock",
																"src": "2338:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2340:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "2340:77:6"
																			},
																			"nativeSrc": "2340:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2340:79:6"
																		},
																		"nativeSrc": "2340:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2340:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2313:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2313:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2322:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2322:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2309:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2309:3:6"
																		},
																		"nativeSrc": "2309:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2309:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2334:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2334:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2305:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2305:3:6"
																},
																"nativeSrc": "2305:32:6",
																"nodeType": "YulFunctionCall",
																"src": "2305:32:6"
															},
															"nativeSrc": "2302:119:6",
															"nodeType": "YulIf",
															"src": "2302:119:6"
														},
														{
															"nativeSrc": "2431:117:6",
															"nodeType": "YulBlock",
															"src": "2431:117:6",
															"statements": [
																{
																	"nativeSrc": "2446:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2446:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2460:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2460:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2450:6:6",
																			"nodeType": "YulTypedName",
																			"src": "2450:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2475:63:6",
																	"nodeType": "YulAssignment",
																	"src": "2475:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2510:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "2510:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2521:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "2521:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2506:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "2506:3:6"
																				},
																				"nativeSrc": "2506:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2506:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2530:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2530:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "2485:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "2485:20:6"
																		},
																		"nativeSrc": "2485:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2485:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2475:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "2475:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nativeSrc": "2226:329:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2262:9:6",
														"nodeType": "YulTypedName",
														"src": "2262:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2273:7:6",
														"nodeType": "YulTypedName",
														"src": "2273:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2285:6:6",
														"nodeType": "YulTypedName",
														"src": "2285:6:6",
														"type": ""
													}
												],
												"src": "2226:329:6"
											},
											{
												"body": {
													"nativeSrc": "2606:81:6",
													"nodeType": "YulBlock",
													"src": "2606:81:6",
													"statements": [
														{
															"nativeSrc": "2616:65:6",
															"nodeType": "YulAssignment",
															"src": "2616:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2631:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "2631:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2638:42:6",
																		"nodeType": "YulLiteral",
																		"src": "2638:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2627:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2627:3:6"
																},
																"nativeSrc": "2627:54:6",
																"nodeType": "YulFunctionCall",
																"src": "2627:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2616:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "2616:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "2561:126:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2588:5:6",
														"nodeType": "YulTypedName",
														"src": "2588:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2598:7:6",
														"nodeType": "YulTypedName",
														"src": "2598:7:6",
														"type": ""
													}
												],
												"src": "2561:126:6"
											},
											{
												"body": {
													"nativeSrc": "2738:51:6",
													"nodeType": "YulBlock",
													"src": "2738:51:6",
													"statements": [
														{
															"nativeSrc": "2748:35:6",
															"nodeType": "YulAssignment",
															"src": "2748:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2777:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "2777:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2759:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "2759:17:6"
																},
																"nativeSrc": "2759:24:6",
																"nodeType": "YulFunctionCall",
																"src": "2759:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2748:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "2748:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "2693:96:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2720:5:6",
														"nodeType": "YulTypedName",
														"src": "2720:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2730:7:6",
														"nodeType": "YulTypedName",
														"src": "2730:7:6",
														"type": ""
													}
												],
												"src": "2693:96:6"
											},
											{
												"body": {
													"nativeSrc": "2838:79:6",
													"nodeType": "YulBlock",
													"src": "2838:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2895:16:6",
																"nodeType": "YulBlock",
																"src": "2895:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2904:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2904:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2907:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2907:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2897:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2897:6:6"
																			},
																			"nativeSrc": "2897:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2897:12:6"
																		},
																		"nativeSrc": "2897:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2897:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2861:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "2861:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2886:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "2886:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "2868:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "2868:17:6"
																				},
																				"nativeSrc": "2868:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2868:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2858:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "2858:2:6"
																		},
																		"nativeSrc": "2858:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2858:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2851:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2851:6:6"
																},
																"nativeSrc": "2851:43:6",
																"nodeType": "YulFunctionCall",
																"src": "2851:43:6"
															},
															"nativeSrc": "2848:63:6",
															"nodeType": "YulIf",
															"src": "2848:63:6"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "2795:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2831:5:6",
														"nodeType": "YulTypedName",
														"src": "2831:5:6",
														"type": ""
													}
												],
												"src": "2795:122:6"
											},
											{
												"body": {
													"nativeSrc": "2975:87:6",
													"nodeType": "YulBlock",
													"src": "2975:87:6",
													"statements": [
														{
															"nativeSrc": "2985:29:6",
															"nodeType": "YulAssignment",
															"src": "2985:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3007:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3007:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2994:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "2994:12:6"
																},
																"nativeSrc": "2994:20:6",
																"nodeType": "YulFunctionCall",
																"src": "2994:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2985:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "2985:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3050:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "3050:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "3023:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "3023:26:6"
																},
																"nativeSrc": "3023:33:6",
																"nodeType": "YulFunctionCall",
																"src": "3023:33:6"
															},
															"nativeSrc": "3023:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "3023:33:6"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "2923:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2953:6:6",
														"nodeType": "YulTypedName",
														"src": "2953:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2961:3:6",
														"nodeType": "YulTypedName",
														"src": "2961:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2969:5:6",
														"nodeType": "YulTypedName",
														"src": "2969:5:6",
														"type": ""
													}
												],
												"src": "2923:139:6"
											},
											{
												"body": {
													"nativeSrc": "3151:391:6",
													"nodeType": "YulBlock",
													"src": "3151:391:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "3197:83:6",
																"nodeType": "YulBlock",
																"src": "3197:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3199:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "3199:77:6"
																			},
																			"nativeSrc": "3199:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3199:79:6"
																		},
																		"nativeSrc": "3199:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3199:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3172:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "3172:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3181:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3181:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3168:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3168:3:6"
																		},
																		"nativeSrc": "3168:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3168:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3193:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3193:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3164:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3164:3:6"
																},
																"nativeSrc": "3164:32:6",
																"nodeType": "YulFunctionCall",
																"src": "3164:32:6"
															},
															"nativeSrc": "3161:119:6",
															"nodeType": "YulIf",
															"src": "3161:119:6"
														},
														{
															"nativeSrc": "3290:117:6",
															"nodeType": "YulBlock",
															"src": "3290:117:6",
															"statements": [
																{
																	"nativeSrc": "3305:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3305:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3319:1:6",
																		"nodeType": "YulLiteral",
																		"src": "3319:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3309:6:6",
																			"nodeType": "YulTypedName",
																			"src": "3309:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3334:63:6",
																	"nodeType": "YulAssignment",
																	"src": "3334:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3369:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "3369:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3380:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "3380:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3365:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "3365:3:6"
																				},
																				"nativeSrc": "3365:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3365:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3389:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "3389:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "3344:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "3344:20:6"
																		},
																		"nativeSrc": "3344:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3344:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3334:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "3334:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3417:118:6",
															"nodeType": "YulBlock",
															"src": "3417:118:6",
															"statements": [
																{
																	"nativeSrc": "3432:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3432:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3446:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3446:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3436:6:6",
																			"nodeType": "YulTypedName",
																			"src": "3436:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3462:63:6",
																	"nodeType": "YulAssignment",
																	"src": "3462:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3497:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "3497:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3508:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "3508:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3493:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "3493:3:6"
																				},
																				"nativeSrc": "3493:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3493:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3517:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "3517:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3472:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "3472:20:6"
																		},
																		"nativeSrc": "3472:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3472:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3462:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "3462:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_address",
												"nativeSrc": "3068:474:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3113:9:6",
														"nodeType": "YulTypedName",
														"src": "3113:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3124:7:6",
														"nodeType": "YulTypedName",
														"src": "3124:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3136:6:6",
														"nodeType": "YulTypedName",
														"src": "3136:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3144:6:6",
														"nodeType": "YulTypedName",
														"src": "3144:6:6",
														"type": ""
													}
												],
												"src": "3068:474:6"
											},
											{
												"body": {
													"nativeSrc": "3593:32:6",
													"nodeType": "YulBlock",
													"src": "3593:32:6",
													"statements": [
														{
															"nativeSrc": "3603:16:6",
															"nodeType": "YulAssignment",
															"src": "3603:16:6",
															"value": {
																"name": "value",
																"nativeSrc": "3614:5:6",
																"nodeType": "YulIdentifier",
																"src": "3614:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3603:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "3603:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "3548:77:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3575:5:6",
														"nodeType": "YulTypedName",
														"src": "3575:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3585:7:6",
														"nodeType": "YulTypedName",
														"src": "3585:7:6",
														"type": ""
													}
												],
												"src": "3548:77:6"
											},
											{
												"body": {
													"nativeSrc": "3674:79:6",
													"nodeType": "YulBlock",
													"src": "3674:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "3731:16:6",
																"nodeType": "YulBlock",
																"src": "3731:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3740:1:6",
																					"nodeType": "YulLiteral",
																					"src": "3740:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3743:1:6",
																					"nodeType": "YulLiteral",
																					"src": "3743:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3733:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3733:6:6"
																			},
																			"nativeSrc": "3733:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3733:12:6"
																		},
																		"nativeSrc": "3733:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3733:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3697:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "3697:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3722:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "3722:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3704:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "3704:17:6"
																				},
																				"nativeSrc": "3704:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3704:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3694:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "3694:2:6"
																		},
																		"nativeSrc": "3694:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3694:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3687:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3687:6:6"
																},
																"nativeSrc": "3687:43:6",
																"nodeType": "YulFunctionCall",
																"src": "3687:43:6"
															},
															"nativeSrc": "3684:63:6",
															"nodeType": "YulIf",
															"src": "3684:63:6"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "3631:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3667:5:6",
														"nodeType": "YulTypedName",
														"src": "3667:5:6",
														"type": ""
													}
												],
												"src": "3631:122:6"
											},
											{
												"body": {
													"nativeSrc": "3811:87:6",
													"nodeType": "YulBlock",
													"src": "3811:87:6",
													"statements": [
														{
															"nativeSrc": "3821:29:6",
															"nodeType": "YulAssignment",
															"src": "3821:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3843:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3843:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3830:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "3830:12:6"
																},
																"nativeSrc": "3830:20:6",
																"nodeType": "YulFunctionCall",
																"src": "3830:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3821:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "3821:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3886:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "3886:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "3859:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "3859:26:6"
																},
																"nativeSrc": "3859:33:6",
																"nodeType": "YulFunctionCall",
																"src": "3859:33:6"
															},
															"nativeSrc": "3859:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "3859:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "3759:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3789:6:6",
														"nodeType": "YulTypedName",
														"src": "3789:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3797:3:6",
														"nodeType": "YulTypedName",
														"src": "3797:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3805:5:6",
														"nodeType": "YulTypedName",
														"src": "3805:5:6",
														"type": ""
													}
												],
												"src": "3759:139:6"
											},
											{
												"body": {
													"nativeSrc": "3970:263:6",
													"nodeType": "YulBlock",
													"src": "3970:263:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "4016:83:6",
																"nodeType": "YulBlock",
																"src": "4016:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4018:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "4018:77:6"
																			},
																			"nativeSrc": "4018:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4018:79:6"
																		},
																		"nativeSrc": "4018:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "4018:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3991:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "3991:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4000:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4000:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3987:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3987:3:6"
																		},
																		"nativeSrc": "3987:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3987:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4012:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4012:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3983:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3983:3:6"
																},
																"nativeSrc": "3983:32:6",
																"nodeType": "YulFunctionCall",
																"src": "3983:32:6"
															},
															"nativeSrc": "3980:119:6",
															"nodeType": "YulIf",
															"src": "3980:119:6"
														},
														{
															"nativeSrc": "4109:117:6",
															"nodeType": "YulBlock",
															"src": "4109:117:6",
															"statements": [
																{
																	"nativeSrc": "4124:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4124:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4138:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4138:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4128:6:6",
																			"nodeType": "YulTypedName",
																			"src": "4128:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4153:63:6",
																	"nodeType": "YulAssignment",
																	"src": "4153:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4188:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "4188:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4199:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "4199:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4184:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4184:3:6"
																				},
																				"nativeSrc": "4184:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4184:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4208:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4208:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4163:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "4163:20:6"
																		},
																		"nativeSrc": "4163:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4163:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4153:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "4153:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "3904:329:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3940:9:6",
														"nodeType": "YulTypedName",
														"src": "3940:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3951:7:6",
														"nodeType": "YulTypedName",
														"src": "3951:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3963:6:6",
														"nodeType": "YulTypedName",
														"src": "3963:6:6",
														"type": ""
													}
												],
												"src": "3904:329:6"
											},
											{
												"body": {
													"nativeSrc": "4304:53:6",
													"nodeType": "YulBlock",
													"src": "4304:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4321:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "4321:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4344:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "4344:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "4326:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "4326:17:6"
																		},
																		"nativeSrc": "4326:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4326:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4314:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4314:6:6"
																},
																"nativeSrc": "4314:37:6",
																"nodeType": "YulFunctionCall",
																"src": "4314:37:6"
															},
															"nativeSrc": "4314:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "4314:37:6"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "4239:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4292:5:6",
														"nodeType": "YulTypedName",
														"src": "4292:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4299:3:6",
														"nodeType": "YulTypedName",
														"src": "4299:3:6",
														"type": ""
													}
												],
												"src": "4239:118:6"
											},
											{
												"body": {
													"nativeSrc": "4461:124:6",
													"nodeType": "YulBlock",
													"src": "4461:124:6",
													"statements": [
														{
															"nativeSrc": "4471:26:6",
															"nodeType": "YulAssignment",
															"src": "4471:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4483:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4483:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4494:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4494:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4479:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4479:3:6"
																},
																"nativeSrc": "4479:18:6",
																"nodeType": "YulFunctionCall",
																"src": "4479:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4471:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "4471:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4551:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "4551:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4564:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4564:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4575:1:6",
																				"nodeType": "YulLiteral",
																				"src": "4575:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4560:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4560:3:6"
																		},
																		"nativeSrc": "4560:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4560:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4507:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "4507:43:6"
																},
																"nativeSrc": "4507:71:6",
																"nodeType": "YulFunctionCall",
																"src": "4507:71:6"
															},
															"nativeSrc": "4507:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "4507:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "4363:222:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4433:9:6",
														"nodeType": "YulTypedName",
														"src": "4433:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4445:6:6",
														"nodeType": "YulTypedName",
														"src": "4445:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4456:4:6",
														"nodeType": "YulTypedName",
														"src": "4456:4:6",
														"type": ""
													}
												],
												"src": "4363:222:6"
											},
											{
												"body": {
													"nativeSrc": "4619:152:6",
													"nodeType": "YulBlock",
													"src": "4619:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4636:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4636:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4639:77:6",
																		"nodeType": "YulLiteral",
																		"src": "4639:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4629:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4629:6:6"
																},
																"nativeSrc": "4629:88:6",
																"nodeType": "YulFunctionCall",
																"src": "4629:88:6"
															},
															"nativeSrc": "4629:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "4629:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4733:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4733:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4736:4:6",
																		"nodeType": "YulLiteral",
																		"src": "4736:4:6",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4726:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4726:6:6"
																},
																"nativeSrc": "4726:15:6",
																"nodeType": "YulFunctionCall",
																"src": "4726:15:6"
															},
															"nativeSrc": "4726:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "4726:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4757:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4757:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4760:4:6",
																		"nodeType": "YulLiteral",
																		"src": "4760:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4750:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4750:6:6"
																},
																"nativeSrc": "4750:15:6",
																"nodeType": "YulFunctionCall",
																"src": "4750:15:6"
															},
															"nativeSrc": "4750:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "4750:15:6"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "4591:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "4591:180:6"
											},
											{
												"body": {
													"nativeSrc": "4821:147:6",
													"nodeType": "YulBlock",
													"src": "4821:147:6",
													"statements": [
														{
															"nativeSrc": "4831:25:6",
															"nodeType": "YulAssignment",
															"src": "4831:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4854:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "4854:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4836:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "4836:17:6"
																},
																"nativeSrc": "4836:20:6",
																"nodeType": "YulFunctionCall",
																"src": "4836:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "4831:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "4831:1:6"
																}
															]
														},
														{
															"nativeSrc": "4865:25:6",
															"nodeType": "YulAssignment",
															"src": "4865:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "4888:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "4888:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4870:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "4870:17:6"
																},
																"nativeSrc": "4870:20:6",
																"nodeType": "YulFunctionCall",
																"src": "4870:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "4865:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "4865:1:6"
																}
															]
														},
														{
															"nativeSrc": "4899:16:6",
															"nodeType": "YulAssignment",
															"src": "4899:16:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4910:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "4910:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4913:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "4913:1:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4906:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4906:3:6"
																},
																"nativeSrc": "4906:9:6",
																"nodeType": "YulFunctionCall",
																"src": "4906:9:6"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "4899:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4899:3:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4939:22:6",
																"nodeType": "YulBlock",
																"src": "4939:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "4941:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "4941:16:6"
																			},
																			"nativeSrc": "4941:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4941:18:6"
																		},
																		"nativeSrc": "4941:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "4941:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4931:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "4931:1:6"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "4934:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "4934:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4928:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "4928:2:6"
																},
																"nativeSrc": "4928:10:6",
																"nodeType": "YulFunctionCall",
																"src": "4928:10:6"
															},
															"nativeSrc": "4925:36:6",
															"nodeType": "YulIf",
															"src": "4925:36:6"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "4777:191:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4808:1:6",
														"nodeType": "YulTypedName",
														"src": "4808:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4811:1:6",
														"nodeType": "YulTypedName",
														"src": "4811:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "4817:3:6",
														"nodeType": "YulTypedName",
														"src": "4817:3:6",
														"type": ""
													}
												],
												"src": "4777:191:6"
											},
											{
												"body": {
													"nativeSrc": "5070:73:6",
													"nodeType": "YulBlock",
													"src": "5070:73:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5087:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "5087:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5092:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "5092:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5080:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5080:6:6"
																},
																"nativeSrc": "5080:19:6",
																"nodeType": "YulFunctionCall",
																"src": "5080:19:6"
															},
															"nativeSrc": "5080:19:6",
															"nodeType": "YulExpressionStatement",
															"src": "5080:19:6"
														},
														{
															"nativeSrc": "5108:29:6",
															"nodeType": "YulAssignment",
															"src": "5108:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5127:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "5127:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5132:4:6",
																		"nodeType": "YulLiteral",
																		"src": "5132:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5123:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5123:3:6"
																},
																"nativeSrc": "5123:14:6",
																"nodeType": "YulFunctionCall",
																"src": "5123:14:6"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "5108:11:6",
																	"nodeType": "YulIdentifier",
																	"src": "5108:11:6"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "4974:169:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5042:3:6",
														"nodeType": "YulTypedName",
														"src": "5042:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "5047:6:6",
														"nodeType": "YulTypedName",
														"src": "5047:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "5058:11:6",
														"nodeType": "YulTypedName",
														"src": "5058:11:6",
														"type": ""
													}
												],
												"src": "4974:169:6"
											},
											{
												"body": {
													"nativeSrc": "5255:71:6",
													"nodeType": "YulBlock",
													"src": "5255:71:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "5277:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "5277:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5285:1:6",
																				"nodeType": "YulLiteral",
																				"src": "5285:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5273:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5273:3:6"
																		},
																		"nativeSrc": "5273:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5273:14:6"
																	},
																	{
																		"hexValue": "4e6f7420656e6f75676820706879736963616c2072657365727665",
																		"kind": "string",
																		"nativeSrc": "5289:29:6",
																		"nodeType": "YulLiteral",
																		"src": "5289:29:6",
																		"type": "",
																		"value": "Not enough physical reserve"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5266:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5266:6:6"
																},
																"nativeSrc": "5266:53:6",
																"nodeType": "YulFunctionCall",
																"src": "5266:53:6"
															},
															"nativeSrc": "5266:53:6",
															"nodeType": "YulExpressionStatement",
															"src": "5266:53:6"
														}
													]
												},
												"name": "store_literal_in_memory_7ca5de1ae439e47ccafba2180917e70dafc962b691748ba4e06b2eb078edc69d",
												"nativeSrc": "5149:177:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "5247:6:6",
														"nodeType": "YulTypedName",
														"src": "5247:6:6",
														"type": ""
													}
												],
												"src": "5149:177:6"
											},
											{
												"body": {
													"nativeSrc": "5478:220:6",
													"nodeType": "YulBlock",
													"src": "5478:220:6",
													"statements": [
														{
															"nativeSrc": "5488:74:6",
															"nodeType": "YulAssignment",
															"src": "5488:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5554:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "5554:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5559:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5559:2:6",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5495:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "5495:58:6"
																},
																"nativeSrc": "5495:67:6",
																"nodeType": "YulFunctionCall",
																"src": "5495:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "5488:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5488:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5660:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "5660:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_7ca5de1ae439e47ccafba2180917e70dafc962b691748ba4e06b2eb078edc69d",
																	"nativeSrc": "5571:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "5571:88:6"
																},
																"nativeSrc": "5571:93:6",
																"nodeType": "YulFunctionCall",
																"src": "5571:93:6"
															},
															"nativeSrc": "5571:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "5571:93:6"
														},
														{
															"nativeSrc": "5673:19:6",
															"nodeType": "YulAssignment",
															"src": "5673:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5684:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "5684:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5689:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5689:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5680:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5680:3:6"
																},
																"nativeSrc": "5680:12:6",
																"nodeType": "YulFunctionCall",
																"src": "5680:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "5673:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5673:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_7ca5de1ae439e47ccafba2180917e70dafc962b691748ba4e06b2eb078edc69d_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "5332:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5466:3:6",
														"nodeType": "YulTypedName",
														"src": "5466:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "5474:3:6",
														"nodeType": "YulTypedName",
														"src": "5474:3:6",
														"type": ""
													}
												],
												"src": "5332:366:6"
											},
											{
												"body": {
													"nativeSrc": "5875:248:6",
													"nodeType": "YulBlock",
													"src": "5875:248:6",
													"statements": [
														{
															"nativeSrc": "5885:26:6",
															"nodeType": "YulAssignment",
															"src": "5885:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5897:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "5897:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5908:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5908:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5893:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5893:3:6"
																},
																"nativeSrc": "5893:18:6",
																"nodeType": "YulFunctionCall",
																"src": "5893:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5885:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "5885:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5932:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5932:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5943:1:6",
																				"nodeType": "YulLiteral",
																				"src": "5943:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5928:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5928:3:6"
																		},
																		"nativeSrc": "5928:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5928:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "5951:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "5951:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5957:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5957:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5947:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5947:3:6"
																		},
																		"nativeSrc": "5947:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5947:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5921:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5921:6:6"
																},
																"nativeSrc": "5921:47:6",
																"nodeType": "YulFunctionCall",
																"src": "5921:47:6"
															},
															"nativeSrc": "5921:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "5921:47:6"
														},
														{
															"nativeSrc": "5977:139:6",
															"nodeType": "YulAssignment",
															"src": "5977:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "6111:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "6111:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_7ca5de1ae439e47ccafba2180917e70dafc962b691748ba4e06b2eb078edc69d_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5985:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "5985:124:6"
																},
																"nativeSrc": "5985:131:6",
																"nodeType": "YulFunctionCall",
																"src": "5985:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5977:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "5977:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7ca5de1ae439e47ccafba2180917e70dafc962b691748ba4e06b2eb078edc69d__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5704:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5855:9:6",
														"nodeType": "YulTypedName",
														"src": "5855:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5870:4:6",
														"nodeType": "YulTypedName",
														"src": "5870:4:6",
														"type": ""
													}
												],
												"src": "5704:419:6"
											},
											{
												"body": {
													"nativeSrc": "6235:75:6",
													"nodeType": "YulBlock",
													"src": "6235:75:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6257:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "6257:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6265:1:6",
																				"nodeType": "YulLiteral",
																				"src": "6265:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6253:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6253:3:6"
																		},
																		"nativeSrc": "6253:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6253:14:6"
																	},
																	{
																		"hexValue": "526573657276652063616e2774206265206c657373207468616e2075736564",
																		"kind": "string",
																		"nativeSrc": "6269:33:6",
																		"nodeType": "YulLiteral",
																		"src": "6269:33:6",
																		"type": "",
																		"value": "Reserve can't be less than used"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6246:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6246:6:6"
																},
																"nativeSrc": "6246:57:6",
																"nodeType": "YulFunctionCall",
																"src": "6246:57:6"
															},
															"nativeSrc": "6246:57:6",
															"nodeType": "YulExpressionStatement",
															"src": "6246:57:6"
														}
													]
												},
												"name": "store_literal_in_memory_d9d6b5663c54077957b99c11e6b017d0ab71e81c5145a89235fd96dcb89ab3db",
												"nativeSrc": "6129:181:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "6227:6:6",
														"nodeType": "YulTypedName",
														"src": "6227:6:6",
														"type": ""
													}
												],
												"src": "6129:181:6"
											},
											{
												"body": {
													"nativeSrc": "6462:220:6",
													"nodeType": "YulBlock",
													"src": "6462:220:6",
													"statements": [
														{
															"nativeSrc": "6472:74:6",
															"nodeType": "YulAssignment",
															"src": "6472:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6538:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "6538:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6543:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6543:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6479:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "6479:58:6"
																},
																"nativeSrc": "6479:67:6",
																"nodeType": "YulFunctionCall",
																"src": "6479:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6472:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6472:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6644:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "6644:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d9d6b5663c54077957b99c11e6b017d0ab71e81c5145a89235fd96dcb89ab3db",
																	"nativeSrc": "6555:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "6555:88:6"
																},
																"nativeSrc": "6555:93:6",
																"nodeType": "YulFunctionCall",
																"src": "6555:93:6"
															},
															"nativeSrc": "6555:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "6555:93:6"
														},
														{
															"nativeSrc": "6657:19:6",
															"nodeType": "YulAssignment",
															"src": "6657:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6668:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "6668:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6673:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6673:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6664:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6664:3:6"
																},
																"nativeSrc": "6664:12:6",
																"nodeType": "YulFunctionCall",
																"src": "6664:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6657:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6657:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d9d6b5663c54077957b99c11e6b017d0ab71e81c5145a89235fd96dcb89ab3db_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "6316:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6450:3:6",
														"nodeType": "YulTypedName",
														"src": "6450:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6458:3:6",
														"nodeType": "YulTypedName",
														"src": "6458:3:6",
														"type": ""
													}
												],
												"src": "6316:366:6"
											},
											{
												"body": {
													"nativeSrc": "6859:248:6",
													"nodeType": "YulBlock",
													"src": "6859:248:6",
													"statements": [
														{
															"nativeSrc": "6869:26:6",
															"nodeType": "YulAssignment",
															"src": "6869:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6881:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "6881:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6892:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6892:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6877:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6877:3:6"
																},
																"nativeSrc": "6877:18:6",
																"nodeType": "YulFunctionCall",
																"src": "6877:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6869:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "6869:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6916:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6916:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6927:1:6",
																				"nodeType": "YulLiteral",
																				"src": "6927:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6912:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6912:3:6"
																		},
																		"nativeSrc": "6912:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6912:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "6935:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "6935:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6941:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6941:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6931:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6931:3:6"
																		},
																		"nativeSrc": "6931:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6931:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6905:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6905:6:6"
																},
																"nativeSrc": "6905:47:6",
																"nodeType": "YulFunctionCall",
																"src": "6905:47:6"
															},
															"nativeSrc": "6905:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "6905:47:6"
														},
														{
															"nativeSrc": "6961:139:6",
															"nodeType": "YulAssignment",
															"src": "6961:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "7095:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "7095:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d9d6b5663c54077957b99c11e6b017d0ab71e81c5145a89235fd96dcb89ab3db_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6969:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "6969:124:6"
																},
																"nativeSrc": "6969:131:6",
																"nodeType": "YulFunctionCall",
																"src": "6969:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6961:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "6961:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d9d6b5663c54077957b99c11e6b017d0ab71e81c5145a89235fd96dcb89ab3db__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6688:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6839:9:6",
														"nodeType": "YulTypedName",
														"src": "6839:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6854:4:6",
														"nodeType": "YulTypedName",
														"src": "6854:4:6",
														"type": ""
													}
												],
												"src": "6688:419:6"
											},
											{
												"body": {
													"nativeSrc": "7219:72:6",
													"nodeType": "YulBlock",
													"src": "7219:72:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7241:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "7241:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7249:1:6",
																				"nodeType": "YulLiteral",
																				"src": "7249:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7237:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7237:3:6"
																		},
																		"nativeSrc": "7237:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7237:14:6"
																	},
																	{
																		"hexValue": "43616e6e6f7420726564756365206d6f7265207468616e2075736564",
																		"kind": "string",
																		"nativeSrc": "7253:30:6",
																		"nodeType": "YulLiteral",
																		"src": "7253:30:6",
																		"type": "",
																		"value": "Cannot reduce more than used"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7230:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7230:6:6"
																},
																"nativeSrc": "7230:54:6",
																"nodeType": "YulFunctionCall",
																"src": "7230:54:6"
															},
															"nativeSrc": "7230:54:6",
															"nodeType": "YulExpressionStatement",
															"src": "7230:54:6"
														}
													]
												},
												"name": "store_literal_in_memory_1d88c19f1771ead97d1d8c1080a13fbfbebc79ee9232b2bae71b67f9d8b68315",
												"nativeSrc": "7113:178:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7211:6:6",
														"nodeType": "YulTypedName",
														"src": "7211:6:6",
														"type": ""
													}
												],
												"src": "7113:178:6"
											},
											{
												"body": {
													"nativeSrc": "7443:220:6",
													"nodeType": "YulBlock",
													"src": "7443:220:6",
													"statements": [
														{
															"nativeSrc": "7453:74:6",
															"nodeType": "YulAssignment",
															"src": "7453:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7519:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "7519:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7524:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7524:2:6",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7460:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "7460:58:6"
																},
																"nativeSrc": "7460:67:6",
																"nodeType": "YulFunctionCall",
																"src": "7460:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7453:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7453:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7625:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "7625:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1d88c19f1771ead97d1d8c1080a13fbfbebc79ee9232b2bae71b67f9d8b68315",
																	"nativeSrc": "7536:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "7536:88:6"
																},
																"nativeSrc": "7536:93:6",
																"nodeType": "YulFunctionCall",
																"src": "7536:93:6"
															},
															"nativeSrc": "7536:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "7536:93:6"
														},
														{
															"nativeSrc": "7638:19:6",
															"nodeType": "YulAssignment",
															"src": "7638:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7649:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "7649:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7654:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7654:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7645:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7645:3:6"
																},
																"nativeSrc": "7645:12:6",
																"nodeType": "YulFunctionCall",
																"src": "7645:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7638:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7638:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1d88c19f1771ead97d1d8c1080a13fbfbebc79ee9232b2bae71b67f9d8b68315_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "7297:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7431:3:6",
														"nodeType": "YulTypedName",
														"src": "7431:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7439:3:6",
														"nodeType": "YulTypedName",
														"src": "7439:3:6",
														"type": ""
													}
												],
												"src": "7297:366:6"
											},
											{
												"body": {
													"nativeSrc": "7840:248:6",
													"nodeType": "YulBlock",
													"src": "7840:248:6",
													"statements": [
														{
															"nativeSrc": "7850:26:6",
															"nodeType": "YulAssignment",
															"src": "7850:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7862:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "7862:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7873:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7873:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7858:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7858:3:6"
																},
																"nativeSrc": "7858:18:6",
																"nodeType": "YulFunctionCall",
																"src": "7858:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7850:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "7850:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7897:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7897:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7908:1:6",
																				"nodeType": "YulLiteral",
																				"src": "7908:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7893:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7893:3:6"
																		},
																		"nativeSrc": "7893:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7893:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "7916:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "7916:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7922:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7922:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7912:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7912:3:6"
																		},
																		"nativeSrc": "7912:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7912:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7886:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7886:6:6"
																},
																"nativeSrc": "7886:47:6",
																"nodeType": "YulFunctionCall",
																"src": "7886:47:6"
															},
															"nativeSrc": "7886:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "7886:47:6"
														},
														{
															"nativeSrc": "7942:139:6",
															"nodeType": "YulAssignment",
															"src": "7942:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "8076:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "8076:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1d88c19f1771ead97d1d8c1080a13fbfbebc79ee9232b2bae71b67f9d8b68315_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7950:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "7950:124:6"
																},
																"nativeSrc": "7950:131:6",
																"nodeType": "YulFunctionCall",
																"src": "7950:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7942:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "7942:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1d88c19f1771ead97d1d8c1080a13fbfbebc79ee9232b2bae71b67f9d8b68315__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7669:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7820:9:6",
														"nodeType": "YulTypedName",
														"src": "7820:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7835:4:6",
														"nodeType": "YulTypedName",
														"src": "7835:4:6",
														"type": ""
													}
												],
												"src": "7669:419:6"
											},
											{
												"body": {
													"nativeSrc": "8139:149:6",
													"nodeType": "YulBlock",
													"src": "8139:149:6",
													"statements": [
														{
															"nativeSrc": "8149:25:6",
															"nodeType": "YulAssignment",
															"src": "8149:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8172:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "8172:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8154:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "8154:17:6"
																},
																"nativeSrc": "8154:20:6",
																"nodeType": "YulFunctionCall",
																"src": "8154:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "8149:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "8149:1:6"
																}
															]
														},
														{
															"nativeSrc": "8183:25:6",
															"nodeType": "YulAssignment",
															"src": "8183:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8206:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "8206:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8188:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "8188:17:6"
																},
																"nativeSrc": "8188:20:6",
																"nodeType": "YulFunctionCall",
																"src": "8188:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "8183:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "8183:1:6"
																}
															]
														},
														{
															"nativeSrc": "8217:17:6",
															"nodeType": "YulAssignment",
															"src": "8217:17:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8229:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "8229:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8232:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "8232:1:6"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "8225:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8225:3:6"
																},
																"nativeSrc": "8225:9:6",
																"nodeType": "YulFunctionCall",
																"src": "8225:9:6"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "8217:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "8217:4:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8259:22:6",
																"nodeType": "YulBlock",
																"src": "8259:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8261:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "8261:16:6"
																			},
																			"nativeSrc": "8261:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "8261:18:6"
																		},
																		"nativeSrc": "8261:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "8261:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "8250:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "8250:4:6"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "8256:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "8256:1:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8247:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "8247:2:6"
																},
																"nativeSrc": "8247:11:6",
																"nodeType": "YulFunctionCall",
																"src": "8247:11:6"
															},
															"nativeSrc": "8244:37:6",
															"nodeType": "YulIf",
															"src": "8244:37:6"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "8094:194:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8125:1:6",
														"nodeType": "YulTypedName",
														"src": "8125:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8128:1:6",
														"nodeType": "YulTypedName",
														"src": "8128:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "8134:4:6",
														"nodeType": "YulTypedName",
														"src": "8134:4:6",
														"type": ""
													}
												],
												"src": "8094:194:6"
											},
											{
												"body": {
													"nativeSrc": "8359:53:6",
													"nodeType": "YulBlock",
													"src": "8359:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8376:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "8376:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8399:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "8399:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "8381:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "8381:17:6"
																		},
																		"nativeSrc": "8381:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8381:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8369:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8369:6:6"
																},
																"nativeSrc": "8369:37:6",
																"nodeType": "YulFunctionCall",
																"src": "8369:37:6"
															},
															"nativeSrc": "8369:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "8369:37:6"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "8294:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8347:5:6",
														"nodeType": "YulTypedName",
														"src": "8347:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8354:3:6",
														"nodeType": "YulTypedName",
														"src": "8354:3:6",
														"type": ""
													}
												],
												"src": "8294:118:6"
											},
											{
												"body": {
													"nativeSrc": "8544:206:6",
													"nodeType": "YulBlock",
													"src": "8544:206:6",
													"statements": [
														{
															"nativeSrc": "8554:26:6",
															"nodeType": "YulAssignment",
															"src": "8554:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8566:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "8566:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8577:2:6",
																		"nodeType": "YulLiteral",
																		"src": "8577:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8562:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8562:3:6"
																},
																"nativeSrc": "8562:18:6",
																"nodeType": "YulFunctionCall",
																"src": "8562:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8554:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "8554:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8634:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "8634:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8647:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "8647:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8658:1:6",
																				"nodeType": "YulLiteral",
																				"src": "8658:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8643:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8643:3:6"
																		},
																		"nativeSrc": "8643:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8643:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "8590:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "8590:43:6"
																},
																"nativeSrc": "8590:71:6",
																"nodeType": "YulFunctionCall",
																"src": "8590:71:6"
															},
															"nativeSrc": "8590:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "8590:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "8715:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "8715:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8728:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "8728:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8739:2:6",
																				"nodeType": "YulLiteral",
																				"src": "8739:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8724:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8724:3:6"
																		},
																		"nativeSrc": "8724:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8724:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "8671:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "8671:43:6"
																},
																"nativeSrc": "8671:72:6",
																"nodeType": "YulFunctionCall",
																"src": "8671:72:6"
															},
															"nativeSrc": "8671:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "8671:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed",
												"nativeSrc": "8418:332:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8508:9:6",
														"nodeType": "YulTypedName",
														"src": "8508:9:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8520:6:6",
														"nodeType": "YulTypedName",
														"src": "8520:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8528:6:6",
														"nodeType": "YulTypedName",
														"src": "8528:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8539:4:6",
														"nodeType": "YulTypedName",
														"src": "8539:4:6",
														"type": ""
													}
												],
												"src": "8418:332:6"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_7ca5de1ae439e47ccafba2180917e70dafc962b691748ba4e06b2eb078edc69d(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not enough physical reserve\")\n\n    }\n\n    function abi_encode_t_stringliteral_7ca5de1ae439e47ccafba2180917e70dafc962b691748ba4e06b2eb078edc69d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_7ca5de1ae439e47ccafba2180917e70dafc962b691748ba4e06b2eb078edc69d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7ca5de1ae439e47ccafba2180917e70dafc962b691748ba4e06b2eb078edc69d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7ca5de1ae439e47ccafba2180917e70dafc962b691748ba4e06b2eb078edc69d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d9d6b5663c54077957b99c11e6b017d0ab71e81c5145a89235fd96dcb89ab3db(memPtr) {\n\n        mstore(add(memPtr, 0), \"Reserve can't be less than used\")\n\n    }\n\n    function abi_encode_t_stringliteral_d9d6b5663c54077957b99c11e6b017d0ab71e81c5145a89235fd96dcb89ab3db_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_d9d6b5663c54077957b99c11e6b017d0ab71e81c5145a89235fd96dcb89ab3db(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d9d6b5663c54077957b99c11e6b017d0ab71e81c5145a89235fd96dcb89ab3db__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d9d6b5663c54077957b99c11e6b017d0ab71e81c5145a89235fd96dcb89ab3db_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_1d88c19f1771ead97d1d8c1080a13fbfbebc79ee9232b2bae71b67f9d8b68315(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cannot reduce more than used\")\n\n    }\n\n    function abi_encode_t_stringliteral_1d88c19f1771ead97d1d8c1080a13fbfbebc79ee9232b2bae71b67f9d8b68315_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_1d88c19f1771ead97d1d8c1080a13fbfbebc79ee9232b2bae71b67f9d8b68315(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1d88c19f1771ead97d1d8c1080a13fbfbebc79ee9232b2bae71b67f9d8b68315__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1d88c19f1771ead97d1d8c1080a13fbfbebc79ee9232b2bae71b67f9d8b68315_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b50600436106100f3575f3560e01c806364e7782a11610095578063c112a08f11610064578063c112a08f1461026f578063d547741f1461028d578063ecad4f68146102a9578063ff9b1b11146102c5576100f3565b806364e7782a146101e557806391d14854146102035780639e34111914610233578063a217fddf14610251576100f3565b80632f2ff15d116100d15780632f2ff15d1461017557806336568abe146101915780633dd0104e146101ad5780634f547369146101c9576100f3565b806301ffc9a7146100f75780630fbbfb5514610127578063248a9ca314610145575b5f5ffd5b610111600480360381019061010c9190610a4c565b6102e3565b60405161011e9190610a91565b60405180910390f35b61012f61035c565b60405161013c9190610ac2565b60405180910390f35b61015f600480360381019061015a9190610b05565b610380565b60405161016c9190610ac2565b60405180910390f35b61018f600480360381019061018a9190610b8a565b61039c565b005b6101ab60048036038101906101a69190610b8a565b6103be565b005b6101c760048036038101906101c29190610bfb565b610439565b005b6101e360048036038101906101de9190610bfb565b610508565b005b6101ed6105b9565b6040516101fa9190610c35565b60405180910390f35b61021d60048036038101906102189190610b8a565b6105bf565b60405161022a9190610a91565b60405180910390f35b61023b610622565b6040516102489190610ac2565b60405180910390f35b610259610646565b6040516102669190610ac2565b60405180910390f35b61027761064c565b6040516102849190610c35565b60405180910390f35b6102a760048036038101906102a29190610b8a565b610652565b005b6102c360048036038101906102be9190610bfb565b610674565b005b6102cd610736565b6040516102da9190610c35565b60405180910390f35b5f7f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061035557506103548261074c565b5b9050919050565b7fd32fd1ee5f4f111da6f27444787e5200ec57a8849509c00ef2998467052b32a381565b5f5f5f8381526020019081526020015f20600101549050919050565b6103a582610380565b6103ae816107b5565b6103b883836107c9565b50505050565b6103c66108b2565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461042a576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61043482826108b9565b505050565b7fd32fd1ee5f4f111da6f27444787e5200ec57a8849509c00ef2998467052b32a3610463816107b5565b600154826002546104749190610c7b565b11156104b5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104ac90610d08565b60405180910390fd5b8160025f8282546104c69190610c7b565b925050819055507fa0a9af6ae1130972d7fbd89d32fd511aabd55c98d30aa1d4b23d823fd9927fe6826040516104fc9190610c35565b60405180910390a15050565b7f7edcee67725a77bfa311b39349d7e96df9b23fbdbdcb328dfc17d77926920c13610532816107b5565b600254821015610577576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056e90610d70565b60405180910390fd5b816001819055507f85e15aee91823036f338b40b55f10eea0356cfb9da506963651ac73e503f47db826040516105ad9190610c35565b60405180910390a15050565b60015481565b5f5f5f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b7f7edcee67725a77bfa311b39349d7e96df9b23fbdbdcb328dfc17d77926920c1381565b5f5f1b81565b60025481565b61065b82610380565b610664816107b5565b61066e83836108b9565b50505050565b7fd32fd1ee5f4f111da6f27444787e5200ec57a8849509c00ef2998467052b32a361069e816107b5565b6002548211156106e3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106da90610dd8565b60405180910390fd5b8160025f8282546106f49190610df6565b925050819055507fa480c0c45745eee4dee1efebcb3bc13dfad876477c3ebfcd594efdda76cd24c48260405161072a9190610c35565b60405180910390a15050565b5f6002546001546107479190610df6565b905090565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6107c6816107c16108b2565b6109a2565b50565b5f6107d483836105bf565b6108a85760015f5f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055506108456108b2565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a4600190506108ac565b5f90505b92915050565b5f33905090565b5f6108c483836105bf565b15610998575f5f5f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055506109356108b2565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a46001905061099c565b5f90505b92915050565b6109ac82826105bf565b6109ef5780826040517fe2517d3f0000000000000000000000000000000000000000000000000000000081526004016109e6929190610e38565b60405180910390fd5b5050565b5f5ffd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b610a2b816109f7565b8114610a35575f5ffd5b50565b5f81359050610a4681610a22565b92915050565b5f60208284031215610a6157610a606109f3565b5b5f610a6e84828501610a38565b91505092915050565b5f8115159050919050565b610a8b81610a77565b82525050565b5f602082019050610aa45f830184610a82565b92915050565b5f819050919050565b610abc81610aaa565b82525050565b5f602082019050610ad55f830184610ab3565b92915050565b610ae481610aaa565b8114610aee575f5ffd5b50565b5f81359050610aff81610adb565b92915050565b5f60208284031215610b1a57610b196109f3565b5b5f610b2784828501610af1565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610b5982610b30565b9050919050565b610b6981610b4f565b8114610b73575f5ffd5b50565b5f81359050610b8481610b60565b92915050565b5f5f60408385031215610ba057610b9f6109f3565b5b5f610bad85828601610af1565b9250506020610bbe85828601610b76565b9150509250929050565b5f819050919050565b610bda81610bc8565b8114610be4575f5ffd5b50565b5f81359050610bf581610bd1565b92915050565b5f60208284031215610c1057610c0f6109f3565b5b5f610c1d84828501610be7565b91505092915050565b610c2f81610bc8565b82525050565b5f602082019050610c485f830184610c26565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610c8582610bc8565b9150610c9083610bc8565b9250828201905080821115610ca857610ca7610c4e565b5b92915050565b5f82825260208201905092915050565b7f4e6f7420656e6f75676820706879736963616c207265736572766500000000005f82015250565b5f610cf2601b83610cae565b9150610cfd82610cbe565b602082019050919050565b5f6020820190508181035f830152610d1f81610ce6565b9050919050565b7f526573657276652063616e2774206265206c657373207468616e2075736564005f82015250565b5f610d5a601f83610cae565b9150610d6582610d26565b602082019050919050565b5f6020820190508181035f830152610d8781610d4e565b9050919050565b7f43616e6e6f7420726564756365206d6f7265207468616e2075736564000000005f82015250565b5f610dc2601c83610cae565b9150610dcd82610d8e565b602082019050919050565b5f6020820190508181035f830152610def81610db6565b9050919050565b5f610e0082610bc8565b9150610e0b83610bc8565b9250828203905081811115610e2357610e22610c4e565b5b92915050565b610e3281610b4f565b82525050565b5f604082019050610e4b5f830185610e29565b610e586020830184610ab3565b939250505056fea2646970667358221220ce98851f138beb9738db75883288cb82641e74e13f1fa7eb39191ef5cbfb347064736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF3 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x64E7782A GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xC112A08F GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xC112A08F EQ PUSH2 0x26F JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x28D JUMPI DUP1 PUSH4 0xECAD4F68 EQ PUSH2 0x2A9 JUMPI DUP1 PUSH4 0xFF9B1B11 EQ PUSH2 0x2C5 JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x64E7782A EQ PUSH2 0x1E5 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x203 JUMPI DUP1 PUSH4 0x9E341119 EQ PUSH2 0x233 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x251 JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x2F2FF15D GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x175 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x191 JUMPI DUP1 PUSH4 0x3DD0104E EQ PUSH2 0x1AD JUMPI DUP1 PUSH4 0x4F547369 EQ PUSH2 0x1C9 JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xF7 JUMPI DUP1 PUSH4 0xFBBFB55 EQ PUSH2 0x127 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x145 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x111 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10C SWAP2 SWAP1 PUSH2 0xA4C JUMP JUMPDEST PUSH2 0x2E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11E SWAP2 SWAP1 PUSH2 0xA91 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12F PUSH2 0x35C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13C SWAP2 SWAP1 PUSH2 0xAC2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15A SWAP2 SWAP1 PUSH2 0xB05 JUMP JUMPDEST PUSH2 0x380 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16C SWAP2 SWAP1 PUSH2 0xAC2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18A SWAP2 SWAP1 PUSH2 0xB8A JUMP JUMPDEST PUSH2 0x39C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1AB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A6 SWAP2 SWAP1 PUSH2 0xB8A JUMP JUMPDEST PUSH2 0x3BE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C2 SWAP2 SWAP1 PUSH2 0xBFB JUMP JUMPDEST PUSH2 0x439 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DE SWAP2 SWAP1 PUSH2 0xBFB JUMP JUMPDEST PUSH2 0x508 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1ED PUSH2 0x5B9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FA SWAP2 SWAP1 PUSH2 0xC35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x21D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x218 SWAP2 SWAP1 PUSH2 0xB8A JUMP JUMPDEST PUSH2 0x5BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22A SWAP2 SWAP1 PUSH2 0xA91 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23B PUSH2 0x622 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x248 SWAP2 SWAP1 PUSH2 0xAC2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x259 PUSH2 0x646 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x266 SWAP2 SWAP1 PUSH2 0xAC2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x277 PUSH2 0x64C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x284 SWAP2 SWAP1 PUSH2 0xC35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A2 SWAP2 SWAP1 PUSH2 0xB8A JUMP JUMPDEST PUSH2 0x652 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2C3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2BE SWAP2 SWAP1 PUSH2 0xBFB JUMP JUMPDEST PUSH2 0x674 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2CD PUSH2 0x736 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DA SWAP2 SWAP1 PUSH2 0xC35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x355 JUMPI POP PUSH2 0x354 DUP3 PUSH2 0x74C JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0xD32FD1EE5F4F111DA6F27444787E5200EC57A8849509C00EF2998467052B32A3 DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3A5 DUP3 PUSH2 0x380 JUMP JUMPDEST PUSH2 0x3AE DUP2 PUSH2 0x7B5 JUMP JUMPDEST PUSH2 0x3B8 DUP4 DUP4 PUSH2 0x7C9 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x3C6 PUSH2 0x8B2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x42A JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x434 DUP3 DUP3 PUSH2 0x8B9 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0xD32FD1EE5F4F111DA6F27444787E5200EC57A8849509C00EF2998467052B32A3 PUSH2 0x463 DUP2 PUSH2 0x7B5 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP3 PUSH1 0x2 SLOAD PUSH2 0x474 SWAP2 SWAP1 PUSH2 0xC7B JUMP JUMPDEST GT ISZERO PUSH2 0x4B5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4AC SWAP1 PUSH2 0xD08 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x4C6 SWAP2 SWAP1 PUSH2 0xC7B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH32 0xA0A9AF6AE1130972D7FBD89D32FD511AABD55C98D30AA1D4B23D823FD9927FE6 DUP3 PUSH1 0x40 MLOAD PUSH2 0x4FC SWAP2 SWAP1 PUSH2 0xC35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH32 0x7EDCEE67725A77BFA311B39349D7E96DF9B23FBDBDCB328DFC17D77926920C13 PUSH2 0x532 DUP2 PUSH2 0x7B5 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP3 LT ISZERO PUSH2 0x577 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x56E SWAP1 PUSH2 0xD70 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH32 0x85E15AEE91823036F338B40B55F10EEA0356CFB9DA506963651AC73E503F47DB DUP3 PUSH1 0x40 MLOAD PUSH2 0x5AD SWAP2 SWAP1 PUSH2 0xC35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x7EDCEE67725A77BFA311B39349D7E96DF9B23FBDBDCB328DFC17D77926920C13 DUP2 JUMP JUMPDEST PUSH0 PUSH0 SHL DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x65B DUP3 PUSH2 0x380 JUMP JUMPDEST PUSH2 0x664 DUP2 PUSH2 0x7B5 JUMP JUMPDEST PUSH2 0x66E DUP4 DUP4 PUSH2 0x8B9 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH32 0xD32FD1EE5F4F111DA6F27444787E5200EC57A8849509C00EF2998467052B32A3 PUSH2 0x69E DUP2 PUSH2 0x7B5 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP3 GT ISZERO PUSH2 0x6E3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6DA SWAP1 PUSH2 0xDD8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x6F4 SWAP2 SWAP1 PUSH2 0xDF6 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH32 0xA480C0C45745EEE4DEE1EFEBCB3BC13DFAD876477C3EBFCD594EFDDA76CD24C4 DUP3 PUSH1 0x40 MLOAD PUSH2 0x72A SWAP2 SWAP1 PUSH2 0xC35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD PUSH1 0x1 SLOAD PUSH2 0x747 SWAP2 SWAP1 PUSH2 0xDF6 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7C6 DUP2 PUSH2 0x7C1 PUSH2 0x8B2 JUMP JUMPDEST PUSH2 0x9A2 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x7D4 DUP4 DUP4 PUSH2 0x5BF JUMP JUMPDEST PUSH2 0x8A8 JUMPI PUSH1 0x1 PUSH0 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x845 PUSH2 0x8B2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x8AC JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x8C4 DUP4 DUP4 PUSH2 0x5BF JUMP JUMPDEST ISZERO PUSH2 0x998 JUMPI PUSH0 PUSH0 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x935 PUSH2 0x8B2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x99C JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x9AC DUP3 DUP3 PUSH2 0x5BF JUMP JUMPDEST PUSH2 0x9EF JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9E6 SWAP3 SWAP2 SWAP1 PUSH2 0xE38 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA2B DUP2 PUSH2 0x9F7 JUMP JUMPDEST DUP2 EQ PUSH2 0xA35 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA46 DUP2 PUSH2 0xA22 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA61 JUMPI PUSH2 0xA60 PUSH2 0x9F3 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xA6E DUP5 DUP3 DUP6 ADD PUSH2 0xA38 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA8B DUP2 PUSH2 0xA77 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xAA4 PUSH0 DUP4 ADD DUP5 PUSH2 0xA82 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xABC DUP2 PUSH2 0xAAA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xAD5 PUSH0 DUP4 ADD DUP5 PUSH2 0xAB3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xAE4 DUP2 PUSH2 0xAAA JUMP JUMPDEST DUP2 EQ PUSH2 0xAEE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xAFF DUP2 PUSH2 0xADB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB1A JUMPI PUSH2 0xB19 PUSH2 0x9F3 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xB27 DUP5 DUP3 DUP6 ADD PUSH2 0xAF1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xB59 DUP3 PUSH2 0xB30 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB69 DUP2 PUSH2 0xB4F JUMP JUMPDEST DUP2 EQ PUSH2 0xB73 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB84 DUP2 PUSH2 0xB60 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBA0 JUMPI PUSH2 0xB9F PUSH2 0x9F3 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xBAD DUP6 DUP3 DUP7 ADD PUSH2 0xAF1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xBBE DUP6 DUP3 DUP7 ADD PUSH2 0xB76 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBDA DUP2 PUSH2 0xBC8 JUMP JUMPDEST DUP2 EQ PUSH2 0xBE4 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBF5 DUP2 PUSH2 0xBD1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC10 JUMPI PUSH2 0xC0F PUSH2 0x9F3 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xC1D DUP5 DUP3 DUP6 ADD PUSH2 0xBE7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC2F DUP2 PUSH2 0xBC8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC48 PUSH0 DUP4 ADD DUP5 PUSH2 0xC26 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xC85 DUP3 PUSH2 0xBC8 JUMP JUMPDEST SWAP2 POP PUSH2 0xC90 DUP4 PUSH2 0xBC8 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xCA8 JUMPI PUSH2 0xCA7 PUSH2 0xC4E JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F7420656E6F75676820706879736963616C20726573657276650000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xCF2 PUSH1 0x1B DUP4 PUSH2 0xCAE JUMP JUMPDEST SWAP2 POP PUSH2 0xCFD DUP3 PUSH2 0xCBE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xD1F DUP2 PUSH2 0xCE6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x526573657276652063616E2774206265206C657373207468616E207573656400 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xD5A PUSH1 0x1F DUP4 PUSH2 0xCAE JUMP JUMPDEST SWAP2 POP PUSH2 0xD65 DUP3 PUSH2 0xD26 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xD87 DUP2 PUSH2 0xD4E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E6E6F7420726564756365206D6F7265207468616E207573656400000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xDC2 PUSH1 0x1C DUP4 PUSH2 0xCAE JUMP JUMPDEST SWAP2 POP PUSH2 0xDCD DUP3 PUSH2 0xD8E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xDEF DUP2 PUSH2 0xDB6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xE00 DUP3 PUSH2 0xBC8 JUMP JUMPDEST SWAP2 POP PUSH2 0xE0B DUP4 PUSH2 0xBC8 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xE23 JUMPI PUSH2 0xE22 PUSH2 0xC4E JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE32 DUP2 PUSH2 0xB4F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xE4B PUSH0 DUP4 ADD DUP6 PUSH2 0xE29 JUMP JUMPDEST PUSH2 0xE58 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xAB3 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCE SWAP9 DUP6 0x1F SGT DUP12 0xEB SWAP8 CODESIZE 0xDB PUSH22 0x883288CB82641E74E13F1FA7EB39191EF5CBFB347064 PUSH20 0x6F6C634300081E00330000000000000000000000 ",
							"sourceMap": "206:1892:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2565:202:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;329:78:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3810:120:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4226:136;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5328:245;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1324:247:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;988:228;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;414:32;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2854:136:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;251:72:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2187:49:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;487:26:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4642:138:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1668:233:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1983:113;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2565:202:0;2650:4;2688:32;2673:47;;;:11;:47;;;;:87;;;;2724:36;2748:11;2724:23;:36::i;:::-;2673:87;2666:94;;2565:202;;;:::o;329:78:5:-;375:32;329:78;:::o;3810:120:0:-;3875:7;3901:6;:12;3908:4;3901:12;;;;;;;;;;;:22;;;3894:29;;3810:120;;;:::o;4226:136::-;4300:18;4313:4;4300:12;:18::i;:::-;2464:16;2475:4;2464:10;:16::i;:::-;4330:25:::1;4341:4;4347:7;4330:10;:25::i;:::-;;4226:136:::0;;;:::o;5328:245::-;5443:12;:10;:12::i;:::-;5421:34;;:18;:34;;;5417:102;;5478:30;;;;;;;;;;;;;;5417:102;5529:37;5541:4;5547:18;5529:11;:37::i;:::-;;5328:245;;:::o;1324:247:5:-;375:32;2464:16:0;2475:4;2464:10;:16::i;:::-;1445:17:5::1;;1435:6;1421:11;;:20;;;;:::i;:::-;:41;;1413:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;1519:6;1504:11;;:21;;;;;;;:::i;:::-;;;;;;;;1540:24;1557:6;1540:24;;;;;;:::i;:::-;;;;;;;;1324:247:::0;;:::o;988:228::-;294:29;2464:16:0;2475:4;2464:10;:16::i;:::-;1091:11:5::1;;1082:5;:20;;1074:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;1168:5;1148:17;:25;;;;1188:21;1203:5;1188:21;;;;;;:::i;:::-;;;;;;;;988:228:::0;;:::o;414:32::-;;;;:::o;2854:136:0:-;2931:4;2954:6;:12;2961:4;2954:12;;;;;;;;;;;:20;;:29;2975:7;2954:29;;;;;;;;;;;;;;;;;;;;;;;;;2947:36;;2854:136;;;;:::o;251:72:5:-;294:29;251:72;:::o;2187:49:0:-;2232:4;2187:49;;;:::o;487:26:5:-;;;;:::o;4642:138:0:-;4717:18;4730:4;4717:12;:18::i;:::-;2464:16;2475:4;2464:10;:16::i;:::-;4747:26:::1;4759:4;4765:7;4747:11;:26::i;:::-;;4642:138:::0;;;:::o;1668:233:5:-;375:32;2464:16:0;2475:4;2464:10;:16::i;:::-;1778:11:5::1;;1768:6;:21;;1760:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;1847:6;1832:11;;:21;;;;;;;:::i;:::-;;;;;;;;1868:26;1887:6;1868:26;;;;;;:::i;:::-;;;;;;;;1668:233:::0;;:::o;1983:113::-;2032:7;2078:11;;2058:17;;:31;;;;:::i;:::-;2051:38;;1983:113;:::o;763:146:3:-;839:4;877:25;862:40;;;:11;:40;;;;855:47;;763:146;;;:::o;3199:103:0:-;3265:30;3276:4;3282:12;:10;:12::i;:::-;3265:10;:30::i;:::-;3199:103;:::o;6179:316::-;6256:4;6277:22;6285:4;6291:7;6277;:22::i;:::-;6272:217;;6347:4;6315:6;:12;6322:4;6315:12;;;;;;;;;;;:20;;:29;6336:7;6315:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;6397:12;:10;:12::i;:::-;6370:40;;6388:7;6370:40;;6382:4;6370:40;;;;;;;;;;6431:4;6424:11;;;;6272:217;6473:5;6466:12;;6179:316;;;;;:::o;656:96:2:-;709:7;735:10;728:17;;656:96;:::o;6732:317:0:-;6810:4;6830:22;6838:4;6844:7;6830;:22::i;:::-;6826:217;;;6900:5;6868:6;:12;6875:4;6868:12;;;;;;;;;;;:20;;:29;6889:7;6868:29;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;6951:12;:10;:12::i;:::-;6924:40;;6942:7;6924:40;;6936:4;6924:40;;;;;;;;;;6985:4;6978:11;;;;6826:217;7027:5;7020:12;;6732:317;;;;;:::o;3432:197::-;3520:22;3528:4;3534:7;3520;:22::i;:::-;3515:108;;3598:7;3607:4;3565:47;;;;;;;;;;;;:::i;:::-;;;;;;;;3515:108;3432:197;;:::o;88:117:6:-;197:1;194;187:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:77::-;1555:7;1584:5;1573:16;;1518:77;;;:::o;1601:118::-;1688:24;1706:5;1688:24;:::i;:::-;1683:3;1676:37;1601:118;;:::o;1725:222::-;1818:4;1856:2;1845:9;1841:18;1833:26;;1869:71;1937:1;1926:9;1922:17;1913:6;1869:71;:::i;:::-;1725:222;;;;:::o;1953:122::-;2026:24;2044:5;2026:24;:::i;:::-;2019:5;2016:35;2006:63;;2065:1;2062;2055:12;2006:63;1953:122;:::o;2081:139::-;2127:5;2165:6;2152:20;2143:29;;2181:33;2208:5;2181:33;:::i;:::-;2081:139;;;;:::o;2226:329::-;2285:6;2334:2;2322:9;2313:7;2309:23;2305:32;2302:119;;;2340:79;;:::i;:::-;2302:119;2460:1;2485:53;2530:7;2521:6;2510:9;2506:22;2485:53;:::i;:::-;2475:63;;2431:117;2226:329;;;;:::o;2561:126::-;2598:7;2638:42;2631:5;2627:54;2616:65;;2561:126;;;:::o;2693:96::-;2730:7;2759:24;2777:5;2759:24;:::i;:::-;2748:35;;2693:96;;;:::o;2795:122::-;2868:24;2886:5;2868:24;:::i;:::-;2861:5;2858:35;2848:63;;2907:1;2904;2897:12;2848:63;2795:122;:::o;2923:139::-;2969:5;3007:6;2994:20;2985:29;;3023:33;3050:5;3023:33;:::i;:::-;2923:139;;;;:::o;3068:474::-;3136:6;3144;3193:2;3181:9;3172:7;3168:23;3164:32;3161:119;;;3199:79;;:::i;:::-;3161:119;3319:1;3344:53;3389:7;3380:6;3369:9;3365:22;3344:53;:::i;:::-;3334:63;;3290:117;3446:2;3472:53;3517:7;3508:6;3497:9;3493:22;3472:53;:::i;:::-;3462:63;;3417:118;3068:474;;;;;:::o;3548:77::-;3585:7;3614:5;3603:16;;3548:77;;;:::o;3631:122::-;3704:24;3722:5;3704:24;:::i;:::-;3697:5;3694:35;3684:63;;3743:1;3740;3733:12;3684:63;3631:122;:::o;3759:139::-;3805:5;3843:6;3830:20;3821:29;;3859:33;3886:5;3859:33;:::i;:::-;3759:139;;;;:::o;3904:329::-;3963:6;4012:2;4000:9;3991:7;3987:23;3983:32;3980:119;;;4018:79;;:::i;:::-;3980:119;4138:1;4163:53;4208:7;4199:6;4188:9;4184:22;4163:53;:::i;:::-;4153:63;;4109:117;3904:329;;;;:::o;4239:118::-;4326:24;4344:5;4326:24;:::i;:::-;4321:3;4314:37;4239:118;;:::o;4363:222::-;4456:4;4494:2;4483:9;4479:18;4471:26;;4507:71;4575:1;4564:9;4560:17;4551:6;4507:71;:::i;:::-;4363:222;;;;:::o;4591:180::-;4639:77;4636:1;4629:88;4736:4;4733:1;4726:15;4760:4;4757:1;4750:15;4777:191;4817:3;4836:20;4854:1;4836:20;:::i;:::-;4831:25;;4870:20;4888:1;4870:20;:::i;:::-;4865:25;;4913:1;4910;4906:9;4899:16;;4934:3;4931:1;4928:10;4925:36;;;4941:18;;:::i;:::-;4925:36;4777:191;;;;:::o;4974:169::-;5058:11;5092:6;5087:3;5080:19;5132:4;5127:3;5123:14;5108:29;;4974:169;;;;:::o;5149:177::-;5289:29;5285:1;5277:6;5273:14;5266:53;5149:177;:::o;5332:366::-;5474:3;5495:67;5559:2;5554:3;5495:67;:::i;:::-;5488:74;;5571:93;5660:3;5571:93;:::i;:::-;5689:2;5684:3;5680:12;5673:19;;5332:366;;;:::o;5704:419::-;5870:4;5908:2;5897:9;5893:18;5885:26;;5957:9;5951:4;5947:20;5943:1;5932:9;5928:17;5921:47;5985:131;6111:4;5985:131;:::i;:::-;5977:139;;5704:419;;;:::o;6129:181::-;6269:33;6265:1;6257:6;6253:14;6246:57;6129:181;:::o;6316:366::-;6458:3;6479:67;6543:2;6538:3;6479:67;:::i;:::-;6472:74;;6555:93;6644:3;6555:93;:::i;:::-;6673:2;6668:3;6664:12;6657:19;;6316:366;;;:::o;6688:419::-;6854:4;6892:2;6881:9;6877:18;6869:26;;6941:9;6935:4;6931:20;6927:1;6916:9;6912:17;6905:47;6969:131;7095:4;6969:131;:::i;:::-;6961:139;;6688:419;;;:::o;7113:178::-;7253:30;7249:1;7241:6;7237:14;7230:54;7113:178;:::o;7297:366::-;7439:3;7460:67;7524:2;7519:3;7460:67;:::i;:::-;7453:74;;7536:93;7625:3;7536:93;:::i;:::-;7654:2;7649:3;7645:12;7638:19;;7297:366;;;:::o;7669:419::-;7835:4;7873:2;7862:9;7858:18;7850:26;;7922:9;7916:4;7912:20;7908:1;7897:9;7893:17;7886:47;7950:131;8076:4;7950:131;:::i;:::-;7942:139;;7669:419;;;:::o;8094:194::-;8134:4;8154:20;8172:1;8154:20;:::i;:::-;8149:25;;8188:20;8206:1;8188:20;:::i;:::-;8183:25;;8232:1;8229;8225:9;8217:17;;8256:1;8250:4;8247:11;8244:37;;;8261:18;;:::i;:::-;8244:37;8094:194;;;;:::o;8294:118::-;8381:24;8399:5;8381:24;:::i;:::-;8376:3;8369:37;8294:118;;:::o;8418:332::-;8539:4;8577:2;8566:9;8562:18;8554:26;;8590:71;8658:1;8647:9;8643:17;8634:6;8590:71;:::i;:::-;8671:72;8739:2;8728:9;8724:18;8715:6;8671:72;:::i;:::-;8418:332;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "746600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DEFAULT_ADMIN_ROLE()": "418",
								"TOKEN_CONTRACT_ROLE()": "371",
								"VAULT_ADMIN_ROLE()": "392",
								"addReserveUsed(uint256)": "infinite",
								"availableGrams()": "infinite",
								"getRoleAdmin(bytes32)": "infinite",
								"grantRole(bytes32,address)": "infinite",
								"hasRole(bytes32,address)": "3165",
								"reduceReserveUsed(uint256)": "infinite",
								"renounceRole(bytes32,address)": "infinite",
								"reserveUsed()": "2447",
								"revokeRole(bytes32,address)": "infinite",
								"setTotalReserve(uint256)": "infinite",
								"supportsInterface(bytes4)": "741",
								"totalReserveGrams()": "2448"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 206,
									"end": 2098,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 206,
									"end": 2098,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 206,
									"end": 2098,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 714,
									"end": 895,
									"name": "CALLVALUE",
									"source": 5
								},
								{
									"begin": 714,
									"end": 895,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 714,
									"end": 895,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 714,
									"end": 895,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 714,
									"end": 895,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 714,
									"end": 895,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 714,
									"end": 895,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 714,
									"end": 895,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 714,
									"end": 895,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 714,
									"end": 895,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 714,
									"end": 895,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 714,
									"end": 895,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 714,
									"end": 895,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 714,
									"end": 895,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 714,
									"end": 895,
									"name": "CODESIZE",
									"source": 5
								},
								{
									"begin": 714,
									"end": 895,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 714,
									"end": 895,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 714,
									"end": 895,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 714,
									"end": 895,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 714,
									"end": 895,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 714,
									"end": 895,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 714,
									"end": 895,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 714,
									"end": 895,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 714,
									"end": 895,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 714,
									"end": 895,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 714,
									"end": 895,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 714,
									"end": 895,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 714,
									"end": 895,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 714,
									"end": 895,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 714,
									"end": 895,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 714,
									"end": 895,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 714,
									"end": 895,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 714,
									"end": 895,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 714,
									"end": 895,
									"name": "tag",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 714,
									"end": 895,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 776,
									"end": 777,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 759,
									"end": 778,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 759,
									"end": 778,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 759,
									"end": 764,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 759,
									"end": 778,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 759,
									"end": 778,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 759,
									"end": 778,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 751,
									"end": 796,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 751,
									"end": 796,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 751,
									"end": 796,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 751,
									"end": 796,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 751,
									"end": 796,
									"name": "PUSH",
									"source": 5,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 751,
									"end": 796,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 751,
									"end": 796,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 751,
									"end": 796,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 751,
									"end": 796,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 751,
									"end": 796,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "7"
								},
								{
									"begin": 751,
									"end": 796,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 751,
									"end": 796,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 751,
									"end": 796,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 751,
									"end": 796,
									"name": "tag",
									"source": 5,
									"value": "7"
								},
								{
									"begin": 751,
									"end": 796,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 751,
									"end": 796,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 751,
									"end": 796,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 751,
									"end": 796,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 751,
									"end": 796,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 751,
									"end": 796,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 751,
									"end": 796,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 751,
									"end": 796,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 751,
									"end": 796,
									"name": "tag",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 751,
									"end": 796,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 806,
									"end": 843,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "9"
								},
								{
									"begin": 2232,
									"end": 2236,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 817,
									"end": 835,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 817,
									"end": 835,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 837,
									"end": 842,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 806,
									"end": 816,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 806,
									"end": 816,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 806,
									"end": 816,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 806,
									"end": 843,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 806,
									"end": 843,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 806,
									"end": 843,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 806,
									"end": 843,
									"name": "tag",
									"source": 5,
									"value": "9"
								},
								{
									"begin": 806,
									"end": 843,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 806,
									"end": 843,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 853,
									"end": 888,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 294,
									"end": 323,
									"name": "PUSH",
									"source": 5,
									"value": "7EDCEE67725A77BFA311B39349D7E96DF9B23FBDBDCB328DFC17D77926920C13"
								},
								{
									"begin": 882,
									"end": 887,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 853,
									"end": 863,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 853,
									"end": 863,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 853,
									"end": 863,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 853,
									"end": 888,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 853,
									"end": 888,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 853,
									"end": 888,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 853,
									"end": 888,
									"name": "tag",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 853,
									"end": 888,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 853,
									"end": 888,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 714,
									"end": 895,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 206,
									"end": 2098,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "12"
								},
								{
									"begin": 206,
									"end": 2098,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6256,
									"end": 6260,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 6285,
									"end": 6289,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6298,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6277,
									"end": 6284,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 6277,
									"end": 6284,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6277,
									"end": 6284,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 6277,
									"end": 6299,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 6347,
									"end": 6351,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6315,
									"end": 6321,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6322,
									"end": 6326,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6335,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6335,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6336,
									"end": 6343,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 6397,
									"end": 6407,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 6397,
									"end": 6407,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6397,
									"end": 6407,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 6397,
									"end": 6409,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6388,
									"end": 6395,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6382,
									"end": 6386,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "LOG4",
									"source": 0
								},
								{
									"begin": 6431,
									"end": 6435,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6473,
									"end": 6478,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6466,
									"end": 6478,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6466,
									"end": 6478,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2931,
									"end": 2935,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2960,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2961,
									"end": 2965,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2974,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2974,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2975,
									"end": 2982,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2947,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2947,
									"end": 2983,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 656,
									"end": 752,
									"name": "tag",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 656,
									"end": 752,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 709,
									"end": 716,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 735,
									"end": 745,
									"name": "CALLER",
									"source": 2
								},
								{
									"begin": 728,
									"end": 745,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 728,
									"end": 745,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 656,
									"end": 752,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 656,
									"end": 752,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "38"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 6,
									"value": "38"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "45"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "46"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 970,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 6,
									"value": "46"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 6,
									"value": "45"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "47"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 1115,
									"end": 1179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 6,
									"value": "47"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1202,
									"end": 1371,
									"name": "tag",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 1202,
									"end": 1371,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1286,
									"end": 1297,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1320,
									"end": 1326,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1315,
									"end": 1318,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1308,
									"end": 1327,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1360,
									"end": 1364,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1355,
									"end": 1358,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1351,
									"end": 1365,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1336,
									"end": 1365,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1336,
									"end": 1365,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1202,
									"end": 1371,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1202,
									"end": 1371,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1202,
									"end": 1371,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1202,
									"end": 1371,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1202,
									"end": 1371,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1377,
									"end": 1540,
									"name": "tag",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 1377,
									"end": 1540,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1517,
									"end": 1532,
									"name": "PUSH",
									"source": 6,
									"value": "496E76616C69642061646D696E00000000000000000000000000000000000000"
								},
								{
									"begin": 1513,
									"end": 1514,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1505,
									"end": 1511,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1501,
									"end": 1515,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1494,
									"end": 1533,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1377,
									"end": 1540,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1377,
									"end": 1540,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1546,
									"end": 1912,
									"name": "tag",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 1546,
									"end": 1912,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1688,
									"end": 1691,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1709,
									"end": 1776,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "51"
								},
								{
									"begin": 1773,
									"end": 1775,
									"name": "PUSH",
									"source": 6,
									"value": "D"
								},
								{
									"begin": 1768,
									"end": 1771,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1709,
									"end": 1776,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 1709,
									"end": 1776,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1709,
									"end": 1776,
									"name": "tag",
									"source": 6,
									"value": "51"
								},
								{
									"begin": 1709,
									"end": 1776,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1702,
									"end": 1776,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1702,
									"end": 1776,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1785,
									"end": 1878,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "52"
								},
								{
									"begin": 1874,
									"end": 1877,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1785,
									"end": 1878,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 1785,
									"end": 1878,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1785,
									"end": 1878,
									"name": "tag",
									"source": 6,
									"value": "52"
								},
								{
									"begin": 1785,
									"end": 1878,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1903,
									"end": 1905,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1898,
									"end": 1901,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1894,
									"end": 1906,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1887,
									"end": 1906,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1887,
									"end": 1906,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1546,
									"end": 1912,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1546,
									"end": 1912,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1546,
									"end": 1912,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1546,
									"end": 1912,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1918,
									"end": 2337,
									"name": "tag",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 1918,
									"end": 2337,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2084,
									"end": 2088,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2122,
									"end": 2124,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2111,
									"end": 2120,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2107,
									"end": 2125,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2099,
									"end": 2125,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2099,
									"end": 2125,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2171,
									"end": 2180,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2165,
									"end": 2169,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2161,
									"end": 2181,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 2157,
									"end": 2158,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2146,
									"end": 2155,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 2142,
									"end": 2159,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2135,
									"end": 2182,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2199,
									"end": 2330,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "54"
								},
								{
									"begin": 2325,
									"end": 2329,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2199,
									"end": 2330,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 2199,
									"end": 2330,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2199,
									"end": 2330,
									"name": "tag",
									"source": 6,
									"value": "54"
								},
								{
									"begin": 2199,
									"end": 2330,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2191,
									"end": 2330,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2191,
									"end": 2330,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1918,
									"end": 2337,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1918,
									"end": 2337,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1918,
									"end": 2337,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1918,
									"end": 2337,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 206,
									"end": 2098,
									"name": "tag",
									"source": 5,
									"value": "12"
								},
								{
									"begin": 206,
									"end": 2098,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 206,
									"end": 2098,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 206,
									"end": 2098,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 206,
									"end": 2098,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 206,
									"end": 2098,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 206,
									"end": 2098,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 206,
									"end": 2098,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 206,
									"end": 2098,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ce98851f138beb9738db75883288cb82641e74e13f1fa7eb39191ef5cbfb347064736f6c634300081e0033",
									".code": [
										{
											"begin": 206,
											"end": 2098,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 206,
											"end": 2098,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 206,
											"end": 2098,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 206,
											"end": 2098,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 206,
											"end": 2098,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 206,
											"end": 2098,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 206,
											"end": 2098,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 206,
											"end": 2098,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 206,
											"end": 2098,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 206,
											"end": 2098,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 206,
											"end": 2098,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 206,
											"end": 2098,
											"name": "tag",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 206,
											"end": 2098,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 206,
											"end": 2098,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 206,
											"end": 2098,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 206,
											"end": 2098,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 206,
											"end": 2098,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 206,
											"end": 2098,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 206,
											"end": 2098,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 206,
											"end": 2098,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 206,
											"end": 2098,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 206,
											"end": 2098,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 206,
											"end": 2098,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 206,
											"end": 2098,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 206,
											"end": 2098,
											"name": "PUSH",
											"source": 5,
											"value": "64E7782A"
										},
										{
											"begin": 206,
											"end": 2098,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 206,
											"end": 2098,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 206,
											"end": 2098,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 206,
											"end": 2098,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 206,
											"end": 2098,
											"name": "PUSH",
											"source": 5,
											"value": "C112A08F"
										},
										{
											"begin": 206,
											"end": 2098,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 206,
											"end": 2098,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 206,
											"end": 2098,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 206,
											"end": 2098,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 206,
											"end": 2098,
											"name": "PUSH",
											"source": 5,
											"value": "C112A08F"
										},
										{
											"begin": 206,
											"end": 2098,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 206,
											"end": 2098,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 206,
											"end": 2098,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 206,
											"end": 2098,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 206,
											"end": 2098,
											"name": "PUSH",
											"source": 5,
											"value": "D547741F"
										},
										{
											"begin": 206,
											"end": 2098,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 206,
											"end": 2098,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 206,
											"end": 2098,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 206,
											"end": 2098,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 206,
											"end": 2098,
											"name": "PUSH",
											"source": 5,
											"value": "ECAD4F68"
										},
										{
											"begin": 206,
											"end": 2098,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 206,
											"end": 2098,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 206,
											"end": 2098,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 206,
											"end": 2098,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 206,
											"end": 2098,
											"name": "PUSH",
											"source": 5,
											"value": "FF9B1B11"
										},
										{
											"begin": 206,
											"end": 2098,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 206,
											"end": 2098,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 206,
											"end": 2098,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 206,
											"end": 2098,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 206,
											"end": 2098,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 206,
											"end": 2098,
											"name": "tag",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 206,
											"end": 2098,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 206,
											"end": 2098,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 206,
											"end": 2098,
											"name": "PUSH",
											"source": 5,
											"value": "64E7782A"
										},
										{
											"begin": 206,
											"end": 2098,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 206,
											"end": 2098,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 206,
											"end": 2098,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 206,
											"end": 2098,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 206,
											"end": 2098,
											"name": "PUSH",
											"source": 5,
											"value": "91D14854"
										},
										{
											"begin": 206,
											"end": 2098,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 206,
											"end": 2098,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 206,
											"end": 2098,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 206,
											"end": 2098,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 206,
											"end": 2098,
											"name": "PUSH",
											"source": 5,
											"value": "9E341119"
										},
										{
											"begin": 206,
											"end": 2098,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 206,
											"end": 2098,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 206,
											"end": 2098,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 206,
											"end": 2098,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 206,
											"end": 2098,
											"name": "PUSH",
											"source": 5,
											"value": "A217FDDF"
										},
										{
											"begin": 206,
											"end": 2098,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 206,
											"end": 2098,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 206,
											"end": 2098,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 206,
											"end": 2098,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 206,
											"end": 2098,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 206,
											"end": 2098,
											"name": "tag",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 206,
											"end": 2098,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 206,
											"end": 2098,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 206,
											"end": 2098,
											"name": "PUSH",
											"source": 5,
											"value": "2F2FF15D"
										},
										{
											"begin": 206,
											"end": 2098,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 206,
											"end": 2098,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 206,
											"end": 2098,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 206,
											"end": 2098,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 206,
											"end": 2098,
											"name": "PUSH",
											"source": 5,
											"value": "2F2FF15D"
										},
										{
											"begin": 206,
											"end": 2098,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 206,
											"end": 2098,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 206,
											"end": 2098,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 206,
											"end": 2098,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 206,
											"end": 2098,
											"name": "PUSH",
											"source": 5,
											"value": "36568ABE"
										},
										{
											"begin": 206,
											"end": 2098,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 206,
											"end": 2098,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 206,
											"end": 2098,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 206,
											"end": 2098,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 206,
											"end": 2098,
											"name": "PUSH",
											"source": 5,
											"value": "3DD0104E"
										},
										{
											"begin": 206,
											"end": 2098,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 206,
											"end": 2098,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 206,
											"end": 2098,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 206,
											"end": 2098,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 206,
											"end": 2098,
											"name": "PUSH",
											"source": 5,
											"value": "4F547369"
										},
										{
											"begin": 206,
											"end": 2098,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 206,
											"end": 2098,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 206,
											"end": 2098,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 206,
											"end": 2098,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 206,
											"end": 2098,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 206,
											"end": 2098,
											"name": "tag",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 206,
											"end": 2098,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 206,
											"end": 2098,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 206,
											"end": 2098,
											"name": "PUSH",
											"source": 5,
											"value": "1FFC9A7"
										},
										{
											"begin": 206,
											"end": 2098,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 206,
											"end": 2098,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 206,
											"end": 2098,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 206,
											"end": 2098,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 206,
											"end": 2098,
											"name": "PUSH",
											"source": 5,
											"value": "FBBFB55"
										},
										{
											"begin": 206,
											"end": 2098,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 206,
											"end": 2098,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 206,
											"end": 2098,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 206,
											"end": 2098,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 206,
											"end": 2098,
											"name": "PUSH",
											"source": 5,
											"value": "248A9CA3"
										},
										{
											"begin": 206,
											"end": 2098,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 206,
											"end": 2098,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 206,
											"end": 2098,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 206,
											"end": 2098,
											"name": "tag",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 206,
											"end": 2098,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 206,
											"end": 2098,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 206,
											"end": 2098,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 206,
											"end": 2098,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 329,
											"end": 407,
											"name": "tag",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 329,
											"end": 407,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 329,
											"end": 407,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 329,
											"end": 407,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 329,
											"end": 407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 329,
											"end": 407,
											"name": "tag",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 329,
											"end": 407,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 329,
											"end": 407,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 329,
											"end": 407,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 329,
											"end": 407,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 329,
											"end": 407,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 329,
											"end": 407,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 329,
											"end": 407,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 329,
											"end": 407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 329,
											"end": 407,
											"name": "tag",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 329,
											"end": 407,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 329,
											"end": 407,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 329,
											"end": 407,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 329,
											"end": 407,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 329,
											"end": 407,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 329,
											"end": 407,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 329,
											"end": 407,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 329,
											"end": 407,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 4226,
											"end": 4362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 4226,
											"end": 4362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 5328,
											"end": 5573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 5328,
											"end": 5573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1324,
											"end": 1571,
											"name": "tag",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 1324,
											"end": 1571,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1324,
											"end": 1571,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 1324,
											"end": 1571,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1324,
											"end": 1571,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1324,
											"end": 1571,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1324,
											"end": 1571,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1324,
											"end": 1571,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1324,
											"end": 1571,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1324,
											"end": 1571,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1324,
											"end": 1571,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 1324,
											"end": 1571,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1324,
											"end": 1571,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1324,
											"end": 1571,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 1324,
											"end": 1571,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1324,
											"end": 1571,
											"name": "tag",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 1324,
											"end": 1571,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1324,
											"end": 1571,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 1324,
											"end": 1571,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1324,
											"end": 1571,
											"name": "tag",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 1324,
											"end": 1571,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1324,
											"end": 1571,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 988,
											"end": 1216,
											"name": "tag",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 988,
											"end": 1216,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 988,
											"end": 1216,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 988,
											"end": 1216,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 988,
											"end": 1216,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 988,
											"end": 1216,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 988,
											"end": 1216,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 988,
											"end": 1216,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 988,
											"end": 1216,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 988,
											"end": 1216,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 988,
											"end": 1216,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 988,
											"end": 1216,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 988,
											"end": 1216,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 988,
											"end": 1216,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 988,
											"end": 1216,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 988,
											"end": 1216,
											"name": "tag",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 988,
											"end": 1216,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 988,
											"end": 1216,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 988,
											"end": 1216,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 988,
											"end": 1216,
											"name": "tag",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 988,
											"end": 1216,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 988,
											"end": 1216,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 414,
											"end": 446,
											"name": "tag",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 414,
											"end": 446,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 414,
											"end": 446,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 414,
											"end": 446,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 414,
											"end": 446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 414,
											"end": 446,
											"name": "tag",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 414,
											"end": 446,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 414,
											"end": 446,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 414,
											"end": 446,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 414,
											"end": 446,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 414,
											"end": 446,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 414,
											"end": 446,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 414,
											"end": 446,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 414,
											"end": 446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 414,
											"end": 446,
											"name": "tag",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 414,
											"end": 446,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 414,
											"end": 446,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 414,
											"end": 446,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 414,
											"end": 446,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 414,
											"end": 446,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 414,
											"end": 446,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 414,
											"end": 446,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 414,
											"end": 446,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 251,
											"end": 323,
											"name": "tag",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 251,
											"end": 323,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 251,
											"end": 323,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 251,
											"end": 323,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 251,
											"end": 323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 251,
											"end": 323,
											"name": "tag",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 251,
											"end": 323,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 251,
											"end": 323,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 251,
											"end": 323,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 251,
											"end": 323,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 251,
											"end": 323,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 251,
											"end": 323,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 251,
											"end": 323,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 251,
											"end": 323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 251,
											"end": 323,
											"name": "tag",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 251,
											"end": 323,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 251,
											"end": 323,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 251,
											"end": 323,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 251,
											"end": 323,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 251,
											"end": 323,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 251,
											"end": 323,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 251,
											"end": 323,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 251,
											"end": 323,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 2187,
											"end": 2236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2187,
											"end": 2236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 487,
											"end": 513,
											"name": "tag",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 487,
											"end": 513,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 487,
											"end": 513,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 487,
											"end": 513,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 487,
											"end": 513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 487,
											"end": 513,
											"name": "tag",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 487,
											"end": 513,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 487,
											"end": 513,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 487,
											"end": 513,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 487,
											"end": 513,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 487,
											"end": 513,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 487,
											"end": 513,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 487,
											"end": 513,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 487,
											"end": 513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 487,
											"end": 513,
											"name": "tag",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 487,
											"end": 513,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 487,
											"end": 513,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 487,
											"end": 513,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 487,
											"end": 513,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 487,
											"end": 513,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 487,
											"end": 513,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 487,
											"end": 513,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 487,
											"end": 513,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 4642,
											"end": 4780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 4642,
											"end": 4780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1901,
											"name": "tag",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 1668,
											"end": 1901,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1668,
											"end": 1901,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 1668,
											"end": 1901,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1668,
											"end": 1901,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1668,
											"end": 1901,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1668,
											"end": 1901,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1668,
											"end": 1901,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1668,
											"end": 1901,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1668,
											"end": 1901,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1668,
											"end": 1901,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 1668,
											"end": 1901,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1668,
											"end": 1901,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1668,
											"end": 1901,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 1668,
											"end": 1901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1668,
											"end": 1901,
											"name": "tag",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 1668,
											"end": 1901,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1668,
											"end": 1901,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 1668,
											"end": 1901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1668,
											"end": 1901,
											"name": "tag",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 1668,
											"end": 1901,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1668,
											"end": 1901,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 1983,
											"end": 2096,
											"name": "tag",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 1983,
											"end": 2096,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1983,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 1983,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 1983,
											"end": 2096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1983,
											"end": 2096,
											"name": "tag",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 1983,
											"end": 2096,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1983,
											"end": 2096,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1983,
											"end": 2096,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1983,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 1983,
											"end": 2096,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1983,
											"end": 2096,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1983,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 1983,
											"end": 2096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1983,
											"end": 2096,
											"name": "tag",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 1983,
											"end": 2096,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1983,
											"end": 2096,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1983,
											"end": 2096,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1983,
											"end": 2096,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1983,
											"end": 2096,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1983,
											"end": 2096,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1983,
											"end": 2096,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1983,
											"end": 2096,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2650,
											"end": 2654,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2688,
											"end": 2720,
											"name": "PUSH",
											"source": 0,
											"value": "7965DB0B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2684,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 2760,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2748,
											"end": 2759,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 2747,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 2724,
											"end": 2760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 2760,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2724,
											"end": 2760,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2666,
											"end": 2760,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2666,
											"end": 2760,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 329,
											"end": 407,
											"name": "tag",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 329,
											"end": 407,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 375,
											"end": 407,
											"name": "PUSH",
											"source": 5,
											"value": "D32FD1EE5F4F111DA6F27444787E5200EC57A8849509C00EF2998467052B32A3"
										},
										{
											"begin": 329,
											"end": 407,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 329,
											"end": 407,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3875,
											"end": 3882,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3901,
											"end": 3907,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3908,
											"end": 3912,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3894,
											"end": 3923,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3894,
											"end": 3923,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4300,
											"end": 4318,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 4313,
											"end": 4317,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4300,
											"end": 4312,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 4300,
											"end": 4318,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4300,
											"end": 4318,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 4300,
											"end": 4318,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 4341,
											"end": 4345,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4347,
											"end": 4354,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4340,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 4330,
											"end": 4355,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5443,
											"end": 5455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 5443,
											"end": 5453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 5443,
											"end": 5455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5443,
											"end": 5455,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 5443,
											"end": 5455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5421,
											"end": 5439,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "6697B23200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 5541,
											"end": 5545,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5547,
											"end": 5565,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5540,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 5529,
											"end": 5566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1324,
											"end": 1571,
											"name": "tag",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 1324,
											"end": 1571,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 375,
											"end": 407,
											"name": "PUSH",
											"source": 5,
											"value": "D32FD1EE5F4F111DA6F27444787E5200EC57A8849509C00EF2998467052B32A3"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1445,
											"end": 1462,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1445,
											"end": 1462,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1435,
											"end": 1441,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1421,
											"end": 1432,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 1421,
											"end": 1432,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1421,
											"end": 1441,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 1421,
											"end": 1441,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1421,
											"end": 1441,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1421,
											"end": 1441,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 1421,
											"end": 1441,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1421,
											"end": 1441,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 1421,
											"end": 1441,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1421,
											"end": 1462,
											"modifierDepth": 1,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1421,
											"end": 1462,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1413,
											"end": 1494,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 1413,
											"end": 1494,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1413,
											"end": 1494,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1413,
											"end": 1494,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1413,
											"end": 1494,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1413,
											"end": 1494,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1413,
											"end": 1494,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1413,
											"end": 1494,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1413,
											"end": 1494,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1413,
											"end": 1494,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1413,
											"end": 1494,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1413,
											"end": 1494,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 1413,
											"end": 1494,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1413,
											"end": 1494,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1413,
											"end": 1494,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1413,
											"end": 1494,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1413,
											"end": 1494,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1413,
											"end": 1494,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1413,
											"end": 1494,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1413,
											"end": 1494,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1413,
											"end": 1494,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1413,
											"end": 1494,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1413,
											"end": 1494,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 1413,
											"end": 1494,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1519,
											"end": 1525,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1504,
											"end": 1515,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 1504,
											"end": 1515,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1504,
											"end": 1525,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1504,
											"end": 1525,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1504,
											"end": 1525,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1504,
											"end": 1525,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 1504,
											"end": 1525,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1504,
											"end": 1525,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1504,
											"end": 1525,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 1504,
											"end": 1525,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1504,
											"end": 1525,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 1504,
											"end": 1525,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1504,
											"end": 1525,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1504,
											"end": 1525,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1504,
											"end": 1525,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1504,
											"end": 1525,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1504,
											"end": 1525,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1504,
											"end": 1525,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1504,
											"end": 1525,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1540,
											"end": 1564,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "A0A9AF6AE1130972D7FBD89D32FD511AABD55C98D30AA1D4B23D823FD9927FE6"
										},
										{
											"begin": 1557,
											"end": 1563,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1540,
											"end": 1564,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1540,
											"end": 1564,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1540,
											"end": 1564,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 1540,
											"end": 1564,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1540,
											"end": 1564,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1540,
											"end": 1564,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 1540,
											"end": 1564,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1540,
											"end": 1564,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 1540,
											"end": 1564,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1540,
											"end": 1564,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1540,
											"end": 1564,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1540,
											"end": 1564,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1540,
											"end": 1564,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1540,
											"end": 1564,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1540,
											"end": 1564,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1540,
											"end": 1564,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 5
										},
										{
											"begin": 1324,
											"end": 1571,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1324,
											"end": 1571,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1324,
											"end": 1571,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 988,
											"end": 1216,
											"name": "tag",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 988,
											"end": 1216,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 294,
											"end": 323,
											"name": "PUSH",
											"source": 5,
											"value": "7EDCEE67725A77BFA311B39349D7E96DF9B23FBDBDCB328DFC17D77926920C13"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1102,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 1091,
											"end": 1102,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1082,
											"end": 1087,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1082,
											"end": 1102,
											"modifierDepth": 1,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1082,
											"end": 1102,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1074,
											"end": 1138,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 1074,
											"end": 1138,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1074,
											"end": 1138,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1074,
											"end": 1138,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1074,
											"end": 1138,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1074,
											"end": 1138,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1074,
											"end": 1138,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1074,
											"end": 1138,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1074,
											"end": 1138,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1074,
											"end": 1138,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 1074,
											"end": 1138,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1074,
											"end": 1138,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 1074,
											"end": 1138,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1074,
											"end": 1138,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 1074,
											"end": 1138,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1074,
											"end": 1138,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1074,
											"end": 1138,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1074,
											"end": 1138,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1074,
											"end": 1138,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1074,
											"end": 1138,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1074,
											"end": 1138,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1074,
											"end": 1138,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1074,
											"end": 1138,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 1074,
											"end": 1138,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1168,
											"end": 1173,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1148,
											"end": 1165,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1148,
											"end": 1173,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1148,
											"end": 1173,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1148,
											"end": 1173,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1148,
											"end": 1173,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1188,
											"end": 1209,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "85E15AEE91823036F338B40B55F10EEA0356CFB9DA506963651AC73E503F47DB"
										},
										{
											"begin": 1203,
											"end": 1208,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1188,
											"end": 1209,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1188,
											"end": 1209,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1188,
											"end": 1209,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 1188,
											"end": 1209,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1188,
											"end": 1209,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1188,
											"end": 1209,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 1188,
											"end": 1209,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1188,
											"end": 1209,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 1188,
											"end": 1209,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1188,
											"end": 1209,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1188,
											"end": 1209,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1188,
											"end": 1209,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1188,
											"end": 1209,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1188,
											"end": 1209,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1188,
											"end": 1209,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1188,
											"end": 1209,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 5
										},
										{
											"begin": 988,
											"end": 1216,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 988,
											"end": 1216,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 988,
											"end": 1216,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 414,
											"end": 446,
											"name": "tag",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 414,
											"end": 446,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 414,
											"end": 446,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 414,
											"end": 446,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 414,
											"end": 446,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 414,
											"end": 446,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2931,
											"end": 2935,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2960,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2961,
											"end": 2965,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2974,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2974,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2975,
											"end": 2982,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2947,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2947,
											"end": 2983,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 251,
											"end": 323,
											"name": "tag",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 251,
											"end": 323,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 294,
											"end": 323,
											"name": "PUSH",
											"source": 5,
											"value": "7EDCEE67725A77BFA311B39349D7E96DF9B23FBDBDCB328DFC17D77926920C13"
										},
										{
											"begin": 251,
											"end": 323,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 251,
											"end": 323,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2232,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 487,
											"end": 513,
											"name": "tag",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 487,
											"end": 513,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 487,
											"end": 513,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 487,
											"end": 513,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 487,
											"end": 513,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 487,
											"end": 513,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 4730,
											"end": 4734,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4717,
											"end": 4729,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 4717,
											"end": 4735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 4759,
											"end": 4763,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4765,
											"end": 4772,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4758,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 4747,
											"end": 4773,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1901,
											"name": "tag",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 1668,
											"end": 1901,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 375,
											"end": 407,
											"name": "PUSH",
											"source": 5,
											"value": "D32FD1EE5F4F111DA6F27444787E5200EC57A8849509C00EF2998467052B32A3"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1778,
											"end": 1789,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 1778,
											"end": 1789,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1768,
											"end": 1774,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1768,
											"end": 1789,
											"modifierDepth": 1,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1768,
											"end": 1789,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1822,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 1760,
											"end": 1822,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1822,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1822,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1822,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1760,
											"end": 1822,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1822,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1822,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1760,
											"end": 1822,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1822,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 1760,
											"end": 1822,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1822,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 1760,
											"end": 1822,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1822,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 1760,
											"end": 1822,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1822,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1822,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1822,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1822,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1822,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1822,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1822,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1822,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 1760,
											"end": 1822,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1847,
											"end": 1853,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1832,
											"end": 1843,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 1832,
											"end": 1843,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1832,
											"end": 1853,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1832,
											"end": 1853,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1832,
											"end": 1853,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1832,
											"end": 1853,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 1832,
											"end": 1853,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1832,
											"end": 1853,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1832,
											"end": 1853,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 1832,
											"end": 1853,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1832,
											"end": 1853,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 1832,
											"end": 1853,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1832,
											"end": 1853,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1832,
											"end": 1853,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1832,
											"end": 1853,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1832,
											"end": 1853,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1832,
											"end": 1853,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1832,
											"end": 1853,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1832,
											"end": 1853,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1868,
											"end": 1894,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "A480C0C45745EEE4DEE1EFEBCB3BC13DFAD876477C3EBFCD594EFDDA76CD24C4"
										},
										{
											"begin": 1887,
											"end": 1893,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1868,
											"end": 1894,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1868,
											"end": 1894,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1868,
											"end": 1894,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 1868,
											"end": 1894,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1868,
											"end": 1894,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1868,
											"end": 1894,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 1868,
											"end": 1894,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1868,
											"end": 1894,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 1868,
											"end": 1894,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1868,
											"end": 1894,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1868,
											"end": 1894,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1868,
											"end": 1894,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1868,
											"end": 1894,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1868,
											"end": 1894,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1868,
											"end": 1894,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1868,
											"end": 1894,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 5
										},
										{
											"begin": 1668,
											"end": 1901,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1668,
											"end": 1901,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1668,
											"end": 1901,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1983,
											"end": 2096,
											"name": "tag",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 1983,
											"end": 2096,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2032,
											"end": 2039,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2078,
											"end": 2089,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 2078,
											"end": 2089,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2058,
											"end": 2075,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2058,
											"end": 2075,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2058,
											"end": 2089,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 2058,
											"end": 2089,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2058,
											"end": 2089,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2058,
											"end": 2089,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 2058,
											"end": 2089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2058,
											"end": 2089,
											"name": "tag",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 2058,
											"end": 2089,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2051,
											"end": 2089,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2051,
											"end": 2089,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1983,
											"end": 2096,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1983,
											"end": 2096,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 763,
											"end": 909,
											"name": "tag",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 763,
											"end": 909,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 839,
											"end": 843,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 877,
											"end": 902,
											"name": "PUSH",
											"source": 3,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 862,
											"end": 902,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 862,
											"end": 902,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 862,
											"end": 902,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 862,
											"end": 873,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 862,
											"end": 902,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 862,
											"end": 902,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 862,
											"end": 902,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 862,
											"end": 902,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 855,
											"end": 902,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 855,
											"end": 902,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 763,
											"end": 909,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 763,
											"end": 909,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 763,
											"end": 909,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 763,
											"end": 909,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3295,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 3276,
											"end": 3280,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3282,
											"end": 3294,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 3282,
											"end": 3292,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 3282,
											"end": 3294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3282,
											"end": 3294,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 3282,
											"end": 3294,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 3265,
											"end": 3295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3295,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 3265,
											"end": 3295,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3199,
											"end": 3302,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6256,
											"end": 6260,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6277,
											"end": 6299,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 6285,
											"end": 6289,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6298,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6277,
											"end": 6284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 6277,
											"end": 6299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6277,
											"end": 6299,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 6277,
											"end": 6299,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6347,
											"end": 6351,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6315,
											"end": 6321,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6322,
											"end": 6326,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6335,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6335,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6336,
											"end": 6343,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6397,
											"end": 6409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 6397,
											"end": 6407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 6397,
											"end": 6409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6397,
											"end": 6409,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 6397,
											"end": 6409,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6388,
											"end": 6395,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6382,
											"end": 6386,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 6431,
											"end": 6435,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6473,
											"end": 6478,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6466,
											"end": 6478,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6466,
											"end": 6478,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6732,
											"end": 7049,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 6732,
											"end": 7049,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6810,
											"end": 6814,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6830,
											"end": 6852,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 6838,
											"end": 6842,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6851,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6830,
											"end": 6837,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 6830,
											"end": 6852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6830,
											"end": 6852,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 6830,
											"end": 6852,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6826,
											"end": 7043,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6826,
											"end": 7043,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 6826,
											"end": 7043,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6900,
											"end": 6905,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6868,
											"end": 6874,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6868,
											"end": 6880,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6875,
											"end": 6879,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6880,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6880,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6880,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6868,
											"end": 6880,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6880,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6880,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6880,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6880,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6868,
											"end": 6880,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6880,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6868,
											"end": 6880,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6888,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6868,
											"end": 6888,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6897,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6889,
											"end": 6896,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6897,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6868,
											"end": 6897,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6897,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6868,
											"end": 6897,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6897,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6897,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6897,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6868,
											"end": 6897,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6897,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6897,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6897,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6897,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6868,
											"end": 6897,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6897,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6868,
											"end": 6897,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6897,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6868,
											"end": 6905,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6868,
											"end": 6905,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6905,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6905,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6905,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6905,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 6868,
											"end": 6905,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6905,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6905,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6905,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6905,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6905,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6905,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6905,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6905,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6905,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6905,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6905,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6951,
											"end": 6963,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 6951,
											"end": 6961,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 6951,
											"end": 6963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6951,
											"end": 6963,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 6951,
											"end": 6963,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6924,
											"end": 6964,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6924,
											"end": 6964,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6942,
											"end": 6949,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6924,
											"end": 6964,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6924,
											"end": 6964,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6936,
											"end": 6940,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6924,
											"end": 6964,
											"name": "PUSH",
											"source": 0,
											"value": "F6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
										},
										{
											"begin": 6924,
											"end": 6964,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6924,
											"end": 6964,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6924,
											"end": 6964,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6924,
											"end": 6964,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6924,
											"end": 6964,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6924,
											"end": 6964,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6924,
											"end": 6964,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6924,
											"end": 6964,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6924,
											"end": 6964,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 6985,
											"end": 6989,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6978,
											"end": 6989,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6978,
											"end": 6989,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6978,
											"end": 6989,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 6978,
											"end": 6989,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6826,
											"end": 7043,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 6826,
											"end": 7043,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7027,
											"end": 7032,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7020,
											"end": 7032,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7020,
											"end": 7032,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 7049,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 6732,
											"end": 7049,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 7049,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 7049,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 7049,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 7049,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 7049,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3520,
											"end": 3542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 3528,
											"end": 3532,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3541,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3520,
											"end": 3527,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 3520,
											"end": 3542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3520,
											"end": 3542,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 3520,
											"end": 3542,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3598,
											"end": 3605,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3607,
											"end": 3611,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "E2517D3F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 3565,
											"end": 3612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3432,
											"end": 3629,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "tag",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1555,
											"end": 1562,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1584,
											"end": 1589,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1573,
											"end": 1589,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1573,
											"end": 1589,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1518,
											"end": 1595,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1601,
											"end": 1719,
											"name": "tag",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 1601,
											"end": 1719,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1688,
											"end": 1712,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 1706,
											"end": 1711,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1688,
											"end": 1712,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 1688,
											"end": 1712,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1688,
											"end": 1712,
											"name": "tag",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 1688,
											"end": 1712,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1683,
											"end": 1686,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1676,
											"end": 1713,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1601,
											"end": 1719,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1601,
											"end": 1719,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1601,
											"end": 1719,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1725,
											"end": 1947,
											"name": "tag",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 1725,
											"end": 1947,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1818,
											"end": 1822,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1856,
											"end": 1858,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1845,
											"end": 1854,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1841,
											"end": 1859,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1833,
											"end": 1859,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1833,
											"end": 1859,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1869,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 1937,
											"end": 1938,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1926,
											"end": 1935,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1922,
											"end": 1939,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1913,
											"end": 1919,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1869,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 1869,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1869,
											"end": 1940,
											"name": "tag",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 1869,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1725,
											"end": 1947,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1725,
											"end": 1947,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1725,
											"end": 1947,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1725,
											"end": 1947,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1725,
											"end": 1947,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1953,
											"end": 2075,
											"name": "tag",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 1953,
											"end": 2075,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2026,
											"end": 2050,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 2044,
											"end": 2049,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2026,
											"end": 2050,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 2026,
											"end": 2050,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2026,
											"end": 2050,
											"name": "tag",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 2026,
											"end": 2050,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2019,
											"end": 2024,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2016,
											"end": 2051,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2006,
											"end": 2069,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 2006,
											"end": 2069,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2065,
											"end": 2066,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2062,
											"end": 2063,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2055,
											"end": 2067,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2006,
											"end": 2069,
											"name": "tag",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 2006,
											"end": 2069,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1953,
											"end": 2075,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1953,
											"end": 2075,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2081,
											"end": 2220,
											"name": "tag",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 2081,
											"end": 2220,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2127,
											"end": 2132,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2165,
											"end": 2171,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2152,
											"end": 2172,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 2143,
											"end": 2172,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2143,
											"end": 2172,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2181,
											"end": 2214,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 2208,
											"end": 2213,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2181,
											"end": 2214,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 2181,
											"end": 2214,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2181,
											"end": 2214,
											"name": "tag",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 2181,
											"end": 2214,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2081,
											"end": 2220,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2081,
											"end": 2220,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2081,
											"end": 2220,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2081,
											"end": 2220,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2081,
											"end": 2220,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2226,
											"end": 2555,
											"name": "tag",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 2226,
											"end": 2555,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2285,
											"end": 2291,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2334,
											"end": 2336,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2322,
											"end": 2331,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2313,
											"end": 2320,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2309,
											"end": 2332,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2305,
											"end": 2337,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 2302,
											"end": 2421,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2302,
											"end": 2421,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 2302,
											"end": 2421,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2340,
											"end": 2419,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 2340,
											"end": 2419,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 2340,
											"end": 2419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2340,
											"end": 2419,
											"name": "tag",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 2340,
											"end": 2419,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2302,
											"end": 2421,
											"name": "tag",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 2302,
											"end": 2421,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2460,
											"end": 2461,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2485,
											"end": 2538,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 2530,
											"end": 2537,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2521,
											"end": 2527,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2510,
											"end": 2519,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2506,
											"end": 2528,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2485,
											"end": 2538,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 2485,
											"end": 2538,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2485,
											"end": 2538,
											"name": "tag",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 2485,
											"end": 2538,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2475,
											"end": 2538,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2475,
											"end": 2538,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2431,
											"end": 2548,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2226,
											"end": 2555,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2226,
											"end": 2555,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2226,
											"end": 2555,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2226,
											"end": 2555,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2226,
											"end": 2555,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2561,
											"end": 2687,
											"name": "tag",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 2561,
											"end": 2687,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2638,
											"end": 2680,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2631,
											"end": 2636,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2627,
											"end": 2681,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2616,
											"end": 2681,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2616,
											"end": 2681,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2561,
											"end": 2687,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2561,
											"end": 2687,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2561,
											"end": 2687,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2561,
											"end": 2687,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2693,
											"end": 2789,
											"name": "tag",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 2693,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2730,
											"end": 2737,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2759,
											"end": 2783,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 2777,
											"end": 2782,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2759,
											"end": 2783,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 2759,
											"end": 2783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2759,
											"end": 2783,
											"name": "tag",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 2759,
											"end": 2783,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2748,
											"end": 2783,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2748,
											"end": 2783,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2693,
											"end": 2789,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2693,
											"end": 2789,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2693,
											"end": 2789,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2693,
											"end": 2789,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2795,
											"end": 2917,
											"name": "tag",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 2795,
											"end": 2917,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2868,
											"end": 2892,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 2886,
											"end": 2891,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2868,
											"end": 2892,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 2868,
											"end": 2892,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2868,
											"end": 2892,
											"name": "tag",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 2868,
											"end": 2892,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2861,
											"end": 2866,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2858,
											"end": 2893,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2848,
											"end": 2911,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 2848,
											"end": 2911,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2907,
											"end": 2908,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2904,
											"end": 2905,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2897,
											"end": 2909,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2848,
											"end": 2911,
											"name": "tag",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 2848,
											"end": 2911,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2795,
											"end": 2917,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2795,
											"end": 2917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2923,
											"end": 3062,
											"name": "tag",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 2923,
											"end": 3062,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2969,
											"end": 2974,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3007,
											"end": 3013,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2994,
											"end": 3014,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 2985,
											"end": 3014,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2985,
											"end": 3014,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3023,
											"end": 3056,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 3050,
											"end": 3055,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3023,
											"end": 3056,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 3023,
											"end": 3056,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3023,
											"end": 3056,
											"name": "tag",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 3023,
											"end": 3056,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2923,
											"end": 3062,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2923,
											"end": 3062,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2923,
											"end": 3062,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2923,
											"end": 3062,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2923,
											"end": 3062,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3068,
											"end": 3542,
											"name": "tag",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 3068,
											"end": 3542,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3136,
											"end": 3142,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3144,
											"end": 3150,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3193,
											"end": 3195,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3181,
											"end": 3190,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3172,
											"end": 3179,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3168,
											"end": 3191,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3164,
											"end": 3196,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 3161,
											"end": 3280,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3161,
											"end": 3280,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 3161,
											"end": 3280,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3199,
											"end": 3278,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "221"
										},
										{
											"begin": 3199,
											"end": 3278,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 3199,
											"end": 3278,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3199,
											"end": 3278,
											"name": "tag",
											"source": 6,
											"value": "221"
										},
										{
											"begin": 3199,
											"end": 3278,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3161,
											"end": 3280,
											"name": "tag",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 3161,
											"end": 3280,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3319,
											"end": 3320,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3344,
											"end": 3397,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "222"
										},
										{
											"begin": 3389,
											"end": 3396,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3380,
											"end": 3386,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3369,
											"end": 3378,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3365,
											"end": 3387,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3344,
											"end": 3397,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 3344,
											"end": 3397,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3344,
											"end": 3397,
											"name": "tag",
											"source": 6,
											"value": "222"
										},
										{
											"begin": 3344,
											"end": 3397,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3334,
											"end": 3397,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3334,
											"end": 3397,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3290,
											"end": 3407,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3446,
											"end": 3448,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3472,
											"end": 3525,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 3517,
											"end": 3524,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3508,
											"end": 3514,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3497,
											"end": 3506,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3493,
											"end": 3515,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3472,
											"end": 3525,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 3472,
											"end": 3525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3472,
											"end": 3525,
											"name": "tag",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 3472,
											"end": 3525,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3525,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3525,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3417,
											"end": 3535,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3068,
											"end": 3542,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3068,
											"end": 3542,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3068,
											"end": 3542,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3068,
											"end": 3542,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3068,
											"end": 3542,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3068,
											"end": 3542,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3548,
											"end": 3625,
											"name": "tag",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 3548,
											"end": 3625,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3585,
											"end": 3592,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3614,
											"end": 3619,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3603,
											"end": 3619,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3603,
											"end": 3619,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3548,
											"end": 3625,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3548,
											"end": 3625,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3548,
											"end": 3625,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3548,
											"end": 3625,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3631,
											"end": 3753,
											"name": "tag",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 3631,
											"end": 3753,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3704,
											"end": 3728,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 3722,
											"end": 3727,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3704,
											"end": 3728,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 3704,
											"end": 3728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3704,
											"end": 3728,
											"name": "tag",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 3704,
											"end": 3728,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3697,
											"end": 3702,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3694,
											"end": 3729,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3684,
											"end": 3747,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 3684,
											"end": 3747,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3743,
											"end": 3744,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3740,
											"end": 3741,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3733,
											"end": 3745,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3684,
											"end": 3747,
											"name": "tag",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 3684,
											"end": 3747,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3631,
											"end": 3753,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3631,
											"end": 3753,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3759,
											"end": 3898,
											"name": "tag",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 3759,
											"end": 3898,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3805,
											"end": 3810,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3843,
											"end": 3849,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3830,
											"end": 3850,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 3821,
											"end": 3850,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3821,
											"end": 3850,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3859,
											"end": 3892,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 3886,
											"end": 3891,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3859,
											"end": 3892,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 3859,
											"end": 3892,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3859,
											"end": 3892,
											"name": "tag",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 3859,
											"end": 3892,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3759,
											"end": 3898,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3759,
											"end": 3898,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3759,
											"end": 3898,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3759,
											"end": 3898,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3759,
											"end": 3898,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3904,
											"end": 4233,
											"name": "tag",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 3904,
											"end": 4233,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3963,
											"end": 3969,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4012,
											"end": 4014,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4000,
											"end": 4009,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3991,
											"end": 3998,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3987,
											"end": 4010,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3983,
											"end": 4015,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 3980,
											"end": 4099,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3980,
											"end": 4099,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 3980,
											"end": 4099,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4018,
											"end": 4097,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "232"
										},
										{
											"begin": 4018,
											"end": 4097,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 4018,
											"end": 4097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4018,
											"end": 4097,
											"name": "tag",
											"source": 6,
											"value": "232"
										},
										{
											"begin": 4018,
											"end": 4097,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3980,
											"end": 4099,
											"name": "tag",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 3980,
											"end": 4099,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4138,
											"end": 4139,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4163,
											"end": 4216,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 4208,
											"end": 4215,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4199,
											"end": 4205,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4188,
											"end": 4197,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4184,
											"end": 4206,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4163,
											"end": 4216,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 4163,
											"end": 4216,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4163,
											"end": 4216,
											"name": "tag",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 4163,
											"end": 4216,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4153,
											"end": 4216,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4153,
											"end": 4216,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4109,
											"end": 4226,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3904,
											"end": 4233,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3904,
											"end": 4233,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3904,
											"end": 4233,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3904,
											"end": 4233,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3904,
											"end": 4233,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4239,
											"end": 4357,
											"name": "tag",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 4239,
											"end": 4357,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4326,
											"end": 4350,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "235"
										},
										{
											"begin": 4344,
											"end": 4349,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4326,
											"end": 4350,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 4326,
											"end": 4350,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4326,
											"end": 4350,
											"name": "tag",
											"source": 6,
											"value": "235"
										},
										{
											"begin": 4326,
											"end": 4350,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4321,
											"end": 4324,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4314,
											"end": 4351,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4239,
											"end": 4357,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4239,
											"end": 4357,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4239,
											"end": 4357,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4363,
											"end": 4585,
											"name": "tag",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 4363,
											"end": 4585,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4456,
											"end": 4460,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4494,
											"end": 4496,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4483,
											"end": 4492,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4479,
											"end": 4497,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4471,
											"end": 4497,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4471,
											"end": 4497,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4507,
											"end": 4578,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 4575,
											"end": 4576,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4564,
											"end": 4573,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4560,
											"end": 4577,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4551,
											"end": 4557,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4507,
											"end": 4578,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 4507,
											"end": 4578,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4507,
											"end": 4578,
											"name": "tag",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 4507,
											"end": 4578,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4363,
											"end": 4585,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4363,
											"end": 4585,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4363,
											"end": 4585,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4363,
											"end": 4585,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4363,
											"end": 4585,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4591,
											"end": 4771,
											"name": "tag",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 4591,
											"end": 4771,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4639,
											"end": 4716,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4636,
											"end": 4637,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4629,
											"end": 4717,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4736,
											"end": 4740,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 4733,
											"end": 4734,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4726,
											"end": 4741,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4760,
											"end": 4764,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 4757,
											"end": 4758,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4750,
											"end": 4765,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4777,
											"end": 4968,
											"name": "tag",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 4777,
											"end": 4968,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4817,
											"end": 4820,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4836,
											"end": 4856,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 4854,
											"end": 4855,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4836,
											"end": 4856,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 4836,
											"end": 4856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4836,
											"end": 4856,
											"name": "tag",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 4836,
											"end": 4856,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4831,
											"end": 4856,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4831,
											"end": 4856,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4870,
											"end": 4890,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 4888,
											"end": 4889,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4870,
											"end": 4890,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 4870,
											"end": 4890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4870,
											"end": 4890,
											"name": "tag",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 4870,
											"end": 4890,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4865,
											"end": 4890,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4865,
											"end": 4890,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4913,
											"end": 4914,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4910,
											"end": 4911,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4906,
											"end": 4915,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4899,
											"end": 4915,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4899,
											"end": 4915,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4934,
											"end": 4937,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4931,
											"end": 4932,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4928,
											"end": 4938,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 4925,
											"end": 4961,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4925,
											"end": 4961,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 4925,
											"end": 4961,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4941,
											"end": 4959,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "243"
										},
										{
											"begin": 4941,
											"end": 4959,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 4941,
											"end": 4959,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4941,
											"end": 4959,
											"name": "tag",
											"source": 6,
											"value": "243"
										},
										{
											"begin": 4941,
											"end": 4959,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4925,
											"end": 4961,
											"name": "tag",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 4925,
											"end": 4961,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4777,
											"end": 4968,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4777,
											"end": 4968,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4777,
											"end": 4968,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4777,
											"end": 4968,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4777,
											"end": 4968,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4974,
											"end": 5143,
											"name": "tag",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 4974,
											"end": 5143,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5058,
											"end": 5069,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5092,
											"end": 5098,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5087,
											"end": 5090,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5080,
											"end": 5099,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5132,
											"end": 5136,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5127,
											"end": 5130,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5123,
											"end": 5137,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5108,
											"end": 5137,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5108,
											"end": 5137,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4974,
											"end": 5143,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4974,
											"end": 5143,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4974,
											"end": 5143,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4974,
											"end": 5143,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4974,
											"end": 5143,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5149,
											"end": 5326,
											"name": "tag",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 5149,
											"end": 5326,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5289,
											"end": 5318,
											"name": "PUSH",
											"source": 6,
											"value": "4E6F7420656E6F75676820706879736963616C20726573657276650000000000"
										},
										{
											"begin": 5285,
											"end": 5286,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5277,
											"end": 5283,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5273,
											"end": 5287,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5266,
											"end": 5319,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5149,
											"end": 5326,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5149,
											"end": 5326,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5332,
											"end": 5698,
											"name": "tag",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 5332,
											"end": 5698,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5474,
											"end": 5477,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5495,
											"end": 5562,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "247"
										},
										{
											"begin": 5559,
											"end": 5561,
											"name": "PUSH",
											"source": 6,
											"value": "1B"
										},
										{
											"begin": 5554,
											"end": 5557,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5495,
											"end": 5562,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 5495,
											"end": 5562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5495,
											"end": 5562,
											"name": "tag",
											"source": 6,
											"value": "247"
										},
										{
											"begin": 5495,
											"end": 5562,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5488,
											"end": 5562,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5488,
											"end": 5562,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5571,
											"end": 5664,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 5660,
											"end": 5663,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5571,
											"end": 5664,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 5571,
											"end": 5664,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5571,
											"end": 5664,
											"name": "tag",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 5571,
											"end": 5664,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5689,
											"end": 5691,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5684,
											"end": 5687,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5680,
											"end": 5692,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5673,
											"end": 5692,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5673,
											"end": 5692,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5332,
											"end": 5698,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5332,
											"end": 5698,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5332,
											"end": 5698,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5332,
											"end": 5698,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5704,
											"end": 6123,
											"name": "tag",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 5704,
											"end": 6123,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5870,
											"end": 5874,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5908,
											"end": 5910,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5897,
											"end": 5906,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5893,
											"end": 5911,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5885,
											"end": 5911,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5885,
											"end": 5911,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5957,
											"end": 5966,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5951,
											"end": 5955,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5947,
											"end": 5967,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5943,
											"end": 5944,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5932,
											"end": 5941,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5928,
											"end": 5945,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5921,
											"end": 5968,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5985,
											"end": 6116,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "250"
										},
										{
											"begin": 6111,
											"end": 6115,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5985,
											"end": 6116,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 5985,
											"end": 6116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5985,
											"end": 6116,
											"name": "tag",
											"source": 6,
											"value": "250"
										},
										{
											"begin": 5985,
											"end": 6116,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5977,
											"end": 6116,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5977,
											"end": 6116,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5704,
											"end": 6123,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5704,
											"end": 6123,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5704,
											"end": 6123,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5704,
											"end": 6123,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6129,
											"end": 6310,
											"name": "tag",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 6129,
											"end": 6310,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6269,
											"end": 6302,
											"name": "PUSH",
											"source": 6,
											"value": "526573657276652063616E2774206265206C657373207468616E207573656400"
										},
										{
											"begin": 6265,
											"end": 6266,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6257,
											"end": 6263,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6253,
											"end": 6267,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6246,
											"end": 6303,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6129,
											"end": 6310,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6129,
											"end": 6310,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6316,
											"end": 6682,
											"name": "tag",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 6316,
											"end": 6682,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6458,
											"end": 6461,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6479,
											"end": 6546,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "253"
										},
										{
											"begin": 6543,
											"end": 6545,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 6538,
											"end": 6541,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6479,
											"end": 6546,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 6479,
											"end": 6546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6479,
											"end": 6546,
											"name": "tag",
											"source": 6,
											"value": "253"
										},
										{
											"begin": 6479,
											"end": 6546,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6472,
											"end": 6546,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6472,
											"end": 6546,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6555,
											"end": 6648,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "254"
										},
										{
											"begin": 6644,
											"end": 6647,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6555,
											"end": 6648,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 6555,
											"end": 6648,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6555,
											"end": 6648,
											"name": "tag",
											"source": 6,
											"value": "254"
										},
										{
											"begin": 6555,
											"end": 6648,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6673,
											"end": 6675,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6668,
											"end": 6671,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6664,
											"end": 6676,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6657,
											"end": 6676,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6657,
											"end": 6676,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6316,
											"end": 6682,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6316,
											"end": 6682,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6316,
											"end": 6682,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6316,
											"end": 6682,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6688,
											"end": 7107,
											"name": "tag",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 6688,
											"end": 7107,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6854,
											"end": 6858,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6892,
											"end": 6894,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6881,
											"end": 6890,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6877,
											"end": 6895,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6869,
											"end": 6895,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6869,
											"end": 6895,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6941,
											"end": 6950,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6935,
											"end": 6939,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6927,
											"end": 6928,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6916,
											"end": 6925,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6912,
											"end": 6929,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6905,
											"end": 6952,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6969,
											"end": 7100,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "256"
										},
										{
											"begin": 7095,
											"end": 7099,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6969,
											"end": 7100,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 6969,
											"end": 7100,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6969,
											"end": 7100,
											"name": "tag",
											"source": 6,
											"value": "256"
										},
										{
											"begin": 6969,
											"end": 7100,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6961,
											"end": 7100,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6961,
											"end": 7100,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6688,
											"end": 7107,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6688,
											"end": 7107,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6688,
											"end": 7107,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6688,
											"end": 7107,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7113,
											"end": 7291,
											"name": "tag",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 7113,
											"end": 7291,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7253,
											"end": 7283,
											"name": "PUSH",
											"source": 6,
											"value": "43616E6E6F7420726564756365206D6F7265207468616E207573656400000000"
										},
										{
											"begin": 7249,
											"end": 7250,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7241,
											"end": 7247,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7237,
											"end": 7251,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7230,
											"end": 7284,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7113,
											"end": 7291,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7113,
											"end": 7291,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7297,
											"end": 7663,
											"name": "tag",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 7297,
											"end": 7663,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7439,
											"end": 7442,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7460,
											"end": 7527,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "259"
										},
										{
											"begin": 7524,
											"end": 7526,
											"name": "PUSH",
											"source": 6,
											"value": "1C"
										},
										{
											"begin": 7519,
											"end": 7522,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7460,
											"end": 7527,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 7460,
											"end": 7527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7460,
											"end": 7527,
											"name": "tag",
											"source": 6,
											"value": "259"
										},
										{
											"begin": 7460,
											"end": 7527,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7453,
											"end": 7527,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7453,
											"end": 7527,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7536,
											"end": 7629,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "260"
										},
										{
											"begin": 7625,
											"end": 7628,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7536,
											"end": 7629,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 7536,
											"end": 7629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7536,
											"end": 7629,
											"name": "tag",
											"source": 6,
											"value": "260"
										},
										{
											"begin": 7536,
											"end": 7629,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7654,
											"end": 7656,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7649,
											"end": 7652,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7645,
											"end": 7657,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7638,
											"end": 7657,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7638,
											"end": 7657,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7297,
											"end": 7663,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7297,
											"end": 7663,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7297,
											"end": 7663,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7297,
											"end": 7663,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7669,
											"end": 8088,
											"name": "tag",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 7669,
											"end": 8088,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7835,
											"end": 7839,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7873,
											"end": 7875,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7862,
											"end": 7871,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7858,
											"end": 7876,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7850,
											"end": 7876,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7850,
											"end": 7876,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7922,
											"end": 7931,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7916,
											"end": 7920,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7912,
											"end": 7932,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7908,
											"end": 7909,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7897,
											"end": 7906,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7893,
											"end": 7910,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7886,
											"end": 7933,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7950,
											"end": 8081,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "262"
										},
										{
											"begin": 8076,
											"end": 8080,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7950,
											"end": 8081,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 7950,
											"end": 8081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7950,
											"end": 8081,
											"name": "tag",
											"source": 6,
											"value": "262"
										},
										{
											"begin": 7950,
											"end": 8081,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7942,
											"end": 8081,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7942,
											"end": 8081,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7669,
											"end": 8088,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7669,
											"end": 8088,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7669,
											"end": 8088,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7669,
											"end": 8088,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8094,
											"end": 8288,
											"name": "tag",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 8094,
											"end": 8288,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8134,
											"end": 8138,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8154,
											"end": 8174,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 8172,
											"end": 8173,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8154,
											"end": 8174,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 8154,
											"end": 8174,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8154,
											"end": 8174,
											"name": "tag",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 8154,
											"end": 8174,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8149,
											"end": 8174,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8149,
											"end": 8174,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8188,
											"end": 8208,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "265"
										},
										{
											"begin": 8206,
											"end": 8207,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8188,
											"end": 8208,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 8188,
											"end": 8208,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8188,
											"end": 8208,
											"name": "tag",
											"source": 6,
											"value": "265"
										},
										{
											"begin": 8188,
											"end": 8208,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8183,
											"end": 8208,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8183,
											"end": 8208,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8232,
											"end": 8233,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8229,
											"end": 8230,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8225,
											"end": 8234,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8217,
											"end": 8234,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8217,
											"end": 8234,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8256,
											"end": 8257,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8250,
											"end": 8254,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8247,
											"end": 8258,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 8244,
											"end": 8281,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8244,
											"end": 8281,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "266"
										},
										{
											"begin": 8244,
											"end": 8281,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8261,
											"end": 8279,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "267"
										},
										{
											"begin": 8261,
											"end": 8279,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 8261,
											"end": 8279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8261,
											"end": 8279,
											"name": "tag",
											"source": 6,
											"value": "267"
										},
										{
											"begin": 8261,
											"end": 8279,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8244,
											"end": 8281,
											"name": "tag",
											"source": 6,
											"value": "266"
										},
										{
											"begin": 8244,
											"end": 8281,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8094,
											"end": 8288,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8094,
											"end": 8288,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8094,
											"end": 8288,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8094,
											"end": 8288,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8094,
											"end": 8288,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8294,
											"end": 8412,
											"name": "tag",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 8294,
											"end": 8412,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8381,
											"end": 8405,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "269"
										},
										{
											"begin": 8399,
											"end": 8404,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8381,
											"end": 8405,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 8381,
											"end": 8405,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8381,
											"end": 8405,
											"name": "tag",
											"source": 6,
											"value": "269"
										},
										{
											"begin": 8381,
											"end": 8405,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8376,
											"end": 8379,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8369,
											"end": 8406,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8294,
											"end": 8412,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8294,
											"end": 8412,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8294,
											"end": 8412,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8418,
											"end": 8750,
											"name": "tag",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 8418,
											"end": 8750,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8539,
											"end": 8543,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8577,
											"end": 8579,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8566,
											"end": 8575,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8562,
											"end": 8580,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8554,
											"end": 8580,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8554,
											"end": 8580,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8590,
											"end": 8661,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "271"
										},
										{
											"begin": 8658,
											"end": 8659,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8647,
											"end": 8656,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8643,
											"end": 8660,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8634,
											"end": 8640,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 8590,
											"end": 8661,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 8590,
											"end": 8661,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8590,
											"end": 8661,
											"name": "tag",
											"source": 6,
											"value": "271"
										},
										{
											"begin": 8590,
											"end": 8661,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8671,
											"end": 8743,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "272"
										},
										{
											"begin": 8739,
											"end": 8741,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8728,
											"end": 8737,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8724,
											"end": 8742,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8715,
											"end": 8721,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8671,
											"end": 8743,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 8671,
											"end": 8743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8671,
											"end": 8743,
											"name": "tag",
											"source": 6,
											"value": "272"
										},
										{
											"begin": 8671,
											"end": 8743,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8418,
											"end": 8750,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 8418,
											"end": 8750,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8418,
											"end": 8750,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8418,
											"end": 8750,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8418,
											"end": 8750,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8418,
											"end": 8750,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"VaultManager.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"TOKEN_CONTRACT_ROLE()": "0fbbfb55",
							"VAULT_ADMIN_ROLE()": "9e341119",
							"addReserveUsed(uint256)": "3dd0104e",
							"availableGrams()": "ff9b1b11",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"reduceReserveUsed(uint256)": "ecad4f68",
							"renounceRole(bytes32,address)": "36568abe",
							"reserveUsed()": "c112a08f",
							"revokeRole(bytes32,address)": "d547741f",
							"setTotalReserve(uint256)": "4f547369",
							"supportsInterface(bytes4)": "01ffc9a7",
							"totalReserveGrams()": "64e7782a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newTotal\",\"type\":\"uint256\"}],\"name\":\"ReserveUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ReserveUsedAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ReserveUsedReduced\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TOKEN_CONTRACT_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"addReserveUsed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"availableGrams\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"reduceReserveUsed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reserveUsed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"grams\",\"type\":\"uint256\"}],\"name\":\"setTotalReserve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalReserveGrams\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"title\":\"VaultManager\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addReserveUsed(uint256)\":{\"notice\":\"Dipanggil oleh GoldToken saat mint \\u2192 menambah cadangan yang terpakai\"},\"availableGrams()\":{\"notice\":\"Lihat sisa cadangan emas fisik yang tersedia\"},\"reduceReserveUsed(uint256)\":{\"notice\":\"Dipanggil saat redeem \\u2192 mengurangi cadangan yang terpakai\"},\"setTotalReserve(uint256)\":{\"notice\":\"Update jumlah total emas fisik (hanya oleh Vault Admin)\"}},\"notice\":\"Manajemen cadangan emas fisik untuk GoldToken\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"VaultManager.sol\":\"VaultManager\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xc1bebdee8943bd5e9ef1e0f2e63296aa1dd4171a66b9e74d0286220e891e1458\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://928cf2f0042c606f3dcb21bd8a272573f462a215cd65285d2d6b407f31e9bd67\",\"dweb:/ipfs/QmWGxjckno6sfjHPX5naPnsfsyisgy4PJDf46eLw9umfpx\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x4d9a2b261b56a1e4a37bb038151dec98b952fed16de2bdfdda27e38e2b12b530\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f724110f7aeb6151af800ab8c12e6060b29bda9e013f0ccb331eb754d6a7cbf0\",\"dweb:/ipfs/QmUcjzCZpxtUPdEThtAzE1f9LvuJiUGZxTdH9N6bHrb5Cf\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"VaultManager.sol\":{\"keccak256\":\"0xcf731d047931607c5b278466f1b93f34d91ec3bef4e9986aa7b6ac66dacd5ffa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1e21897756d01f3a7ed634648bfa5e1cc48ce294dee2d496f197f5bd8cac0a74\",\"dweb:/ipfs/QmW85Re4jF1Qx483bFArNLZoQ45UvsbFvfcLdNqt7ESgbU\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 26,
								"contract": "VaultManager.sol:VaultManager",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)"
							},
							{
								"astId": 462,
								"contract": "VaultManager.sol:VaultManager",
								"label": "totalReserveGrams",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 464,
								"contract": "VaultManager.sol:VaultManager",
								"label": "reserveUsed",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)21_storage"
							},
							"t_struct(RoleData)21_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 18,
										"contract": "VaultManager.sol:VaultManager",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 20,
										"contract": "VaultManager.sol:VaultManager",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"addReserveUsed(uint256)": {
								"notice": "Dipanggil oleh GoldToken saat mint → menambah cadangan yang terpakai"
							},
							"availableGrams()": {
								"notice": "Lihat sisa cadangan emas fisik yang tersedia"
							},
							"reduceReserveUsed(uint256)": {
								"notice": "Dipanggil saat redeem → mengurangi cadangan yang terpakai"
							},
							"setTotalReserve(uint256)": {
								"notice": "Update jumlah total emas fisik (hanya oleh Vault Admin)"
							}
						},
						"notice": "Manajemen cadangan emas fisik untuk GoldToken",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
					"exportedSymbols": {
						"AccessControl": [
							295
						],
						"Context": [
							408
						],
						"ERC165": [
							432
						],
						"IAccessControl": [
							378
						]
					},
					"id": 296,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
							"file": "./IAccessControl.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 379,
							"src": "134:52:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "IAccessControl",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 378,
										"src": "142:14:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 409,
							"src": "187:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 408,
										"src": "195:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../utils/introspection/ERC165.sol",
							"id": 7,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 433,
							"src": "233:57:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 6,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 432,
										"src": "241:6:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 9,
										"name": "Context",
										"nameLocations": [
											"1988:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 408,
										"src": "1988:7:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "1988:7:0"
								},
								{
									"baseName": {
										"id": 11,
										"name": "IAccessControl",
										"nameLocations": [
											"1997:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 378,
										"src": "1997:14:0"
									},
									"id": 12,
									"nodeType": "InheritanceSpecifier",
									"src": "1997:14:0"
								},
								{
									"baseName": {
										"id": 13,
										"name": "ERC165",
										"nameLocations": [
											"2013:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 432,
										"src": "2013:6:0"
									},
									"id": 14,
									"nodeType": "InheritanceSpecifier",
									"src": "2013:6:0"
								}
							],
							"canonicalName": "AccessControl",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 8,
								"nodeType": "StructuredDocumentation",
								"src": "292:1660:0",
								"text": " @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."
							},
							"fullyImplemented": true,
							"id": 295,
							"linearizedBaseContracts": [
								295,
								432,
								444,
								378,
								408
							],
							"name": "AccessControl",
							"nameLocation": "1971:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "AccessControl.RoleData",
									"id": 21,
									"members": [
										{
											"constant": false,
											"id": 18,
											"mutability": "mutable",
											"name": "hasRole",
											"nameLocation": "2085:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 21,
											"src": "2052:40:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 17,
												"keyName": "account",
												"keyNameLocation": "2068:7:0",
												"keyType": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2060:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "2052:32:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 16,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2079:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 20,
											"mutability": "mutable",
											"name": "adminRole",
											"nameLocation": "2110:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 21,
											"src": "2102:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 19,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "2102:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RoleData",
									"nameLocation": "2033:8:0",
									"nodeType": "StructDefinition",
									"scope": 295,
									"src": "2026:100:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 26,
									"mutability": "mutable",
									"name": "_roles",
									"nameLocation": "2174:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 295,
									"src": "2132:48:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
										"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
									},
									"typeName": {
										"id": 25,
										"keyName": "role",
										"keyNameLocation": "2148:4:0",
										"keyType": {
											"id": 22,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "2140:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "2132:33:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
											"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 24,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 23,
												"name": "RoleData",
												"nameLocations": [
													"2156:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 21,
												"src": "2156:8:0"
											},
											"referencedDeclaration": 21,
											"src": "2156:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RoleData_$21_storage_ptr",
												"typeString": "struct AccessControl.RoleData"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "a217fddf",
									"id": 29,
									"mutability": "constant",
									"name": "DEFAULT_ADMIN_ROLE",
									"nameLocation": "2211:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 295,
									"src": "2187:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 27,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2187:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "30783030",
										"id": 28,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2232:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "2454:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 35,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 32,
															"src": "2475:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 34,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															93,
															114
														],
														"referencedDeclaration": 93,
														"src": "2464:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32) view"
														}
													},
													"id": 36,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2464:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 37,
												"nodeType": "ExpressionStatement",
												"src": "2464:16:0"
											},
											{
												"id": 38,
												"nodeType": "PlaceholderStatement",
												"src": "2490:1:0"
											}
										]
									},
									"documentation": {
										"id": 30,
										"nodeType": "StructuredDocumentation",
										"src": "2243:174:0",
										"text": " @dev Modifier that checks that an account has a specific role. Reverts\n with an {AccessControlUnauthorizedAccount} error including the required role."
									},
									"id": 40,
									"name": "onlyRole",
									"nameLocation": "2431:8:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2448:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "2440:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 31,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:14:0"
									},
									"src": "2422:76:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										431
									],
									"body": {
										"id": 61,
										"nodeType": "Block",
										"src": "2656:111:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 59,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 54,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 49,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 43,
															"src": "2673:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 51,
																		"name": "IAccessControl",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 378,
																		"src": "2693:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$378_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$378_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	],
																	"id": 50,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2688:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 52,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2688:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IAccessControl_$378",
																	"typeString": "type(contract IAccessControl)"
																}
															},
															"id": 53,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "2709:11:0",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "2688:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "2673:47:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 57,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 43,
																"src": "2748:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 55,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "2724:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_AccessControl_$295_$",
																	"typeString": "type(contract super AccessControl)"
																}
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2730:17:0",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 431,
															"src": "2724:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 58,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2724:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2673:87:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 48,
												"id": 60,
												"nodeType": "Return",
												"src": "2666:94:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "2504:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 62,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "2574:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 45,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2632:8:0"
									},
									"parameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "2599:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "2592:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 42,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2592:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2591:20:0"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "2650:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 46,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2650:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2649:6:0"
									},
									"scope": 295,
									"src": "2565:202:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										345
									],
									"body": {
										"id": 79,
										"nodeType": "Block",
										"src": "2937:53:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"baseExpression": {
																"id": 72,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "2954:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 74,
															"indexExpression": {
																"id": 73,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "2961:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2954:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$21_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 75,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2967:7:0",
														"memberName": "hasRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 18,
														"src": "2954:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 77,
													"indexExpression": {
														"id": 76,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 67,
														"src": "2975:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2954:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 71,
												"id": 78,
												"nodeType": "Return",
												"src": "2947:36:0"
											}
										]
									},
									"documentation": {
										"id": 63,
										"nodeType": "StructuredDocumentation",
										"src": "2773:76:0",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 80,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "2863:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2879:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2871:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 64,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2871:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2893:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2885:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2885:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2870:31:0"
									},
									"returnParameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2931:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 69,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2931:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2930:6:0"
									},
									"scope": 295,
									"src": "2854:136:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 92,
										"nodeType": "Block",
										"src": "3255:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 83,
															"src": "3276:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 88,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 390,
																"src": "3282:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 89,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3282:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															93,
															114
														],
														"referencedDeclaration": 114,
														"src": "3265:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address) view"
														}
													},
													"id": 90,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3265:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 91,
												"nodeType": "ExpressionStatement",
												"src": "3265:30:0"
											}
										]
									},
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "2996:198:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier."
									},
									"id": 93,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3208:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3227:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "3219:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 82,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3219:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3218:14:0"
									},
									"returnParameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3255:0:0"
									},
									"scope": 295,
									"src": "3199:103:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 113,
										"nodeType": "Block",
										"src": "3505:124:0",
										"statements": [
											{
												"condition": {
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3519:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 102,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 96,
																"src": "3528:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 103,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 98,
																"src": "3534:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 101,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 80,
															"src": "3520:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 104,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3520:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 112,
												"nodeType": "IfStatement",
												"src": "3515:108:0",
												"trueBody": {
													"id": 111,
													"nodeType": "Block",
													"src": "3544:79:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 107,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 98,
																		"src": "3598:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 108,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 96,
																		"src": "3607:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 106,
																	"name": "AccessControlUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 305,
																	"src": "3565:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_bytes32_$returns$_t_error_$",
																		"typeString": "function (address,bytes32) pure returns (error)"
																	}
																},
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3565:47:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 110,
															"nodeType": "RevertStatement",
															"src": "3558:54:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 94,
										"nodeType": "StructuredDocumentation",
										"src": "3308:119:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n is missing `role`."
									},
									"id": 114,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3441:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3460:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "3452:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 95,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3452:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 98,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3474:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "3466:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 97,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3466:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3451:31:0"
									},
									"returnParameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3505:0:0"
									},
									"scope": 295,
									"src": "3432:197:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										353
									],
									"body": {
										"id": 127,
										"nodeType": "Block",
										"src": "3884:46:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 122,
															"name": "_roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 26,
															"src": "3901:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
															}
														},
														"id": 124,
														"indexExpression": {
															"id": 123,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 117,
															"src": "3908:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3901:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoleData_$21_storage",
															"typeString": "struct AccessControl.RoleData storage ref"
														}
													},
													"id": 125,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3914:9:0",
													"memberName": "adminRole",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 20,
													"src": "3901:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 121,
												"id": 126,
												"nodeType": "Return",
												"src": "3894:29:0"
											}
										]
									},
									"documentation": {
										"id": 115,
										"nodeType": "StructuredDocumentation",
										"src": "3635:170:0",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 128,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "3819:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3840:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "3832:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 116,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3832:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3831:14:0"
									},
									"returnParameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "3875:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 119,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3875:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3874:9:0"
									},
									"scope": 295,
									"src": "3810:120:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										361
									],
									"body": {
										"id": 146,
										"nodeType": "Block",
										"src": "4320:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 142,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 131,
															"src": "4341:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 143,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "4347:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 141,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "4330:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4330:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 145,
												"nodeType": "ExpressionStatement",
												"src": "4330:25:0"
											}
										]
									},
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "3936:285:0",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."
									},
									"functionSelector": "2f2ff15d",
									"id": 147,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 137,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 131,
															"src": "4313:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 136,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "4300:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4300:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 139,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 135,
												"name": "onlyRole",
												"nameLocations": [
													"4291:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "4291:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4291:28:0"
										}
									],
									"name": "grantRole",
									"nameLocation": "4235:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4253:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "4245:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 130,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4245:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4267:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "4259:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4259:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4244:31:0"
									},
									"returnParameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4320:0:0"
									},
									"scope": 295,
									"src": "4226:136:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										369
									],
									"body": {
										"id": 165,
										"nodeType": "Block",
										"src": "4737:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 161,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 150,
															"src": "4759:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 162,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 152,
															"src": "4765:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 160,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "4747:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4747:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 164,
												"nodeType": "ExpressionStatement",
												"src": "4747:26:0"
											}
										]
									},
									"documentation": {
										"id": 148,
										"nodeType": "StructuredDocumentation",
										"src": "4368:269:0",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "d547741f",
									"id": 166,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 156,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 150,
															"src": "4730:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 155,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "4717:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4717:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 158,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 154,
												"name": "onlyRole",
												"nameLocations": [
													"4708:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "4708:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4708:28:0"
										}
									],
									"name": "revokeRole",
									"nameLocation": "4651:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4670:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4662:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 149,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4662:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4684:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4676:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 151,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4676:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4661:31:0"
									},
									"returnParameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4737:0:0"
									},
									"scope": 295,
									"src": "4642:138:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										377
									],
									"body": {
										"id": 188,
										"nodeType": "Block",
										"src": "5407:166:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 174,
														"name": "callerConfirmation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "5421:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 175,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "5443:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 176,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5443:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5421:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 182,
												"nodeType": "IfStatement",
												"src": "5417:102:0",
												"trueBody": {
													"id": 181,
													"nodeType": "Block",
													"src": "5457:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 178,
																	"name": "AccessControlBadConfirmation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 308,
																	"src": "5478:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 179,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5478:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 180,
															"nodeType": "RevertStatement",
															"src": "5471:37:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 184,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 169,
															"src": "5541:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 185,
															"name": "callerConfirmation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 171,
															"src": "5547:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 183,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "5529:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5529:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 187,
												"nodeType": "ExpressionStatement",
												"src": "5529:37:0"
											}
										]
									},
									"documentation": {
										"id": 167,
										"nodeType": "StructuredDocumentation",
										"src": "4786:537:0",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "36568abe",
									"id": 189,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "5337:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5358:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "5350:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 168,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5350:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "5372:18:0",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "5364:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5364:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5349:42:0"
									},
									"returnParameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5407:0:0"
									},
									"scope": 295,
									"src": "5328:245:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 216,
										"nodeType": "Block",
										"src": "5771:174:0",
										"statements": [
											{
												"assignments": [
													198
												],
												"declarations": [
													{
														"constant": false,
														"id": 198,
														"mutability": "mutable",
														"name": "previousAdminRole",
														"nameLocation": "5789:17:0",
														"nodeType": "VariableDeclaration",
														"scope": 216,
														"src": "5781:25:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 197,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "5781:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 202,
												"initialValue": {
													"arguments": [
														{
															"id": 200,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "5822:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 199,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "5809:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5809:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5781:46:0"
											},
											{
												"expression": {
													"id": 208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 203,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "5837:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 205,
															"indexExpression": {
																"id": 204,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 192,
																"src": "5844:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5837:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$21_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 206,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5850:9:0",
														"memberName": "adminRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 20,
														"src": "5837:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 207,
														"name": "adminRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 194,
														"src": "5862:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "5837:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 209,
												"nodeType": "ExpressionStatement",
												"src": "5837:34:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 211,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "5903:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 212,
															"name": "previousAdminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 198,
															"src": "5909:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 213,
															"name": "adminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 194,
															"src": "5928:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 210,
														"name": "RoleAdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "5886:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32,bytes32)"
														}
													},
													"id": 214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5886:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 215,
												"nodeType": "EmitStatement",
												"src": "5881:57:0"
											}
										]
									},
									"documentation": {
										"id": 190,
										"nodeType": "StructuredDocumentation",
										"src": "5579:114:0",
										"text": " @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."
									},
									"id": 217,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setRoleAdmin",
									"nameLocation": "5707:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5729:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "5721:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 191,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5721:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "adminRole",
												"nameLocation": "5743:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "5735:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 193,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5735:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5720:33:0"
									},
									"returnParameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5771:0:0"
									},
									"scope": 295,
									"src": "5698:247:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 255,
										"nodeType": "Block",
										"src": "6262:233:0",
										"statements": [
											{
												"condition": {
													"id": 231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "6276:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 228,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 220,
																"src": "6285:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 229,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 222,
																"src": "6291:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 227,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 80,
															"src": "6277:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 230,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6277:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 253,
													"nodeType": "Block",
													"src": "6452:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 251,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6473:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 226,
															"id": 252,
															"nodeType": "Return",
															"src": "6466:12:0"
														}
													]
												},
												"id": 254,
												"nodeType": "IfStatement",
												"src": "6272:217:0",
												"trueBody": {
													"id": 250,
													"nodeType": "Block",
													"src": "6301:145:0",
													"statements": [
														{
															"expression": {
																"id": 239,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 232,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 26,
																				"src": "6315:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 234,
																			"indexExpression": {
																				"id": 233,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 220,
																				"src": "6322:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6315:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$21_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 235,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6328:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 18,
																		"src": "6315:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 237,
																	"indexExpression": {
																		"id": 236,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 222,
																		"src": "6336:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6315:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 238,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6347:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "6315:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 240,
															"nodeType": "ExpressionStatement",
															"src": "6315:36:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 242,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 220,
																		"src": "6382:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 243,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 222,
																		"src": "6388:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 244,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 390,
																			"src": "6397:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 245,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6397:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 241,
																	"name": "RoleGranted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 326,
																	"src": "6370:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 246,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6370:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 247,
															"nodeType": "EmitStatement",
															"src": "6365:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 248,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6431:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 226,
															"id": 249,
															"nodeType": "Return",
															"src": "6424:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 218,
										"nodeType": "StructuredDocumentation",
										"src": "5951:223:0",
										"text": " @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n Internal function without access restriction.\n May emit a {RoleGranted} event."
									},
									"id": 256,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_grantRole",
									"nameLocation": "6188:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6207:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6199:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 219,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6199:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6221:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6213:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6213:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6198:31:0"
									},
									"returnParameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6256:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 224,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6256:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6255:6:0"
									},
									"scope": 295,
									"src": "6179:316:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 293,
										"nodeType": "Block",
										"src": "6816:233:0",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 267,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 259,
															"src": "6838:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 268,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 261,
															"src": "6844:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 266,
														"name": "hasRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 80,
														"src": "6830:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) view returns (bool)"
														}
													},
													"id": 269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6830:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 291,
													"nodeType": "Block",
													"src": "7006:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 289,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7027:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 265,
															"id": 290,
															"nodeType": "Return",
															"src": "7020:12:0"
														}
													]
												},
												"id": 292,
												"nodeType": "IfStatement",
												"src": "6826:217:0",
												"trueBody": {
													"id": 288,
													"nodeType": "Block",
													"src": "6854:146:0",
													"statements": [
														{
															"expression": {
																"id": 277,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 270,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 26,
																				"src": "6868:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 272,
																			"indexExpression": {
																				"id": 271,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 259,
																				"src": "6875:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6868:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$21_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 273,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6881:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 18,
																		"src": "6868:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 275,
																	"indexExpression": {
																		"id": 274,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 261,
																		"src": "6889:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6868:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 276,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6900:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "6868:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 278,
															"nodeType": "ExpressionStatement",
															"src": "6868:37:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 280,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 259,
																		"src": "6936:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 281,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 261,
																		"src": "6942:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 282,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 390,
																			"src": "6951:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 283,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6951:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 279,
																	"name": "RoleRevoked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 335,
																	"src": "6924:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 284,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6924:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 285,
															"nodeType": "EmitStatement",
															"src": "6919:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 286,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6985:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 265,
															"id": 287,
															"nodeType": "Return",
															"src": "6978:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 257,
										"nodeType": "StructuredDocumentation",
										"src": "6501:226:0",
										"text": " @dev Attempts to revoke `role` from `account` and returns a boolean indicating if `role` was revoked.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."
									},
									"id": 294,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revokeRole",
									"nameLocation": "6741:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6761:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6753:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 258,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6753:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6775:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6767:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6767:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6752:31:0"
									},
									"returnParameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6810:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 263,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6810:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6809:6:0"
									},
									"scope": 295,
									"src": "6732:317:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 296,
							"src": "1953:5098:0",
							"usedErrors": [
								305,
								308
							],
							"usedEvents": [
								317,
								326,
								335
							]
						}
					],
					"src": "108:6944:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
					"exportedSymbols": {
						"IAccessControl": [
							378
						]
					},
					"id": 379,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 297,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IAccessControl",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 298,
								"nodeType": "StructuredDocumentation",
								"src": "135:90:1",
								"text": " @dev External interface of AccessControl declared to support ERC-165 detection."
							},
							"fullyImplemented": false,
							"id": 378,
							"linearizedBaseContracts": [
								378
							],
							"name": "IAccessControl",
							"nameLocation": "236:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 299,
										"nodeType": "StructuredDocumentation",
										"src": "257:56:1",
										"text": " @dev The `account` is missing a role."
									},
									"errorSelector": "e2517d3f",
									"id": 305,
									"name": "AccessControlUnauthorizedAccount",
									"nameLocation": "324:32:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "365:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "357:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 300,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "357:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "neededRole",
												"nameLocation": "382:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "374:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 302,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "374:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "356:37:1"
									},
									"src": "318:76:1"
								},
								{
									"documentation": {
										"id": 306,
										"nodeType": "StructuredDocumentation",
										"src": "400:148:1",
										"text": " @dev The caller of a function is not the expected one.\n NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
									},
									"errorSelector": "6697b232",
									"id": 308,
									"name": "AccessControlBadConfirmation",
									"nameLocation": "559:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "587:2:1"
									},
									"src": "553:37:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 309,
										"nodeType": "StructuredDocumentation",
										"src": "596:254:1",
										"text": " @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted to signal this."
									},
									"eventSelector": "bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff",
									"id": 317,
									"name": "RoleAdminChanged",
									"nameLocation": "861:16:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "894:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "878:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 310,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "878:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 313,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousAdminRole",
												"nameLocation": "916:17:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "900:33:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 312,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "900:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 315,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAdminRole",
												"nameLocation": "951:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "935:28:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 314,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "877:87:1"
									},
									"src": "855:110:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 318,
										"nodeType": "StructuredDocumentation",
										"src": "971:295:1",
										"text": " @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
									},
									"eventSelector": "2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
									"id": 326,
									"name": "RoleGranted",
									"nameLocation": "1277:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 320,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1305:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1289:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 319,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1289:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 322,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1327:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1311:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 321,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1311:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1352:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1336:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 323,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1336:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1288:71:1"
									},
									"src": "1271:89:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 327,
										"nodeType": "StructuredDocumentation",
										"src": "1366:275:1",
										"text": " @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
									},
									"eventSelector": "f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b",
									"id": 335,
									"name": "RoleRevoked",
									"nameLocation": "1652:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 329,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1680:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1664:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 328,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1664:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 331,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1702:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1686:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 330,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1686:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 333,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1727:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1711:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 332,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1711:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1663:71:1"
									},
									"src": "1646:89:1"
								},
								{
									"documentation": {
										"id": 336,
										"nodeType": "StructuredDocumentation",
										"src": "1741:76:1",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 345,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "1831:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1847:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1839:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 337,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1839:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1861:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1853:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 339,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1853:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1838:31:1"
									},
									"returnParameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1893:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 342,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1893:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1892:6:1"
									},
									"scope": 378,
									"src": "1822:77:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "1905:184:1",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 353,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "2103:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2124:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "2116:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 347,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2116:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2115:14:1"
									},
									"returnParameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "2153:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 350,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2153:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2152:9:1"
									},
									"scope": 378,
									"src": "2094:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 354,
										"nodeType": "StructuredDocumentation",
										"src": "2168:239:1",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 361,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "grantRole",
									"nameLocation": "2421:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 356,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2439:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "2431:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 355,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2431:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2453:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "2445:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 357,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2445:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:31:1"
									},
									"returnParameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2470:0:1"
									},
									"scope": 378,
									"src": "2412:59:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 362,
										"nodeType": "StructuredDocumentation",
										"src": "2477:223:1",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 369,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeRole",
									"nameLocation": "2714:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2733:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "2725:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 363,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2747:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "2739:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 365,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2739:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2724:31:1"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2764:0:1"
									},
									"scope": 378,
									"src": "2705:60:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 370,
										"nodeType": "StructuredDocumentation",
										"src": "2771:491:1",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`."
									},
									"functionSelector": "36568abe",
									"id": 377,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "3276:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3297:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "3289:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 371,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3289:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "3311:18:1",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "3303:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 373,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3303:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3288:42:1"
									},
									"returnParameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3339:0:1"
									},
									"scope": 378,
									"src": "3267:73:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 379,
							"src": "226:3116:1",
							"usedErrors": [
								305,
								308
							],
							"usedEvents": [
								317,
								326,
								335
							]
						}
					],
					"src": "109:3234:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							408
						]
					},
					"id": 409,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 380,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 381,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:2",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 408,
							"linearizedBaseContracts": [
								408
							],
							"name": "Context",
							"nameLocation": "642:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 389,
										"nodeType": "Block",
										"src": "718:34:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 386,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 387,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:2",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 385,
												"id": 388,
												"nodeType": "Return",
												"src": "728:17:2"
											}
										]
									},
									"id": 390,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 382,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:2"
									},
									"returnParameters": {
										"id": 385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "709:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:2"
									},
									"scope": 408,
									"src": "656:96:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 398,
										"nodeType": "Block",
										"src": "825:32:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 395,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:2",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 394,
												"id": 397,
												"nodeType": "Return",
												"src": "835:15:2"
											}
										]
									},
									"id": 399,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:2"
									},
									"returnParameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "809:14:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 392,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:2"
									},
									"scope": 408,
									"src": "758:99:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 406,
										"nodeType": "Block",
										"src": "935:25:2",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 403,
												"id": 405,
												"nodeType": "Return",
												"src": "945:8:2"
											}
										]
									},
									"id": 407,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 400,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:2"
									},
									"returnParameters": {
										"id": 403,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 402,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 407,
												"src": "926:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 401,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:2"
									},
									"scope": 408,
									"src": "863:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 409,
							"src": "624:338:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							432
						],
						"IERC165": [
							444
						]
					},
					"id": 433,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 410,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 412,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 433,
							"sourceUnit": 445,
							"src": "140:38:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 411,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 444,
										"src": "148:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 414,
										"name": "IERC165",
										"nameLocations": [
											"688:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 444,
										"src": "688:7:3"
									},
									"id": 415,
									"nodeType": "InheritanceSpecifier",
									"src": "688:7:3"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 413,
								"nodeType": "StructuredDocumentation",
								"src": "180:479:3",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 432,
							"linearizedBaseContracts": [
								432,
								444
							],
							"name": "ERC165",
							"nameLocation": "678:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										443
									],
									"body": {
										"id": 430,
										"nodeType": "Block",
										"src": "845:64:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 428,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 423,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 418,
														"src": "862:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 425,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 444,
																	"src": "882:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$444_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$444_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 424,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "877:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 426,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "877:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$444",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 427,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "891:11:3",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "877:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "862:40:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 422,
												"id": 429,
												"nodeType": "Return",
												"src": "855:47:3"
											}
										]
									},
									"documentation": {
										"id": 416,
										"nodeType": "StructuredDocumentation",
										"src": "702:56:3",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 431,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "772:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 418,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "797:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "790:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 417,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "790:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "789:20:3"
									},
									"returnParameters": {
										"id": 422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "839:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 420,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "839:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "838:6:3"
									},
									"scope": 432,
									"src": "763:146:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 433,
							"src": "660:251:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "114:798:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							444
						]
					},
					"id": 445,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 434,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 435,
								"nodeType": "StructuredDocumentation",
								"src": "141:280:4",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 444,
							"linearizedBaseContracts": [
								444
							],
							"name": "IERC165",
							"nameLocation": "432:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 436,
										"nodeType": "StructuredDocumentation",
										"src": "446:340:4",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 443,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "800:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 438,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "825:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 443,
												"src": "818:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 437,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "818:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "817:20:4"
									},
									"returnParameters": {
										"id": 442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 441,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 443,
												"src": "861:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 440,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "861:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "860:6:4"
									},
									"scope": 444,
									"src": "791:76:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 445,
							"src": "422:447:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:755:4"
				},
				"id": 4
			},
			"VaultManager.sol": {
				"ast": {
					"absolutePath": "VaultManager.sol",
					"exportedSymbols": {
						"AccessControl": [
							295
						],
						"Context": [
							408
						],
						"ERC165": [
							432
						],
						"IAccessControl": [
							378
						],
						"VaultManager": [
							591
						]
					},
					"id": 592,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 446,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
							"file": "@openzeppelin/contracts/access/AccessControl.sol",
							"id": 447,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 592,
							"sourceUnit": 296,
							"src": "58:58:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 449,
										"name": "AccessControl",
										"nameLocations": [
											"231:13:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 295,
										"src": "231:13:5"
									},
									"id": 450,
									"nodeType": "InheritanceSpecifier",
									"src": "231:13:5"
								}
							],
							"canonicalName": "VaultManager",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 448,
								"nodeType": "StructuredDocumentation",
								"src": "118:87:5",
								"text": " @title VaultManager\n @notice Manajemen cadangan emas fisik untuk GoldToken"
							},
							"fullyImplemented": true,
							"id": 591,
							"linearizedBaseContracts": [
								591,
								295,
								432,
								444,
								378,
								408
							],
							"name": "VaultManager",
							"nameLocation": "215:12:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"functionSelector": "9e341119",
									"id": 455,
									"mutability": "constant",
									"name": "VAULT_ADMIN_ROLE",
									"nameLocation": "275:16:5",
									"nodeType": "VariableDeclaration",
									"scope": 591,
									"src": "251:72:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 451,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "251:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "5641554c545f41444d494e5f524f4c45",
												"id": 453,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "304:18:5",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_7edcee67725a77bfa311b39349d7e96df9b23fbdbdcb328dfc17d77926920c13",
													"typeString": "literal_string \"VAULT_ADMIN_ROLE\""
												},
												"value": "VAULT_ADMIN_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_7edcee67725a77bfa311b39349d7e96df9b23fbdbdcb328dfc17d77926920c13",
													"typeString": "literal_string \"VAULT_ADMIN_ROLE\""
												}
											],
											"id": 452,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "294:9:5",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 454,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "294:29:5",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "0fbbfb55",
									"id": 460,
									"mutability": "constant",
									"name": "TOKEN_CONTRACT_ROLE",
									"nameLocation": "353:19:5",
									"nodeType": "VariableDeclaration",
									"scope": 591,
									"src": "329:78:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 456,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "329:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "544f4b454e5f434f4e54524143545f524f4c45",
												"id": 458,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "385:21:5",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_d32fd1ee5f4f111da6f27444787e5200ec57a8849509c00ef2998467052b32a3",
													"typeString": "literal_string \"TOKEN_CONTRACT_ROLE\""
												},
												"value": "TOKEN_CONTRACT_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_d32fd1ee5f4f111da6f27444787e5200ec57a8849509c00ef2998467052b32a3",
													"typeString": "literal_string \"TOKEN_CONTRACT_ROLE\""
												}
											],
											"id": 457,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "375:9:5",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 459,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "375:32:5",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "64e7782a",
									"id": 462,
									"mutability": "mutable",
									"name": "totalReserveGrams",
									"nameLocation": "429:17:5",
									"nodeType": "VariableDeclaration",
									"scope": 591,
									"src": "414:32:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 461,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "414:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c112a08f",
									"id": 464,
									"mutability": "mutable",
									"name": "reserveUsed",
									"nameLocation": "502:11:5",
									"nodeType": "VariableDeclaration",
									"scope": 591,
									"src": "487:26:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 463,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "487:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "85e15aee91823036f338b40b55f10eea0356cfb9da506963651ac73e503f47db",
									"id": 468,
									"name": "ReserveUpdated",
									"nameLocation": "585:14:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 466,
												"indexed": false,
												"mutability": "mutable",
												"name": "newTotal",
												"nameLocation": "608:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "600:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 465,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "600:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "599:18:5"
									},
									"src": "579:39:5"
								},
								{
									"anonymous": false,
									"eventSelector": "a0a9af6ae1130972d7fbd89d32fd511aabd55c98d30aa1d4b23d823fd9927fe6",
									"id": 472,
									"name": "ReserveUsedAdded",
									"nameLocation": "629:16:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 470,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "654:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "646:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 469,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "646:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:16:5"
									},
									"src": "623:39:5"
								},
								{
									"anonymous": false,
									"eventSelector": "a480c0c45745eee4dee1efebcb3bc13dfad876477c3ebfcd594efdda76cd24c4",
									"id": 476,
									"name": "ReserveUsedReduced",
									"nameLocation": "673:18:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 475,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 474,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "700:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "692:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 473,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "692:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "691:16:5"
									},
									"src": "667:41:5"
								},
								{
									"body": {
										"id": 501,
										"nodeType": "Block",
										"src": "741:154:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 487,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 482,
																"name": "admin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 478,
																"src": "759:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 485,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "776:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 484,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "768:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 483,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "768:7:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 486,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "768:10:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "759:19:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642061646d696e",
															"id": 488,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "780:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_61dd2a6cf2ead59b09922a19257b57dec215ba2abf4fa7a561c379f2a10b24a5",
																"typeString": "literal_string \"Invalid admin\""
															},
															"value": "Invalid admin"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_61dd2a6cf2ead59b09922a19257b57dec215ba2abf4fa7a561c379f2a10b24a5",
																"typeString": "literal_string \"Invalid admin\""
															}
														],
														"id": 481,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "751:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 489,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "751:45:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 490,
												"nodeType": "ExpressionStatement",
												"src": "751:45:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 492,
															"name": "DEFAULT_ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "817:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 493,
															"name": "admin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 478,
															"src": "837:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 491,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "806:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 494,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "806:37:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 495,
												"nodeType": "ExpressionStatement",
												"src": "806:37:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 497,
															"name": "VAULT_ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "864:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 498,
															"name": "admin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 478,
															"src": "882:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 496,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "853:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 499,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "853:35:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 500,
												"nodeType": "ExpressionStatement",
												"src": "853:35:5"
											}
										]
									},
									"id": 502,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "admin",
												"nameLocation": "734:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 502,
												"src": "726:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 477,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "726:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "725:15:5"
									},
									"returnParameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "741:0:5"
									},
									"scope": 591,
									"src": "714:181:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 526,
										"nodeType": "Block",
										"src": "1064:152:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 514,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 512,
																"name": "grams",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 505,
																"src": "1082:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 513,
																"name": "reserveUsed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 464,
																"src": "1091:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1082:20:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "526573657276652063616e2774206265206c657373207468616e2075736564",
															"id": 515,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1104:33:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d9d6b5663c54077957b99c11e6b017d0ab71e81c5145a89235fd96dcb89ab3db",
																"typeString": "literal_string \"Reserve can't be less than used\""
															},
															"value": "Reserve can't be less than used"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d9d6b5663c54077957b99c11e6b017d0ab71e81c5145a89235fd96dcb89ab3db",
																"typeString": "literal_string \"Reserve can't be less than used\""
															}
														],
														"id": 511,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1074:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1074:64:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 517,
												"nodeType": "ExpressionStatement",
												"src": "1074:64:5"
											},
											{
												"expression": {
													"id": 520,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 518,
														"name": "totalReserveGrams",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 462,
														"src": "1148:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 519,
														"name": "grams",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 505,
														"src": "1168:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1148:25:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 521,
												"nodeType": "ExpressionStatement",
												"src": "1148:25:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 523,
															"name": "grams",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 505,
															"src": "1203:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 522,
														"name": "ReserveUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 468,
														"src": "1188:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 524,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1188:21:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 525,
												"nodeType": "EmitStatement",
												"src": "1183:26:5"
											}
										]
									},
									"documentation": {
										"id": 503,
										"nodeType": "StructuredDocumentation",
										"src": "901:82:5",
										"text": " @notice Update jumlah total emas fisik (hanya oleh Vault Admin)"
									},
									"functionSelector": "4f547369",
									"id": 527,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 508,
													"name": "VAULT_ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 455,
													"src": "1046:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 509,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 507,
												"name": "onlyRole",
												"nameLocations": [
													"1037:8:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "1037:8:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "1037:26:5"
										}
									],
									"name": "setTotalReserve",
									"nameLocation": "997:15:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 506,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 505,
												"mutability": "mutable",
												"name": "grams",
												"nameLocation": "1021:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 527,
												"src": "1013:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 504,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1013:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1012:15:5"
									},
									"returnParameters": {
										"id": 510,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1064:0:5"
									},
									"scope": 591,
									"src": "988:228:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 553,
										"nodeType": "Block",
										"src": "1403:168:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 541,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 539,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 537,
																	"name": "reserveUsed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 464,
																	"src": "1421:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 538,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 530,
																	"src": "1435:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1421:20:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 540,
																"name": "totalReserveGrams",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 462,
																"src": "1445:17:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1421:41:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420656e6f75676820706879736963616c2072657365727665",
															"id": 542,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1464:29:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7ca5de1ae439e47ccafba2180917e70dafc962b691748ba4e06b2eb078edc69d",
																"typeString": "literal_string \"Not enough physical reserve\""
															},
															"value": "Not enough physical reserve"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7ca5de1ae439e47ccafba2180917e70dafc962b691748ba4e06b2eb078edc69d",
																"typeString": "literal_string \"Not enough physical reserve\""
															}
														],
														"id": 536,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1413:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 543,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1413:81:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 544,
												"nodeType": "ExpressionStatement",
												"src": "1413:81:5"
											},
											{
												"expression": {
													"id": 547,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 545,
														"name": "reserveUsed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 464,
														"src": "1504:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 546,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 530,
														"src": "1519:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1504:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 548,
												"nodeType": "ExpressionStatement",
												"src": "1504:21:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 550,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 530,
															"src": "1557:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 549,
														"name": "ReserveUsedAdded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 472,
														"src": "1540:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 551,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1540:24:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 552,
												"nodeType": "EmitStatement",
												"src": "1535:29:5"
											}
										]
									},
									"documentation": {
										"id": 528,
										"nodeType": "StructuredDocumentation",
										"src": "1222:97:5",
										"text": " @notice Dipanggil oleh GoldToken saat mint → menambah cadangan yang terpakai"
									},
									"functionSelector": "3dd0104e",
									"id": 554,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 533,
													"name": "TOKEN_CONTRACT_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 460,
													"src": "1382:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 534,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 532,
												"name": "onlyRole",
												"nameLocations": [
													"1373:8:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "1373:8:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "1373:29:5"
										}
									],
									"name": "addReserveUsed",
									"nameLocation": "1333:14:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 531,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 530,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1356:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 554,
												"src": "1348:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 529,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1348:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1347:16:5"
									},
									"returnParameters": {
										"id": 535,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1403:0:5"
									},
									"scope": 591,
									"src": "1324:247:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 578,
										"nodeType": "Block",
										"src": "1750:151:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 566,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 564,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 557,
																"src": "1768:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 565,
																"name": "reserveUsed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 464,
																"src": "1778:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1768:21:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e6e6f7420726564756365206d6f7265207468616e2075736564",
															"id": 567,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1791:30:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1d88c19f1771ead97d1d8c1080a13fbfbebc79ee9232b2bae71b67f9d8b68315",
																"typeString": "literal_string \"Cannot reduce more than used\""
															},
															"value": "Cannot reduce more than used"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1d88c19f1771ead97d1d8c1080a13fbfbebc79ee9232b2bae71b67f9d8b68315",
																"typeString": "literal_string \"Cannot reduce more than used\""
															}
														],
														"id": 563,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1760:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 568,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1760:62:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 569,
												"nodeType": "ExpressionStatement",
												"src": "1760:62:5"
											},
											{
												"expression": {
													"id": 572,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 570,
														"name": "reserveUsed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 464,
														"src": "1832:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 571,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 557,
														"src": "1847:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1832:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 573,
												"nodeType": "ExpressionStatement",
												"src": "1832:21:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 575,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 557,
															"src": "1887:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 574,
														"name": "ReserveUsedReduced",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 476,
														"src": "1868:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 576,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1868:26:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 577,
												"nodeType": "EmitStatement",
												"src": "1863:31:5"
											}
										]
									},
									"documentation": {
										"id": 555,
										"nodeType": "StructuredDocumentation",
										"src": "1577:86:5",
										"text": " @notice Dipanggil saat redeem → mengurangi cadangan yang terpakai"
									},
									"functionSelector": "ecad4f68",
									"id": 579,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 560,
													"name": "TOKEN_CONTRACT_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 460,
													"src": "1729:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 561,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 559,
												"name": "onlyRole",
												"nameLocations": [
													"1720:8:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "1720:8:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "1720:29:5"
										}
									],
									"name": "reduceReserveUsed",
									"nameLocation": "1677:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 558,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 557,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1703:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 579,
												"src": "1695:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 556,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1695:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1694:16:5"
									},
									"returnParameters": {
										"id": 562,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1750:0:5"
									},
									"scope": 591,
									"src": "1668:233:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 589,
										"nodeType": "Block",
										"src": "2041:55:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 587,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 585,
														"name": "totalReserveGrams",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 462,
														"src": "2058:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 586,
														"name": "reserveUsed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 464,
														"src": "2078:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2058:31:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 584,
												"id": 588,
												"nodeType": "Return",
												"src": "2051:38:5"
											}
										]
									},
									"documentation": {
										"id": 580,
										"nodeType": "StructuredDocumentation",
										"src": "1907:71:5",
										"text": " @notice Lihat sisa cadangan emas fisik yang tersedia"
									},
									"functionSelector": "ff9b1b11",
									"id": 590,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "availableGrams",
									"nameLocation": "1992:14:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 581,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2006:2:5"
									},
									"returnParameters": {
										"id": 584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 583,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 590,
												"src": "2032:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 582,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2032:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2031:9:5"
									},
									"scope": 591,
									"src": "1983:113:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 592,
							"src": "206:1892:5",
							"usedErrors": [
								305,
								308
							],
							"usedEvents": [
								317,
								326,
								335,
								468,
								472,
								476
							]
						}
					],
					"src": "32:2067:5"
				},
				"id": 5
			}
		}
	}
}