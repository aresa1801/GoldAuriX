{
	"id": "b5832da6594d5995278d478e47ed1e8f",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.30",
	"solcLongVersion": "0.8.30+commit.73712a01",
	"input": {
		"language": "Solidity",
		"sources": {
			"GoldToken.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\";\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\n\n/**\n * @title VaultManager Interface\n * @dev Interface kontrak untuk mengecek dan mengatur cadangan emas fisik\n */\ninterface IVaultManager {\n    function availableGrams() external view returns (uint256);\n    function reserveUsed() external view returns (uint256);\n    function addReserveUsed(uint256 amount) external;\n    function reduceReserveUsed(uint256 amount) external;\n}\n\n/**\n * @title Aurix Gold Token (GOLD)\n * @notice ERC20 token yang 100% dijamin emas fisik\n * @dev Gunakan bersama VaultManager untuk kontrol cadangan\n */\ncontract GoldToken is ERC20Pausable, AccessControl {\n    // Role yang diatur\n    bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\");\n    bytes32 public constant PAUSER_ROLE = keccak256(\"PAUSER_ROLE\");\n\n    // Referensi ke kontrak VaultManager\n    IVaultManager public vault;\n\n    /**\n     * @dev Konstruktor, hanya dipanggil saat deploy\n     * @param vaultManagerAddress alamat kontrak VaultManager\n     * @param admin alamat admin utama\n     */\n    constructor(address vaultManagerAddress, address admin)\n        ERC20(\"Aurix Gold Token\", \"GOLD\")\n    {\n        require(vaultManagerAddress != address(0), \"Invalid vault address\");\n        require(admin != address(0), \"Invalid admin\");\n\n        vault = IVaultManager(vaultManagerAddress);\n\n        // Atur role akses\n        _grantRole(DEFAULT_ADMIN_ROLE, admin);\n        _grantRole(MINTER_ROLE, admin);\n        _grantRole(PAUSER_ROLE, admin);\n    }\n\n    /**\n     * @notice Mint token sesuai jumlah emas yang tersedia\n     * @dev Hanya SwapRouter atau role yang diizinkan yang bisa mint\n     */\n    function mint(address to, uint256 amount)\n        external\n        onlyRole(MINTER_ROLE)\n        whenNotPaused\n    {\n        require(to != address(0), \"Invalid recipient\");\n        require(amount > 0, \"Amount must be > 0\");\n        require(vault.availableGrams() >= amount, \"Not enough gold\");\n\n        vault.addReserveUsed(amount);\n        _mint(to, amount);\n    }\n\n    /**\n     * @notice Burn token dari user saat redeem emas\n     * @dev Digunakan oleh RedeemManager (yang diberi MINTER_ROLE)\n     */\n    function burnFromVault(address from, uint256 amount)\n        external\n        onlyRole(MINTER_ROLE)\n        whenNotPaused\n    {\n        require(from != address(0), \"Invalid address\");\n        require(balanceOf(from) >= amount, \"Insufficient balance\");\n\n        vault.reduceReserveUsed(amount);\n        _burn(from, amount);\n    }\n\n    /**\n     * @notice Pause seluruh aktivitas token (mint, burn, transfer)\n     */\n    function pause() external onlyRole(PAUSER_ROLE) {\n        _pause();\n    }\n\n    /**\n     * @notice Unpause aktivitas\n     */\n    function unpause() external onlyRole(PAUSER_ROLE) {\n        _unpause();\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControl} from \"./IAccessControl.sol\";\nimport {Context} from \"../utils/Context.sol\";\nimport {ERC165} from \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address account => bool) hasRole;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 role => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\n        return _roles[role].hasRole[account];\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n     * is missing `role`.\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert AccessControlUnauthorizedAccount(account, role);\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\n        if (callerConfirmation != _msgSender()) {\n            revert AccessControlBadConfirmation();\n        }\n\n        _revokeRole(role, callerConfirmation);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (!hasRole(role, account)) {\n            _roles[role].hasRole[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Attempts to revoke `role` from `account` and returns a boolean indicating if `role` was revoked.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (hasRole(role, account)) {\n            _roles[role].hasRole[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/ERC20Pausable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC20} from \"../ERC20.sol\";\nimport {Pausable} from \"../../../utils/Pausable.sol\";\n\n/**\n * @dev ERC-20 token with pausable token transfers, minting and burning.\n *\n * Useful for scenarios such as preventing trades until the end of an evaluation\n * period, or having an emergency switch for freezing all token transfers in the\n * event of a large bug.\n *\n * IMPORTANT: This contract does not include public pause and unpause functions. In\n * addition to inheriting this contract, you must define both functions, invoking the\n * {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate\n * access control, e.g. using {AccessControl} or {Ownable}. Not doing so will\n * make the contract pause mechanism of the contract unreachable, and thus unusable.\n */\nabstract contract ERC20Pausable is ERC20, Pausable {\n    /**\n     * @dev See {ERC20-_update}.\n     *\n     * Requirements:\n     *\n     * - the contract must not be paused.\n     */\n    function _update(address from, address to, uint256 value) internal virtual override whenNotPaused {\n        super._update(from, to, value);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Pausable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/Pausable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    bool private _paused;\n\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    /**\n     * @dev The operation failed because the contract is paused.\n     */\n    error EnforcedPause();\n\n    /**\n     * @dev The operation failed because the contract is not paused.\n     */\n    error ExpectedPause();\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        if (paused()) {\n            revert EnforcedPause();\n        }\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        if (!paused()) {\n            revert ExpectedPause();\n        }\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * Both values are immutable: they can only be set once during construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (access/IAccessControl.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev External interface of AccessControl declared to support ERC-165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev The `account` is missing a role.\n     */\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\n\n    /**\n     * @dev The caller of a function is not the expected one.\n     *\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\n     */\n    error AccessControlBadConfirmation();\n\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted to signal this.\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n     * Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) external;\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"AccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xc1bebdee8943bd5e9ef1e0f2e63296aa1dd4171a66b9e74d0286220e891e1458\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://928cf2f0042c606f3dcb21bd8a272573f462a215cd65285d2d6b407f31e9bd67\",\"dweb:/ipfs/QmWGxjckno6sfjHPX5naPnsfsyisgy4PJDf46eLw9umfpx\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x4d9a2b261b56a1e4a37bb038151dec98b952fed16de2bdfdda27e38e2b12b530\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f724110f7aeb6151af800ab8c12e6060b29bda9e013f0ccb331eb754d6a7cbf0\",\"dweb:/ipfs/QmUcjzCZpxtUPdEThtAzE1f9LvuJiUGZxTdH9N6bHrb5Cf\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 26,
								"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)21_storage"
							},
							"t_struct(RoleData)21_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 18,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 20,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"IAccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "External interface of AccessControl declared to support ERC-165 detection.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC-165 detection.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x4d9a2b261b56a1e4a37bb038151dec98b952fed16de2bdfdda27e38e2b12b530\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f724110f7aeb6151af800ab8c12e6060b29bda9e013f0ccb331eb754d6a7cbf0\",\"dweb:/ipfs/QmUcjzCZpxtUPdEThtAzE1f9LvuJiUGZxTdH9N6bHrb5Cf\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 538,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 544,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 546,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 548,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 550,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol": {
				"ERC20Pausable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "EnforcedPause",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ExpectedPause",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC-20 token with pausable token transfers, minting and burning. Useful for scenarios such as preventing trades until the end of an evaluation period, or having an emergency switch for freezing all token transfers in the event of a large bug. IMPORTANT: This contract does not include public pause and unpause functions. In addition to inheriting this contract, you must define both functions, invoking the {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate access control, e.g. using {AccessControl} or {Ownable}. Not doing so will make the contract pause mechanism of the contract unreachable, and thus unusable.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"EnforcedPause()": [
								{
									"details": "The operation failed because the contract is paused."
								}
							],
							"ExpectedPause()": [
								{
									"details": "The operation failed because the contract is not paused."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"paused()": "5c975abb",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC-20 token with pausable token transfers, minting and burning. Useful for scenarios such as preventing trades until the end of an evaluation period, or having an emergency switch for freezing all token transfers in the event of a large bug. IMPORTANT: This contract does not include public pause and unpause functions. In addition to inheriting this contract, you must define both functions, invoking the {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate access control, e.g. using {AccessControl} or {Ownable}. Not doing so will make the contract pause mechanism of the contract unreachable, and thus unusable.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":\"ERC20Pausable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":{\"keccak256\":\"0x756aee61d83960d324973de3a64920a02b480efe662b611fb05ea506d844aa55\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4dfb71ab2f5fcc530226a25bba4d808f4d22a7f383cae4a3be3629ec057b276c\",\"dweb:/ipfs/QmRzyetUjbr9Gx1pcXYSsE5rz4XypfEbZgmBvZKUNUJQLR\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xdb484371dfbb848cb6f5d70464e9ac9b2900e4164ead76bbce4fef0b44bcc68f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9d6f6f6600a2bec622f699081b58350873b5e63ce05464d17d674a290bb8a7c\",\"dweb:/ipfs/QmQKVzSQY1PM3Bid4QhgVVZyx6B4Jx7XgaQzLKHj38vJz8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 538,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 544,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 546,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 548,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 550,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 1207,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable",
								"label": "_paused",
								"offset": 0,
								"slot": "5",
								"type": "t_bool"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Pausable.sol": {
				"Pausable": {
					"abi": [
						{
							"inputs": [],
							"name": "EnforcedPause",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ExpectedPause",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",
						"errors": {
							"EnforcedPause()": [
								{
									"details": "The operation failed because the contract is paused."
								}
							],
							"ExpectedPause()": [
								{
									"details": "The operation failed because the contract is not paused."
								}
							]
						},
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"errors\":{\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}]},\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xdb484371dfbb848cb6f5d70464e9ac9b2900e4164ead76bbce4fef0b44bcc68f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9d6f6f6600a2bec622f699081b58350873b5e63ce05464d17d674a290bb8a7c\",\"dweb:/ipfs/QmQKVzSQY1PM3Bid4QhgVVZyx6B4Jx7XgaQzLKHj38vJz8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1207,
								"contract": "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"GoldToken.sol": {
				"GoldToken": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "vaultManagerAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "admin",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "EnforcedPause",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ExpectedPause",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MINTER_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "PAUSER_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burnFromVault",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unpause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "vault",
							"outputs": [
								{
									"internalType": "contract IVaultManager",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Gunakan bersama VaultManager untuk kontrol cadangan",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							],
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"EnforcedPause()": [
								{
									"details": "The operation failed because the contract is paused."
								}
							],
							"ExpectedPause()": [
								{
									"details": "The operation failed because the contract is not paused."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"burnFromVault(address,uint256)": {
								"details": "Digunakan oleh RedeemManager (yang diberi MINTER_ROLE)"
							},
							"constructor": {
								"details": "Konstruktor, hanya dipanggil saat deploy",
								"params": {
									"admin": "alamat admin utama",
									"vaultManagerAddress": "alamat kontrak VaultManager"
								}
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"mint(address,uint256)": {
								"details": "Hanya SwapRouter atau role yang diizinkan yang bisa mint"
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"title": "Aurix Gold Token (GOLD)",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"GoldToken.sol\":725:2918  contract GoldToken is ERC20Pausable, AccessControl {... */\n  mstore(0x40, 0x80)\n    /* \"GoldToken.sol\":1187:1636  constructor(address vaultManagerAddress, address admin)... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1582:1695  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x10\n  dup2\n  mstore\n  0x20\n  add\n  0x417572697820476f6c6420546f6b656e00000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x04\n  dup2\n  mstore\n  0x20\n  add\n  0x474f4c4400000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1656:1661  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1648:1653  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1648:1661  _name = name_ */\n  swap1\n  dup2\n  tag_7\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_7:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1681:1688  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1678  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1688  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_9\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_9:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1582:1695  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"GoldToken.sol\":1338:1339  0 */\n  0x00\n    /* \"GoldToken.sol\":1307:1340  vaultManagerAddress != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"GoldToken.sol\":1307:1326  vaultManagerAddress */\n  dup3\n    /* \"GoldToken.sol\":1307:1340  vaultManagerAddress != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"GoldToken.sol\":1299:1366  require(vaultManagerAddress != address(0), \"Invalid vault address\") */\n  tag_11\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_12\n  swap1\n  tag_13\n  jump\t// in\ntag_12:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_11:\n    /* \"GoldToken.sol\":1401:1402  0 */\n  0x00\n    /* \"GoldToken.sol\":1384:1403  admin != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"GoldToken.sol\":1384:1389  admin */\n  dup2\n    /* \"GoldToken.sol\":1384:1403  admin != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"GoldToken.sol\":1376:1421  require(admin != address(0), \"Invalid admin\") */\n  tag_14\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_15\n  swap1\n  tag_16\n  jump\t// in\ntag_15:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_14:\n    /* \"GoldToken.sol\":1454:1473  vaultManagerAddress */\n  dup2\n    /* \"GoldToken.sol\":1432:1437  vault */\n  0x07\n  0x00\n    /* \"GoldToken.sol\":1432:1474  vault = IVaultManager(vaultManagerAddress) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"GoldToken.sol\":1512:1549  _grantRole(DEFAULT_ADMIN_ROLE, admin) */\n  tag_17\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2232:2236  0x00 */\n  0x00\n    /* \"GoldToken.sol\":1523:1541  DEFAULT_ADMIN_ROLE */\n  0x00\n  shl\n    /* \"GoldToken.sol\":1543:1548  admin */\n  dup3\n    /* \"GoldToken.sol\":1512:1522  _grantRole */\n  shl(0x20, tag_18)\n    /* \"GoldToken.sol\":1512:1549  _grantRole(DEFAULT_ADMIN_ROLE, admin) */\n  0x20\n  shr\n  jump\t// in\ntag_17:\n  pop\n    /* \"GoldToken.sol\":1559:1589  _grantRole(MINTER_ROLE, admin) */\n  tag_19\n    /* \"GoldToken.sol\":844:868  keccak256(\"MINTER_ROLE\") */\n  0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6\n    /* \"GoldToken.sol\":1583:1588  admin */\n  dup3\n    /* \"GoldToken.sol\":1559:1569  _grantRole */\n  shl(0x20, tag_18)\n    /* \"GoldToken.sol\":1559:1589  _grantRole(MINTER_ROLE, admin) */\n  0x20\n  shr\n  jump\t// in\ntag_19:\n  pop\n    /* \"GoldToken.sol\":1599:1629  _grantRole(PAUSER_ROLE, admin) */\n  tag_20\n    /* \"GoldToken.sol\":912:936  keccak256(\"PAUSER_ROLE\") */\n  0x65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a\n    /* \"GoldToken.sol\":1623:1628  admin */\n  dup3\n    /* \"GoldToken.sol\":1599:1609  _grantRole */\n  shl(0x20, tag_18)\n    /* \"GoldToken.sol\":1599:1629  _grantRole(PAUSER_ROLE, admin) */\n  0x20\n  shr\n  jump\t// in\ntag_20:\n  pop\n    /* \"GoldToken.sol\":1187:1636  constructor(address vaultManagerAddress, address admin)... */\n  pop\n  pop\n    /* \"GoldToken.sol\":725:2918  contract GoldToken is ERC20Pausable, AccessControl {... */\n  jump(tag_21)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\ntag_18:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6256:6260  bool */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n  tag_23\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6285:6289  role */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6298  account */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6284  hasRole */\n  shl(0x20, tag_24)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n  0x20\n  shr\n  jump\t// in\ntag_23:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\n  tag_25\n  jumpi\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6347:6351  true */\n  0x01\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6321  _roles */\n  0x06\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6322:6326  role */\n  dup6\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6335  _roles[role].hasRole */\n  0x00\n  add\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6336:6343  account */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6351  _roles[role].hasRole[account] = true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n  tag_26\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6407  _msgSender */\n  shl(0x20, tag_27)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_26:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6388:6395  account */\n  dup3\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6382:6386  role */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6431:6435  true */\n  0x01\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6424:6435  return true */\n  swap1\n  pop\n  jump(tag_22)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\ntag_25:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6473:6478  false */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6466:6478  return false */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\ntag_22:\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\ntag_24:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2931:2935  bool */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2960  _roles */\n  0x06\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2961:2965  role */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2974  _roles[role].hasRole */\n  0x00\n  add\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2975:2982  account */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2947:2983  return _roles[role].hasRole[account] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\ntag_27:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_32:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  0x00\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_34:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_35:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_69\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_34\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_36:\n    /* \"#utility.yul\":641:665   */\n  tag_71\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_35\n  jump\t// in\ntag_71:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_72\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  0x00\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_72:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_37:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_74\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_36\n  jump\t// in\ntag_74:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1352   */\ntag_3:\n    /* \"#utility.yul\":924:930   */\n  0x00\n    /* \"#utility.yul\":932:938   */\n  0x00\n    /* \"#utility.yul\":981:983   */\n  0x40\n    /* \"#utility.yul\":969:978   */\n  dup4\n    /* \"#utility.yul\":960:967   */\n  dup6\n    /* \"#utility.yul\":956:979   */\n  sub\n    /* \"#utility.yul\":952:984   */\n  slt\n    /* \"#utility.yul\":949:1068   */\n  iszero\n  tag_76\n  jumpi\n    /* \"#utility.yul\":987:1066   */\n  tag_77\n  tag_32\n  jump\t// in\ntag_77:\n    /* \"#utility.yul\":949:1068   */\ntag_76:\n    /* \"#utility.yul\":1107:1108   */\n  0x00\n    /* \"#utility.yul\":1132:1196   */\n  tag_78\n    /* \"#utility.yul\":1188:1195   */\n  dup6\n    /* \"#utility.yul\":1179:1185   */\n  dup3\n    /* \"#utility.yul\":1168:1177   */\n  dup7\n    /* \"#utility.yul\":1164:1186   */\n  add\n    /* \"#utility.yul\":1132:1196   */\n  tag_37\n  jump\t// in\ntag_78:\n    /* \"#utility.yul\":1122:1196   */\n  swap3\n  pop\n    /* \"#utility.yul\":1078:1206   */\n  pop\n    /* \"#utility.yul\":1245:1247   */\n  0x20\n    /* \"#utility.yul\":1271:1335   */\n  tag_79\n    /* \"#utility.yul\":1327:1334   */\n  dup6\n    /* \"#utility.yul\":1318:1324   */\n  dup3\n    /* \"#utility.yul\":1307:1316   */\n  dup7\n    /* \"#utility.yul\":1303:1325   */\n  add\n    /* \"#utility.yul\":1271:1335   */\n  tag_37\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":1261:1335   */\n  swap2\n  pop\n    /* \"#utility.yul\":1216:1345   */\n  pop\n    /* \"#utility.yul\":845:1352   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1358:1457   */\ntag_38:\n    /* \"#utility.yul\":1410:1416   */\n  0x00\n    /* \"#utility.yul\":1444:1449   */\n  dup2\n    /* \"#utility.yul\":1438:1450   */\n  mload\n    /* \"#utility.yul\":1428:1450   */\n  swap1\n  pop\n    /* \"#utility.yul\":1358:1457   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1463:1643   */\ntag_39:\n    /* \"#utility.yul\":1511:1588   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1508:1509   */\n  0x00\n    /* \"#utility.yul\":1501:1589   */\n  mstore\n    /* \"#utility.yul\":1608:1612   */\n  0x41\n    /* \"#utility.yul\":1605:1606   */\n  0x04\n    /* \"#utility.yul\":1598:1613   */\n  mstore\n    /* \"#utility.yul\":1632:1636   */\n  0x24\n    /* \"#utility.yul\":1629:1630   */\n  0x00\n    /* \"#utility.yul\":1622:1637   */\n  revert\n    /* \"#utility.yul\":1649:1829   */\ntag_40:\n    /* \"#utility.yul\":1697:1774   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1694:1695   */\n  0x00\n    /* \"#utility.yul\":1687:1775   */\n  mstore\n    /* \"#utility.yul\":1794:1798   */\n  0x22\n    /* \"#utility.yul\":1791:1792   */\n  0x04\n    /* \"#utility.yul\":1784:1799   */\n  mstore\n    /* \"#utility.yul\":1818:1822   */\n  0x24\n    /* \"#utility.yul\":1815:1816   */\n  0x00\n    /* \"#utility.yul\":1808:1823   */\n  revert\n    /* \"#utility.yul\":1835:2155   */\ntag_41:\n    /* \"#utility.yul\":1879:1885   */\n  0x00\n    /* \"#utility.yul\":1916:1917   */\n  0x02\n    /* \"#utility.yul\":1910:1914   */\n  dup3\n    /* \"#utility.yul\":1906:1918   */\n  div\n    /* \"#utility.yul\":1896:1918   */\n  swap1\n  pop\n    /* \"#utility.yul\":1963:1964   */\n  0x01\n    /* \"#utility.yul\":1957:1961   */\n  dup3\n    /* \"#utility.yul\":1953:1965   */\n  and\n    /* \"#utility.yul\":1984:2002   */\n  dup1\n    /* \"#utility.yul\":1974:2055   */\n  tag_84\n  jumpi\n    /* \"#utility.yul\":2040:2044   */\n  0x7f\n    /* \"#utility.yul\":2032:2038   */\n  dup3\n    /* \"#utility.yul\":2028:2045   */\n  and\n    /* \"#utility.yul\":2018:2045   */\n  swap2\n  pop\n    /* \"#utility.yul\":1974:2055   */\ntag_84:\n    /* \"#utility.yul\":2102:2104   */\n  0x20\n    /* \"#utility.yul\":2094:2100   */\n  dup3\n    /* \"#utility.yul\":2091:2105   */\n  lt\n    /* \"#utility.yul\":2071:2089   */\n  dup2\n    /* \"#utility.yul\":2068:2106   */\n  sub\n    /* \"#utility.yul\":2065:2149   */\n  tag_85\n  jumpi\n    /* \"#utility.yul\":2121:2139   */\n  tag_86\n  tag_40\n  jump\t// in\ntag_86:\n    /* \"#utility.yul\":2065:2149   */\ntag_85:\n    /* \"#utility.yul\":1886:2155   */\n  pop\n    /* \"#utility.yul\":1835:2155   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2161:2302   */\ntag_42:\n    /* \"#utility.yul\":2210:2214   */\n  0x00\n    /* \"#utility.yul\":2233:2236   */\n  dup2\n    /* \"#utility.yul\":2225:2236   */\n  swap1\n  pop\n    /* \"#utility.yul\":2256:2259   */\n  dup2\n    /* \"#utility.yul\":2253:2254   */\n  0x00\n    /* \"#utility.yul\":2246:2260   */\n  mstore\n    /* \"#utility.yul\":2290:2294   */\n  0x20\n    /* \"#utility.yul\":2287:2288   */\n  0x00\n    /* \"#utility.yul\":2277:2295   */\n  keccak256\n    /* \"#utility.yul\":2269:2295   */\n  swap1\n  pop\n    /* \"#utility.yul\":2161:2302   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2308:2401   */\ntag_43:\n    /* \"#utility.yul\":2345:2351   */\n  0x00\n    /* \"#utility.yul\":2392:2394   */\n  0x20\n    /* \"#utility.yul\":2387:2389   */\n  0x1f\n    /* \"#utility.yul\":2380:2385   */\n  dup4\n    /* \"#utility.yul\":2376:2390   */\n  add\n    /* \"#utility.yul\":2372:2395   */\n  div\n    /* \"#utility.yul\":2362:2395   */\n  swap1\n  pop\n    /* \"#utility.yul\":2308:2401   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2407:2514   */\ntag_44:\n    /* \"#utility.yul\":2451:2459   */\n  0x00\n    /* \"#utility.yul\":2501:2506   */\n  dup3\n    /* \"#utility.yul\":2495:2499   */\n  dup3\n    /* \"#utility.yul\":2491:2507   */\n  shl\n    /* \"#utility.yul\":2470:2507   */\n  swap1\n  pop\n    /* \"#utility.yul\":2407:2514   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2520:2913   */\ntag_45:\n    /* \"#utility.yul\":2589:2595   */\n  0x00\n    /* \"#utility.yul\":2639:2640   */\n  0x08\n    /* \"#utility.yul\":2627:2637   */\n  dup4\n    /* \"#utility.yul\":2623:2641   */\n  mul\n    /* \"#utility.yul\":2662:2759   */\n  tag_91\n    /* \"#utility.yul\":2692:2758   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":2681:2690   */\n  dup3\n    /* \"#utility.yul\":2662:2759   */\n  tag_44\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":2780:2819   */\n  tag_92\n    /* \"#utility.yul\":2810:2818   */\n  dup7\n    /* \"#utility.yul\":2799:2808   */\n  dup4\n    /* \"#utility.yul\":2780:2819   */\n  tag_44\n  jump\t// in\ntag_92:\n    /* \"#utility.yul\":2768:2819   */\n  swap6\n  pop\n    /* \"#utility.yul\":2852:2856   */\n  dup1\n    /* \"#utility.yul\":2848:2857   */\n  not\n    /* \"#utility.yul\":2841:2846   */\n  dup5\n    /* \"#utility.yul\":2837:2858   */\n  and\n    /* \"#utility.yul\":2828:2858   */\n  swap4\n  pop\n    /* \"#utility.yul\":2901:2905   */\n  dup1\n    /* \"#utility.yul\":2891:2899   */\n  dup7\n    /* \"#utility.yul\":2887:2906   */\n  and\n    /* \"#utility.yul\":2880:2885   */\n  dup5\n    /* \"#utility.yul\":2877:2907   */\n  or\n    /* \"#utility.yul\":2867:2907   */\n  swap3\n  pop\n    /* \"#utility.yul\":2596:2913   */\n  pop\n  pop\n    /* \"#utility.yul\":2520:2913   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2919:2996   */\ntag_46:\n    /* \"#utility.yul\":2956:2963   */\n  0x00\n    /* \"#utility.yul\":2985:2990   */\n  dup2\n    /* \"#utility.yul\":2974:2990   */\n  swap1\n  pop\n    /* \"#utility.yul\":2919:2996   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3002:3062   */\ntag_47:\n    /* \"#utility.yul\":3030:3033   */\n  0x00\n    /* \"#utility.yul\":3051:3056   */\n  dup2\n    /* \"#utility.yul\":3044:3056   */\n  swap1\n  pop\n    /* \"#utility.yul\":3002:3062   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3068:3210   */\ntag_48:\n    /* \"#utility.yul\":3118:3127   */\n  0x00\n    /* \"#utility.yul\":3151:3204   */\n  tag_96\n    /* \"#utility.yul\":3169:3203   */\n  tag_97\n    /* \"#utility.yul\":3178:3202   */\n  tag_98\n    /* \"#utility.yul\":3196:3201   */\n  dup5\n    /* \"#utility.yul\":3178:3202   */\n  tag_46\n  jump\t// in\ntag_98:\n    /* \"#utility.yul\":3169:3203   */\n  tag_47\n  jump\t// in\ntag_97:\n    /* \"#utility.yul\":3151:3204   */\n  tag_46\n  jump\t// in\ntag_96:\n    /* \"#utility.yul\":3138:3204   */\n  swap1\n  pop\n    /* \"#utility.yul\":3068:3210   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3216:3291   */\ntag_49:\n    /* \"#utility.yul\":3259:3262   */\n  0x00\n    /* \"#utility.yul\":3280:3285   */\n  dup2\n    /* \"#utility.yul\":3273:3285   */\n  swap1\n  pop\n    /* \"#utility.yul\":3216:3291   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3297:3566   */\ntag_50:\n    /* \"#utility.yul\":3407:3446   */\n  tag_101\n    /* \"#utility.yul\":3438:3445   */\n  dup4\n    /* \"#utility.yul\":3407:3446   */\n  tag_48\n  jump\t// in\ntag_101:\n    /* \"#utility.yul\":3468:3559   */\n  tag_102\n    /* \"#utility.yul\":3517:3558   */\n  tag_103\n    /* \"#utility.yul\":3541:3557   */\n  dup3\n    /* \"#utility.yul\":3517:3558   */\n  tag_49\n  jump\t// in\ntag_103:\n    /* \"#utility.yul\":3509:3515   */\n  dup5\n    /* \"#utility.yul\":3502:3506   */\n  dup5\n    /* \"#utility.yul\":3496:3507   */\n  sload\n    /* \"#utility.yul\":3468:3559   */\n  tag_45\n  jump\t// in\ntag_102:\n    /* \"#utility.yul\":3462:3466   */\n  dup3\n    /* \"#utility.yul\":3455:3560   */\n  sstore\n    /* \"#utility.yul\":3373:3566   */\n  pop\n    /* \"#utility.yul\":3297:3566   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3572:3645   */\ntag_51:\n    /* \"#utility.yul\":3617:3620   */\n  0x00\n    /* \"#utility.yul\":3638:3639   */\n  0x00\n    /* \"#utility.yul\":3631:3639   */\n  swap1\n  pop\n    /* \"#utility.yul\":3572:3645   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":3651:3840   */\ntag_52:\n    /* \"#utility.yul\":3728:3760   */\n  tag_106\n  tag_51\n  jump\t// in\ntag_106:\n    /* \"#utility.yul\":3769:3834   */\n  tag_107\n    /* \"#utility.yul\":3827:3833   */\n  dup2\n    /* \"#utility.yul\":3819:3825   */\n  dup5\n    /* \"#utility.yul\":3813:3817   */\n  dup5\n    /* \"#utility.yul\":3769:3834   */\n  tag_50\n  jump\t// in\ntag_107:\n    /* \"#utility.yul\":3704:3840   */\n  pop\n    /* \"#utility.yul\":3651:3840   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3846:4032   */\ntag_53:\n    /* \"#utility.yul\":3906:4026   */\ntag_109:\n    /* \"#utility.yul\":3923:3926   */\n  dup2\n    /* \"#utility.yul\":3916:3921   */\n  dup2\n    /* \"#utility.yul\":3913:3927   */\n  lt\n    /* \"#utility.yul\":3906:4026   */\n  iszero\n  tag_111\n  jumpi\n    /* \"#utility.yul\":3977:4016   */\n  tag_112\n    /* \"#utility.yul\":4014:4015   */\n  0x00\n    /* \"#utility.yul\":4007:4012   */\n  dup3\n    /* \"#utility.yul\":3977:4016   */\n  tag_52\n  jump\t// in\ntag_112:\n    /* \"#utility.yul\":3950:3951   */\n  0x01\n    /* \"#utility.yul\":3943:3948   */\n  dup2\n    /* \"#utility.yul\":3939:3952   */\n  add\n    /* \"#utility.yul\":3930:3952   */\n  swap1\n  pop\n    /* \"#utility.yul\":3906:4026   */\n  jump(tag_109)\ntag_111:\n    /* \"#utility.yul\":3846:4032   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4038:4581   */\ntag_54:\n    /* \"#utility.yul\":4139:4141   */\n  0x1f\n    /* \"#utility.yul\":4134:4137   */\n  dup3\n    /* \"#utility.yul\":4131:4142   */\n  gt\n    /* \"#utility.yul\":4128:4574   */\n  iszero\n  tag_114\n  jumpi\n    /* \"#utility.yul\":4173:4211   */\n  tag_115\n    /* \"#utility.yul\":4205:4210   */\n  dup2\n    /* \"#utility.yul\":4173:4211   */\n  tag_42\n  jump\t// in\ntag_115:\n    /* \"#utility.yul\":4257:4286   */\n  tag_116\n    /* \"#utility.yul\":4275:4285   */\n  dup5\n    /* \"#utility.yul\":4257:4286   */\n  tag_43\n  jump\t// in\ntag_116:\n    /* \"#utility.yul\":4247:4255   */\n  dup2\n    /* \"#utility.yul\":4243:4287   */\n  add\n    /* \"#utility.yul\":4440:4442   */\n  0x20\n    /* \"#utility.yul\":4428:4438   */\n  dup6\n    /* \"#utility.yul\":4425:4443   */\n  lt\n    /* \"#utility.yul\":4422:4471   */\n  iszero\n  tag_117\n  jumpi\n    /* \"#utility.yul\":4461:4469   */\n  dup2\n    /* \"#utility.yul\":4446:4469   */\n  swap1\n  pop\n    /* \"#utility.yul\":4422:4471   */\ntag_117:\n    /* \"#utility.yul\":4484:4564   */\n  tag_118\n    /* \"#utility.yul\":4540:4562   */\n  tag_119\n    /* \"#utility.yul\":4558:4561   */\n  dup6\n    /* \"#utility.yul\":4540:4562   */\n  tag_43\n  jump\t// in\ntag_119:\n    /* \"#utility.yul\":4530:4538   */\n  dup4\n    /* \"#utility.yul\":4526:4563   */\n  add\n    /* \"#utility.yul\":4513:4524   */\n  dup3\n    /* \"#utility.yul\":4484:4564   */\n  tag_53\n  jump\t// in\ntag_118:\n    /* \"#utility.yul\":4143:4574   */\n  pop\n  pop\n    /* \"#utility.yul\":4128:4574   */\ntag_114:\n    /* \"#utility.yul\":4038:4581   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4587:4704   */\ntag_55:\n    /* \"#utility.yul\":4641:4649   */\n  0x00\n    /* \"#utility.yul\":4691:4696   */\n  dup3\n    /* \"#utility.yul\":4685:4689   */\n  dup3\n    /* \"#utility.yul\":4681:4697   */\n  shr\n    /* \"#utility.yul\":4660:4697   */\n  swap1\n  pop\n    /* \"#utility.yul\":4587:4704   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4710:4879   */\ntag_56:\n    /* \"#utility.yul\":4754:4760   */\n  0x00\n    /* \"#utility.yul\":4787:4838   */\n  tag_122\n    /* \"#utility.yul\":4835:4836   */\n  0x00\n    /* \"#utility.yul\":4831:4837   */\n  not\n    /* \"#utility.yul\":4823:4828   */\n  dup5\n    /* \"#utility.yul\":4820:4821   */\n  0x08\n    /* \"#utility.yul\":4816:4829   */\n  mul\n    /* \"#utility.yul\":4787:4838   */\n  tag_55\n  jump\t// in\ntag_122:\n    /* \"#utility.yul\":4783:4839   */\n  not\n    /* \"#utility.yul\":4868:4872   */\n  dup1\n    /* \"#utility.yul\":4862:4866   */\n  dup4\n    /* \"#utility.yul\":4858:4873   */\n  and\n    /* \"#utility.yul\":4848:4873   */\n  swap2\n  pop\n    /* \"#utility.yul\":4761:4879   */\n  pop\n    /* \"#utility.yul\":4710:4879   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4884:5179   */\ntag_57:\n    /* \"#utility.yul\":4960:4964   */\n  0x00\n    /* \"#utility.yul\":5106:5135   */\n  tag_124\n    /* \"#utility.yul\":5131:5134   */\n  dup4\n    /* \"#utility.yul\":5125:5129   */\n  dup4\n    /* \"#utility.yul\":5106:5135   */\n  tag_56\n  jump\t// in\ntag_124:\n    /* \"#utility.yul\":5098:5135   */\n  swap2\n  pop\n    /* \"#utility.yul\":5168:5171   */\n  dup3\n    /* \"#utility.yul\":5165:5166   */\n  0x02\n    /* \"#utility.yul\":5161:5172   */\n  mul\n    /* \"#utility.yul\":5155:5159   */\n  dup3\n    /* \"#utility.yul\":5152:5173   */\n  or\n    /* \"#utility.yul\":5144:5173   */\n  swap1\n  pop\n    /* \"#utility.yul\":4884:5179   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5184:6579   */\ntag_8:\n    /* \"#utility.yul\":5301:5338   */\n  tag_126\n    /* \"#utility.yul\":5334:5337   */\n  dup3\n    /* \"#utility.yul\":5301:5338   */\n  tag_38\n  jump\t// in\ntag_126:\n    /* \"#utility.yul\":5403:5421   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":5395:5401   */\n  dup2\n    /* \"#utility.yul\":5392:5422   */\n  gt\n    /* \"#utility.yul\":5389:5445   */\n  iszero\n  tag_127\n  jumpi\n    /* \"#utility.yul\":5425:5443   */\n  tag_128\n  tag_39\n  jump\t// in\ntag_128:\n    /* \"#utility.yul\":5389:5445   */\ntag_127:\n    /* \"#utility.yul\":5469:5507   */\n  tag_129\n    /* \"#utility.yul\":5501:5505   */\n  dup3\n    /* \"#utility.yul\":5495:5506   */\n  sload\n    /* \"#utility.yul\":5469:5507   */\n  tag_41\n  jump\t// in\ntag_129:\n    /* \"#utility.yul\":5554:5621   */\n  tag_130\n    /* \"#utility.yul\":5614:5620   */\n  dup3\n    /* \"#utility.yul\":5606:5612   */\n  dup3\n    /* \"#utility.yul\":5600:5604   */\n  dup6\n    /* \"#utility.yul\":5554:5621   */\n  tag_54\n  jump\t// in\ntag_130:\n    /* \"#utility.yul\":5648:5649   */\n  0x00\n    /* \"#utility.yul\":5672:5676   */\n  0x20\n    /* \"#utility.yul\":5659:5676   */\n  swap1\n  pop\n    /* \"#utility.yul\":5704:5706   */\n  0x1f\n    /* \"#utility.yul\":5696:5702   */\n  dup4\n    /* \"#utility.yul\":5693:5707   */\n  gt\n    /* \"#utility.yul\":5721:5722   */\n  0x01\n    /* \"#utility.yul\":5716:6334   */\n  dup2\n  eq\n  tag_132\n  jumpi\n    /* \"#utility.yul\":6378:6379   */\n  0x00\n    /* \"#utility.yul\":6395:6401   */\n  dup5\n    /* \"#utility.yul\":6392:6469   */\n  iszero\n  tag_133\n  jumpi\n    /* \"#utility.yul\":6444:6453   */\n  dup3\n    /* \"#utility.yul\":6439:6442   */\n  dup8\n    /* \"#utility.yul\":6435:6454   */\n  add\n    /* \"#utility.yul\":6429:6455   */\n  mload\n    /* \"#utility.yul\":6420:6455   */\n  swap1\n  pop\n    /* \"#utility.yul\":6392:6469   */\ntag_133:\n    /* \"#utility.yul\":6495:6562   */\n  tag_134\n    /* \"#utility.yul\":6555:6561   */\n  dup6\n    /* \"#utility.yul\":6548:6553   */\n  dup3\n    /* \"#utility.yul\":6495:6562   */\n  tag_57\n  jump\t// in\ntag_134:\n    /* \"#utility.yul\":6489:6493   */\n  dup7\n    /* \"#utility.yul\":6482:6563   */\n  sstore\n    /* \"#utility.yul\":6351:6573   */\n  pop\n    /* \"#utility.yul\":5686:6573   */\n  jump(tag_131)\n    /* \"#utility.yul\":5716:6334   */\ntag_132:\n    /* \"#utility.yul\":5768:5772   */\n  0x1f\n    /* \"#utility.yul\":5764:5773   */\n  not\n    /* \"#utility.yul\":5756:5762   */\n  dup5\n    /* \"#utility.yul\":5752:5774   */\n  and\n    /* \"#utility.yul\":5802:5839   */\n  tag_135\n    /* \"#utility.yul\":5834:5838   */\n  dup7\n    /* \"#utility.yul\":5802:5839   */\n  tag_42\n  jump\t// in\ntag_135:\n    /* \"#utility.yul\":5861:5862   */\n  0x00\n    /* \"#utility.yul\":5875:6083   */\ntag_136:\n    /* \"#utility.yul\":5889:5896   */\n  dup3\n    /* \"#utility.yul\":5886:5887   */\n  dup2\n    /* \"#utility.yul\":5883:5897   */\n  lt\n    /* \"#utility.yul\":5875:6083   */\n  iszero\n  tag_138\n  jumpi\n    /* \"#utility.yul\":5968:5977   */\n  dup5\n    /* \"#utility.yul\":5963:5966   */\n  dup10\n    /* \"#utility.yul\":5959:5978   */\n  add\n    /* \"#utility.yul\":5953:5979   */\n  mload\n    /* \"#utility.yul\":5945:5951   */\n  dup3\n    /* \"#utility.yul\":5938:5980   */\n  sstore\n    /* \"#utility.yul\":6019:6020   */\n  0x01\n    /* \"#utility.yul\":6011:6017   */\n  dup3\n    /* \"#utility.yul\":6007:6021   */\n  add\n    /* \"#utility.yul\":5997:6021   */\n  swap2\n  pop\n    /* \"#utility.yul\":6066:6068   */\n  0x20\n    /* \"#utility.yul\":6055:6064   */\n  dup6\n    /* \"#utility.yul\":6051:6069   */\n  add\n    /* \"#utility.yul\":6038:6069   */\n  swap5\n  pop\n    /* \"#utility.yul\":5912:5916   */\n  0x20\n    /* \"#utility.yul\":5909:5910   */\n  dup2\n    /* \"#utility.yul\":5905:5917   */\n  add\n    /* \"#utility.yul\":5900:5917   */\n  swap1\n  pop\n    /* \"#utility.yul\":5875:6083   */\n  jump(tag_136)\ntag_138:\n    /* \"#utility.yul\":6111:6117   */\n  dup7\n    /* \"#utility.yul\":6102:6109   */\n  dup4\n    /* \"#utility.yul\":6099:6118   */\n  lt\n    /* \"#utility.yul\":6096:6275   */\n  iszero\n  tag_139\n  jumpi\n    /* \"#utility.yul\":6169:6178   */\n  dup5\n    /* \"#utility.yul\":6164:6167   */\n  dup10\n    /* \"#utility.yul\":6160:6179   */\n  add\n    /* \"#utility.yul\":6154:6180   */\n  mload\n    /* \"#utility.yul\":6212:6260   */\n  tag_140\n    /* \"#utility.yul\":6254:6258   */\n  0x1f\n    /* \"#utility.yul\":6246:6252   */\n  dup10\n    /* \"#utility.yul\":6242:6259   */\n  and\n    /* \"#utility.yul\":6231:6240   */\n  dup3\n    /* \"#utility.yul\":6212:6260   */\n  tag_56\n  jump\t// in\ntag_140:\n    /* \"#utility.yul\":6204:6210   */\n  dup4\n    /* \"#utility.yul\":6197:6261   */\n  sstore\n    /* \"#utility.yul\":6119:6275   */\n  pop\n    /* \"#utility.yul\":6096:6275   */\ntag_139:\n    /* \"#utility.yul\":6321:6322   */\n  0x01\n    /* \"#utility.yul\":6317:6318   */\n  0x02\n    /* \"#utility.yul\":6309:6315   */\n  dup9\n    /* \"#utility.yul\":6305:6319   */\n  mul\n    /* \"#utility.yul\":6301:6323   */\n  add\n    /* \"#utility.yul\":6295:6299   */\n  dup9\n    /* \"#utility.yul\":6288:6324   */\n  sstore\n    /* \"#utility.yul\":5723:6334   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5686:6573   */\ntag_131:\n  pop\n    /* \"#utility.yul\":5276:6579   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5184:6579   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6585:6754   */\ntag_58:\n    /* \"#utility.yul\":6669:6680   */\n  0x00\n    /* \"#utility.yul\":6703:6709   */\n  dup3\n    /* \"#utility.yul\":6698:6701   */\n  dup3\n    /* \"#utility.yul\":6691:6710   */\n  mstore\n    /* \"#utility.yul\":6743:6747   */\n  0x20\n    /* \"#utility.yul\":6738:6741   */\n  dup3\n    /* \"#utility.yul\":6734:6748   */\n  add\n    /* \"#utility.yul\":6719:6748   */\n  swap1\n  pop\n    /* \"#utility.yul\":6585:6754   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6760:6931   */\ntag_59:\n    /* \"#utility.yul\":6900:6923   */\n  0x496e76616c6964207661756c7420616464726573730000000000000000000000\n    /* \"#utility.yul\":6896:6897   */\n  0x00\n    /* \"#utility.yul\":6888:6894   */\n  dup3\n    /* \"#utility.yul\":6884:6898   */\n  add\n    /* \"#utility.yul\":6877:6924   */\n  mstore\n    /* \"#utility.yul\":6760:6931   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6937:7303   */\ntag_60:\n    /* \"#utility.yul\":7079:7082   */\n  0x00\n    /* \"#utility.yul\":7100:7167   */\n  tag_144\n    /* \"#utility.yul\":7164:7166   */\n  0x15\n    /* \"#utility.yul\":7159:7162   */\n  dup4\n    /* \"#utility.yul\":7100:7167   */\n  tag_58\n  jump\t// in\ntag_144:\n    /* \"#utility.yul\":7093:7167   */\n  swap2\n  pop\n    /* \"#utility.yul\":7176:7269   */\n  tag_145\n    /* \"#utility.yul\":7265:7268   */\n  dup3\n    /* \"#utility.yul\":7176:7269   */\n  tag_59\n  jump\t// in\ntag_145:\n    /* \"#utility.yul\":7294:7296   */\n  0x20\n    /* \"#utility.yul\":7289:7292   */\n  dup3\n    /* \"#utility.yul\":7285:7297   */\n  add\n    /* \"#utility.yul\":7278:7297   */\n  swap1\n  pop\n    /* \"#utility.yul\":6937:7303   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7309:7728   */\ntag_13:\n    /* \"#utility.yul\":7475:7479   */\n  0x00\n    /* \"#utility.yul\":7513:7515   */\n  0x20\n    /* \"#utility.yul\":7502:7511   */\n  dup3\n    /* \"#utility.yul\":7498:7516   */\n  add\n    /* \"#utility.yul\":7490:7516   */\n  swap1\n  pop\n    /* \"#utility.yul\":7562:7571   */\n  dup2\n    /* \"#utility.yul\":7556:7560   */\n  dup2\n    /* \"#utility.yul\":7552:7572   */\n  sub\n    /* \"#utility.yul\":7548:7549   */\n  0x00\n    /* \"#utility.yul\":7537:7546   */\n  dup4\n    /* \"#utility.yul\":7533:7550   */\n  add\n    /* \"#utility.yul\":7526:7573   */\n  mstore\n    /* \"#utility.yul\":7590:7721   */\n  tag_147\n    /* \"#utility.yul\":7716:7720   */\n  dup2\n    /* \"#utility.yul\":7590:7721   */\n  tag_60\n  jump\t// in\ntag_147:\n    /* \"#utility.yul\":7582:7721   */\n  swap1\n  pop\n    /* \"#utility.yul\":7309:7728   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7734:7897   */\ntag_61:\n    /* \"#utility.yul\":7874:7889   */\n  0x496e76616c69642061646d696e00000000000000000000000000000000000000\n    /* \"#utility.yul\":7870:7871   */\n  0x00\n    /* \"#utility.yul\":7862:7868   */\n  dup3\n    /* \"#utility.yul\":7858:7872   */\n  add\n    /* \"#utility.yul\":7851:7890   */\n  mstore\n    /* \"#utility.yul\":7734:7897   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7903:8269   */\ntag_62:\n    /* \"#utility.yul\":8045:8048   */\n  0x00\n    /* \"#utility.yul\":8066:8133   */\n  tag_150\n    /* \"#utility.yul\":8130:8132   */\n  0x0d\n    /* \"#utility.yul\":8125:8128   */\n  dup4\n    /* \"#utility.yul\":8066:8133   */\n  tag_58\n  jump\t// in\ntag_150:\n    /* \"#utility.yul\":8059:8133   */\n  swap2\n  pop\n    /* \"#utility.yul\":8142:8235   */\n  tag_151\n    /* \"#utility.yul\":8231:8234   */\n  dup3\n    /* \"#utility.yul\":8142:8235   */\n  tag_61\n  jump\t// in\ntag_151:\n    /* \"#utility.yul\":8260:8262   */\n  0x20\n    /* \"#utility.yul\":8255:8258   */\n  dup3\n    /* \"#utility.yul\":8251:8263   */\n  add\n    /* \"#utility.yul\":8244:8263   */\n  swap1\n  pop\n    /* \"#utility.yul\":7903:8269   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8275:8694   */\ntag_16:\n    /* \"#utility.yul\":8441:8445   */\n  0x00\n    /* \"#utility.yul\":8479:8481   */\n  0x20\n    /* \"#utility.yul\":8468:8477   */\n  dup3\n    /* \"#utility.yul\":8464:8482   */\n  add\n    /* \"#utility.yul\":8456:8482   */\n  swap1\n  pop\n    /* \"#utility.yul\":8528:8537   */\n  dup2\n    /* \"#utility.yul\":8522:8526   */\n  dup2\n    /* \"#utility.yul\":8518:8538   */\n  sub\n    /* \"#utility.yul\":8514:8515   */\n  0x00\n    /* \"#utility.yul\":8503:8512   */\n  dup4\n    /* \"#utility.yul\":8499:8516   */\n  add\n    /* \"#utility.yul\":8492:8539   */\n  mstore\n    /* \"#utility.yul\":8556:8687   */\n  tag_153\n    /* \"#utility.yul\":8682:8686   */\n  dup2\n    /* \"#utility.yul\":8556:8687   */\n  tag_62\n  jump\t// in\ntag_153:\n    /* \"#utility.yul\":8548:8687   */\n  swap1\n  pop\n    /* \"#utility.yul\":8275:8694   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"GoldToken.sol\":725:2918  contract GoldToken is ERC20Pausable, AccessControl {... */\ntag_21:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"GoldToken.sol\":725:2918  contract GoldToken is ERC20Pausable, AccessControl {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x5c975abb\n      gt\n      tag_27\n      jumpi\n      dup1\n      0xa9059cbb\n      gt\n      tag_28\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xd5391393\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xd547741f\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xe63ab1e9\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xfbfa77cf\n      eq\n      tag_26\n      jumpi\n      jump(tag_2)\n    tag_28:\n      dup1\n      0x5c975abb\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x8456cb59\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x91d14854\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xa217fddf\n      eq\n      tag_20\n      jumpi\n      jump(tag_2)\n    tag_27:\n      dup1\n      0x248a9ca3\n      gt\n      tag_29\n      jumpi\n      dup1\n      0x248a9ca3\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x2f2ff15d\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x36568abe\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x3f4ba83a\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_29:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x1c83ba4a\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2565:2767  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_3:\n      tag_30\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n    tag_4:\n      tag_36\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3979:4165  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_5:\n      tag_40\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      tag_43\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      tag_44\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2830:2927  function totalSupply() public view virtual returns (uint256) {... */\n    tag_6:\n      tag_45\n      tag_46\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      tag_47\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"GoldToken.sol\":2293:2621  function burnFromVault(address from, uint256 amount)... */\n    tag_7:\n      tag_49\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_50\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_50:\n      tag_51\n      jump\t// in\n    tag_49:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4757:5001  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_8:\n      tag_52\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_53\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_53:\n      tag_55\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      tag_56\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n    tag_9:\n      tag_57\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_58\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_58:\n      tag_60\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      tag_61\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4226:4362  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_10:\n      tag_63\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_64\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      tag_66\n      jump\t// in\n    tag_63:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\n    tag_11:\n      tag_67\n      tag_68\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      tag_69\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5328:5573  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_12:\n      tag_71\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_72\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_72:\n      tag_73\n      jump\t// in\n    tag_71:\n      stop\n        /* \"GoldToken.sol\":2839:2916  function unpause() external onlyRole(PAUSER_ROLE) {... */\n    tag_13:\n      tag_74\n      tag_75\n      jump\t// in\n    tag_74:\n      stop\n        /* \"GoldToken.sol\":1786:2151  function mint(address to, uint256 amount)... */\n    tag_14:\n      tag_76\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_77\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_77:\n      tag_78\n      jump\t// in\n    tag_76:\n      stop\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1726:1810  function paused() public view virtual returns (bool) {... */\n    tag_15:\n      tag_79\n      tag_80\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      tag_81\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2985:3101  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_16:\n      tag_82\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_83\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_83:\n      tag_85\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      tag_86\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"GoldToken.sol\":2711:2784  function pause() external onlyRole(PAUSER_ROLE) {... */\n    tag_17:\n      tag_87\n      tag_88\n      jump\t// in\n    tag_87:\n      stop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_18:\n      tag_89\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_90\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_90:\n      tag_91\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      tag_92\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_92:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n    tag_19:\n      tag_93\n      tag_94\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      tag_95\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_95:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2187:2236  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_20:\n      tag_96\n      tag_97\n      jump\t// in\n    tag_96:\n      mload(0x40)\n      tag_98\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_98:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3296:3474  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_21:\n      tag_99\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_100\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_100:\n      tag_101\n      jump\t// in\n    tag_99:\n      mload(0x40)\n      tag_102\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_102:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"GoldToken.sol\":806:868  bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\") */\n    tag_22:\n      tag_103\n      tag_104\n      jump\t// in\n    tag_103:\n      mload(0x40)\n      tag_105\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_105:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4642:4780  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_23:\n      tag_106\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_107\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_107:\n      tag_108\n      jump\t// in\n    tag_106:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3532:3672  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_24:\n      tag_109\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_110\n      swap2\n      swap1\n      tag_111\n      jump\t// in\n    tag_110:\n      tag_112\n      jump\t// in\n    tag_109:\n      mload(0x40)\n      tag_113\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_113:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"GoldToken.sol\":874:936  bytes32 public constant PAUSER_ROLE = keccak256(\"PAUSER_ROLE\") */\n    tag_25:\n      tag_114\n      tag_115\n      jump\t// in\n    tag_114:\n      mload(0x40)\n      tag_116\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_116:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"GoldToken.sol\":984:1010  IVaultManager public vault */\n    tag_26:\n      tag_117\n      tag_118\n      jump\t// in\n    tag_117:\n      mload(0x40)\n      tag_119\n      swap2\n      swap1\n      tag_120\n      jump\t// in\n    tag_119:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2565:2767  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_33:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2650:2654  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2688:2720  type(IAccessControl).interfaceId */\n      0x7965db0b00000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2720  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2684  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2720  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2760  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      dup1\n      tag_122\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2724:2760  super.supportsInterface(interfaceId) */\n      tag_123\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2748:2759  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2724:2747  super.supportsInterface */\n      tag_124\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2724:2760  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_123:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2760  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n    tag_122:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2666:2760  return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2565:2767  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n    tag_37:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1805:1818  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1837:1842  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1830:1842  return _name */\n      dup1\n      sload\n      tag_126\n      swap1\n      tag_127\n      jump\t// in\n    tag_126:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_128\n      swap1\n      tag_127\n      jump\t// in\n    tag_128:\n      dup1\n      iszero\n      tag_129\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_130\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_129)\n    tag_130:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_131:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_131\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_129:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3979:4165  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_43:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4052:4056  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4068:4081  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4084:4096  _msgSender() */\n      tag_133\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4084:4094  _msgSender */\n      tag_134\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4084:4096  _msgSender() */\n      jump\t// in\n    tag_133:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4068:4096  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4106:4137  _approve(owner, spender, value) */\n      tag_135\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4115:4120  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4122:4129  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4131:4136  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4106:4114  _approve */\n      tag_136\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4106:4137  _approve(owner, spender, value) */\n      jump\t// in\n    tag_135:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4154:4158  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4147:4158  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3979:4165  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2830:2927  function totalSupply() public view virtual returns (uint256) {... */\n    tag_46:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2882:2889  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2908:2920  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2901:2920  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2830:2927  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"GoldToken.sol\":2293:2621  function burnFromVault(address from, uint256 amount)... */\n    tag_51:\n        /* \"GoldToken.sol\":844:868  keccak256(\"MINTER_ROLE\") */\n      0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_139\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_140\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_139:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1350:1369  _requireNotPaused() */\n      tag_142\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1350:1367  _requireNotPaused */\n      tag_143\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1350:1369  _requireNotPaused() */\n      jump\t// in\n    tag_142:\n        /* \"GoldToken.sol\":2453:2454  0 */\n      0x00\n        /* \"GoldToken.sol\":2437:2455  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"GoldToken.sol\":2437:2441  from */\n      dup4\n        /* \"GoldToken.sol\":2437:2455  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"GoldToken.sol\":2429:2475  require(from != address(0), \"Invalid address\") */\n      tag_145\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_146\n      swap1\n      tag_147\n      jump\t// in\n    tag_146:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_145:\n        /* \"GoldToken.sol\":2512:2518  amount */\n      dup2\n        /* \"GoldToken.sol\":2493:2508  balanceOf(from) */\n      tag_148\n        /* \"GoldToken.sol\":2503:2507  from */\n      dup5\n        /* \"GoldToken.sol\":2493:2502  balanceOf */\n      tag_85\n        /* \"GoldToken.sol\":2493:2508  balanceOf(from) */\n      jump\t// in\n    tag_148:\n        /* \"GoldToken.sol\":2493:2518  balanceOf(from) >= amount */\n      lt\n      iszero\n        /* \"GoldToken.sol\":2485:2543  require(balanceOf(from) >= amount, \"Insufficient balance\") */\n      tag_149\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_150\n      swap1\n      tag_151\n      jump\t// in\n    tag_150:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_149:\n        /* \"GoldToken.sol\":2554:2559  vault */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"GoldToken.sol\":2554:2577  vault.reduceReserveUsed */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xecad4f68\n        /* \"GoldToken.sol\":2578:2584  amount */\n      dup4\n        /* \"GoldToken.sol\":2554:2585  vault.reduceReserveUsed(amount) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_152\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_152:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_153\n      jumpi\n      revert(0x00, 0x00)\n    tag_153:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_155\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_155:\n      pop\n      pop\n      pop\n      pop\n        /* \"GoldToken.sol\":2595:2614  _burn(from, amount) */\n      tag_156\n        /* \"GoldToken.sol\":2601:2605  from */\n      dup4\n        /* \"GoldToken.sol\":2607:2613  amount */\n      dup4\n        /* \"GoldToken.sol\":2595:2600  _burn */\n      tag_157\n        /* \"GoldToken.sol\":2595:2614  _burn(from, amount) */\n      jump\t// in\n    tag_156:\n        /* \"GoldToken.sol\":2293:2621  function burnFromVault(address from, uint256 amount)... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4757:5001  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_55:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4844:4848  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4860:4875  address spender */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4878:4890  _msgSender() */\n      tag_159\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4878:4888  _msgSender */\n      tag_134\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4878:4890  _msgSender() */\n      jump\t// in\n    tag_159:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4860:4890  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4900:4937  _spendAllowance(from, spender, value) */\n      tag_160\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4916:4920  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4922:4929  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4931:4936  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4900:4915  _spendAllowance */\n      tag_161\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4900:4937  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_160:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4947:4973  _transfer(from, to, value) */\n      tag_162\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4957:4961  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4963:4965  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4967:4972  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4947:4956  _transfer */\n      tag_163\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4947:4973  _transfer(from, to, value) */\n      jump\t// in\n    tag_162:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4990:4994  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4983:4994  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4757:5001  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n    tag_60:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3875:3882  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3907  _roles */\n      0x06\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3913  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3908:3912  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3913  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3923  _roles[role].adminRole */\n      0x01\n      add\n      sload\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3894:3923  return _roles[role].adminRole */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4226:4362  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_66:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4300:4318  getRoleAdmin(role) */\n      tag_165\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4313:4317  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4300:4312  getRoleAdmin */\n      tag_60\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4300:4318  getRoleAdmin(role) */\n      jump\t// in\n    tag_165:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_167\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_140\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_167:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4330:4355  _grantRole(role, account) */\n      tag_169\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4341:4345  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4347:4354  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4330:4340  _grantRole */\n      tag_170\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4330:4355  _grantRole(role, account) */\n      jump\t// in\n    tag_169:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4226:4362  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\n    tag_68:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2737:2742  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2761:2763  18 */\n      0x12\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2754:2763  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5328:5573  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_73:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5443:5455  _msgSender() */\n      tag_173\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5443:5453  _msgSender */\n      tag_134\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5443:5455  _msgSender() */\n      jump\t// in\n    tag_173:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5421:5455  callerConfirmation != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5421:5439  callerConfirmation */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5421:5455  callerConfirmation != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5417:5519  if (callerConfirmation != _msgSender()) {... */\n      tag_174\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5478:5508  AccessControlBadConfirmation() */\n      mload(0x40)\n      0x6697b23200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5417:5519  if (callerConfirmation != _msgSender()) {... */\n    tag_174:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5529:5566  _revokeRole(role, callerConfirmation) */\n      tag_175\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5541:5545  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5547:5565  callerConfirmation */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5529:5540  _revokeRole */\n      tag_176\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5529:5566  _revokeRole(role, callerConfirmation) */\n      jump\t// in\n    tag_175:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5328:5573  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"GoldToken.sol\":2839:2916  function unpause() external onlyRole(PAUSER_ROLE) {... */\n    tag_75:\n        /* \"GoldToken.sol\":912:936  keccak256(\"PAUSER_ROLE\") */\n      0x65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_178\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_140\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_178:\n        /* \"GoldToken.sol\":2899:2909  _unpause() */\n      tag_180\n        /* \"GoldToken.sol\":2899:2907  _unpause */\n      tag_181\n        /* \"GoldToken.sol\":2899:2909  _unpause() */\n      jump\t// in\n    tag_180:\n        /* \"GoldToken.sol\":2839:2916  function unpause() external onlyRole(PAUSER_ROLE) {... */\n      pop\n      jump\t// out\n        /* \"GoldToken.sol\":1786:2151  function mint(address to, uint256 amount)... */\n    tag_78:\n        /* \"GoldToken.sol\":844:868  keccak256(\"MINTER_ROLE\") */\n      0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_183\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_140\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_183:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1350:1369  _requireNotPaused() */\n      tag_185\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1350:1367  _requireNotPaused */\n      tag_143\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1350:1369  _requireNotPaused() */\n      jump\t// in\n    tag_185:\n        /* \"GoldToken.sol\":1933:1934  0 */\n      0x00\n        /* \"GoldToken.sol\":1919:1935  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"GoldToken.sol\":1919:1921  to */\n      dup4\n        /* \"GoldToken.sol\":1919:1935  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"GoldToken.sol\":1911:1957  require(to != address(0), \"Invalid recipient\") */\n      tag_187\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_188\n      swap1\n      tag_189\n      jump\t// in\n    tag_188:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_187:\n        /* \"GoldToken.sol\":1984:1985  0 */\n      0x00\n        /* \"GoldToken.sol\":1975:1981  amount */\n      dup3\n        /* \"GoldToken.sol\":1975:1985  amount > 0 */\n      gt\n        /* \"GoldToken.sol\":1967:2008  require(amount > 0, \"Amount must be > 0\") */\n      tag_190\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_191\n      swap1\n      tag_192\n      jump\t// in\n    tag_191:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_190:\n        /* \"GoldToken.sol\":2052:2058  amount */\n      dup2\n        /* \"GoldToken.sol\":2026:2031  vault */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"GoldToken.sol\":2026:2046  vault.availableGrams */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xff9b1b11\n        /* \"GoldToken.sol\":2026:2048  vault.availableGrams() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_194\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_194:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_195\n      swap2\n      swap1\n      tag_196\n      jump\t// in\n    tag_195:\n        /* \"GoldToken.sol\":2026:2058  vault.availableGrams() >= amount */\n      lt\n      iszero\n        /* \"GoldToken.sol\":2018:2078  require(vault.availableGrams() >= amount, \"Not enough gold\") */\n      tag_197\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_198\n      swap1\n      tag_199\n      jump\t// in\n    tag_198:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_197:\n        /* \"GoldToken.sol\":2089:2094  vault */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"GoldToken.sol\":2089:2109  vault.addReserveUsed */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x3dd0104e\n        /* \"GoldToken.sol\":2110:2116  amount */\n      dup4\n        /* \"GoldToken.sol\":2089:2117  vault.addReserveUsed(amount) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_200\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_200:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_201\n      jumpi\n      revert(0x00, 0x00)\n    tag_201:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_203\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_203:\n      pop\n      pop\n      pop\n      pop\n        /* \"GoldToken.sol\":2127:2144  _mint(to, amount) */\n      tag_204\n        /* \"GoldToken.sol\":2133:2135  to */\n      dup4\n        /* \"GoldToken.sol\":2137:2143  amount */\n      dup4\n        /* \"GoldToken.sol\":2127:2132  _mint */\n      tag_205\n        /* \"GoldToken.sol\":2127:2144  _mint(to, amount) */\n      jump\t// in\n    tag_204:\n        /* \"GoldToken.sol\":1786:2151  function mint(address to, uint256 amount)... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1726:1810  function paused() public view virtual returns (bool) {... */\n    tag_80:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1773:1777  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1796:1803  _paused */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1789:1803  return _paused */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1726:1810  function paused() public view virtual returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2985:3101  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_85:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3050:3057  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3076:3085  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3076:3094  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3086:3093  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3076:3094  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3069:3094  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2985:3101  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"GoldToken.sol\":2711:2784  function pause() external onlyRole(PAUSER_ROLE) {... */\n    tag_88:\n        /* \"GoldToken.sol\":912:936  keccak256(\"PAUSER_ROLE\") */\n      0x65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_209\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_140\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_209:\n        /* \"GoldToken.sol\":2769:2777  _pause() */\n      tag_211\n        /* \"GoldToken.sol\":2769:2775  _pause */\n      tag_212\n        /* \"GoldToken.sol\":2769:2777  _pause() */\n      jump\t// in\n    tag_211:\n        /* \"GoldToken.sol\":2711:2784  function pause() external onlyRole(PAUSER_ROLE) {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_91:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2931:2935  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2960  _roles */\n      0x06\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2961:2965  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2974  _roles[role].hasRole */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2975:2982  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2947:2983  return _roles[role].hasRole[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n    tag_94:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2009:2022  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2041:2048  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2034:2048  return _symbol */\n      dup1\n      sload\n      tag_215\n      swap1\n      tag_127\n      jump\t// in\n    tag_215:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_216\n      swap1\n      tag_127\n      jump\t// in\n    tag_216:\n      dup1\n      iszero\n      tag_217\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_218\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_217)\n    tag_218:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_219:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_219\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_217:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2187:2236  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_97:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2232:2236  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2187:2236  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n      0x00\n      shl\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3296:3474  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_101:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3365:3369  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3381:3394  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3397:3409  _msgSender() */\n      tag_221\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3397:3407  _msgSender */\n      tag_134\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3397:3409  _msgSender() */\n      jump\t// in\n    tag_221:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3381:3409  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3419:3446  _transfer(owner, to, value) */\n      tag_222\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3429:3434  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3436:3438  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3440:3445  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3419:3428  _transfer */\n      tag_163\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3419:3446  _transfer(owner, to, value) */\n      jump\t// in\n    tag_222:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3463:3467  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3456:3467  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3296:3474  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"GoldToken.sol\":806:868  bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\") */\n    tag_104:\n        /* \"GoldToken.sol\":844:868  keccak256(\"MINTER_ROLE\") */\n      0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6\n        /* \"GoldToken.sol\":806:868  bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\") */\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4642:4780  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_108:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4717:4735  getRoleAdmin(role) */\n      tag_223\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4730:4734  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4717:4729  getRoleAdmin */\n      tag_60\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4717:4735  getRoleAdmin(role) */\n      jump\t// in\n    tag_223:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_225\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_140\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_225:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4747:4773  _revokeRole(role, account) */\n      tag_227\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4759:4763  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4765:4772  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4747:4758  _revokeRole */\n      tag_176\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4747:4773  _revokeRole(role, account) */\n      jump\t// in\n    tag_227:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4642:4780  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3532:3672  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_112:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3612:3619  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3649  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3656  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3650:3655  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3656  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3665  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3664  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3665  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3631:3665  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3532:3672  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"GoldToken.sol\":874:936  bytes32 public constant PAUSER_ROLE = keccak256(\"PAUSER_ROLE\") */\n    tag_115:\n        /* \"GoldToken.sol\":912:936  keccak256(\"PAUSER_ROLE\") */\n      0x65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a\n        /* \"GoldToken.sol\":874:936  bytes32 public constant PAUSER_ROLE = keccak256(\"PAUSER_ROLE\") */\n      dup2\n      jump\t// out\n        /* \"GoldToken.sol\":984:1010  IVaultManager public vault */\n    tag_118:\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":763:909  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n    tag_124:\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":839:843  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":877:902  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":862:902  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":862:873  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":862:902  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":855:902  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":763:909  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_134:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8707:8835  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_136:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8791:8828  _approve(owner, spender, value, true) */\n      tag_232\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8800:8805  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8807:8814  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8816:8821  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8823:8827  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8791:8799  _approve */\n      tag_233\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8791:8828  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_232:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8707:8835  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3199:3302  function _checkRole(bytes32 role) internal view virtual {... */\n    tag_140:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3265:3295  _checkRole(role, _msgSender()) */\n      tag_235\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3276:3280  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3282:3294  _msgSender() */\n      tag_236\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3282:3292  _msgSender */\n      tag_134\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3282:3294  _msgSender() */\n      jump\t// in\n    tag_236:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3265:3275  _checkRole */\n      tag_237\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3265:3295  _checkRole(role, _msgSender()) */\n      jump\t// in\n    tag_235:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3199:3302  function _checkRole(bytes32 role) internal view virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1878:2006  function _requireNotPaused() internal view virtual {... */\n    tag_143:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1943:1951  paused() */\n      tag_239\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1943:1949  paused */\n      tag_80\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1943:1951  paused() */\n      jump\t// in\n    tag_239:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1939:2000  if (paused()) {... */\n      iszero\n      tag_240\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1974:1989  EnforcedPause() */\n      mload(0x40)\n      0xd93c066500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1939:2000  if (paused()) {... */\n    tag_240:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1878:2006  function _requireNotPaused() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7965:8171  function _burn(address account, uint256 value) internal {... */\n    tag_157:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8054:8055  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8035:8056  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8035:8042  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8035:8056  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8031:8120  if (account == address(0)) {... */\n      tag_242\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8106:8107  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8079:8109  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_243\n      swap2\n      swap1\n      tag_244\n      jump\t// in\n    tag_243:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8031:8120  if (account == address(0)) {... */\n    tag_242:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8129:8164  _update(account, address(0), value) */\n      tag_245\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8137:8144  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8154:8155  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8158:8163  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8129:8136  _update */\n      tag_246\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8129:8164  _update(account, address(0), value) */\n      jump\t// in\n    tag_245:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7965:8171  function _burn(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10396:10872  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_161:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10495:10519  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10522:10547  allowance(owner, spender) */\n      tag_248\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10532:10537  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10539:10546  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10522:10531  allowance */\n      tag_112\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10522:10547  allowance(owner, spender) */\n      jump\t// in\n    tag_248:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10495:10547  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10580:10597  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10561:10577  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10561:10597  currentAllowance < type(uint256).max */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10557:10866  if (currentAllowance < type(uint256).max) {... */\n      iszero\n      tag_249\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10636:10641  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10617:10633  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10617:10641  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10613:10743  if (currentAllowance < value) {... */\n      iszero\n      tag_250\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10695:10702  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10704:10720  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10722:10727  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10668:10728  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_251\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_252\n      jump\t// in\n    tag_251:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10613:10743  if (currentAllowance < value) {... */\n    tag_250:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10841  _approve(owner, spender, currentAllowance - value, false) */\n      tag_253\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10793:10798  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10800:10807  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10833  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10809:10825  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10809:10833  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10835:10840  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10792  _approve */\n      tag_233\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10841  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_253:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10557:10866  if (currentAllowance < type(uint256).max) {... */\n    tag_249:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10485:10872  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10396:10872  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5374:5674  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_163:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5473:5474  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5457:5475  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5457:5461  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5457:5475  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5453:5539  if (from == address(0)) {... */\n      tag_255\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5525:5526  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5498:5528  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_256\n      swap2\n      swap1\n      tag_244\n      jump\t// in\n    tag_256:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5453:5539  if (from == address(0)) {... */\n    tag_255:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5566:5567  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5552:5568  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5552:5554  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5552:5568  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5548:5634  if (to == address(0)) {... */\n      tag_257\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5620:5621  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5591:5623  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_258\n      swap2\n      swap1\n      tag_244\n      jump\t// in\n    tag_258:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5548:5634  if (to == address(0)) {... */\n    tag_257:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5643:5667  _update(from, to, value) */\n      tag_259\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5651:5655  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5657:5659  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5661:5666  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5643:5650  _update */\n      tag_246\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5643:5667  _update(from, to, value) */\n      jump\t// in\n    tag_259:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5374:5674  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_170:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6256:6260  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n      tag_261\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6285:6289  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6298  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6284  hasRole */\n      tag_91\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n      jump\t// in\n    tag_261:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\n      tag_262\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6347:6351  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6321  _roles */\n      0x06\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6322:6326  role */\n      dup6\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6335  _roles[role].hasRole */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6336:6343  account */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6351  _roles[role].hasRole[account] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n      tag_263\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6407  _msgSender */\n      tag_134\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n      jump\t// in\n    tag_263:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6388:6395  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6382:6386  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6431:6435  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6424:6435  return true */\n      swap1\n      pop\n      jump(tag_260)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\n    tag_262:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6473:6478  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6466:6478  return false */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_260:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6732:7049  function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_176:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6810:6814  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6830:6852  hasRole(role, account) */\n      tag_266\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6838:6842  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6844:6851  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6830:6837  hasRole */\n      tag_91\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6830:6852  hasRole(role, account) */\n      jump\t// in\n    tag_266:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6826:7043  if (hasRole(role, account)) {... */\n      iszero\n      tag_267\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6900:6905  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6868:6874  _roles */\n      0x06\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6868:6880  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6875:6879  role */\n      dup6\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6868:6880  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6868:6888  _roles[role].hasRole */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6868:6897  _roles[role].hasRole[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6889:6896  account */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6868:6897  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6868:6905  _roles[role].hasRole[account] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6951:6963  _msgSender() */\n      tag_268\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6951:6961  _msgSender */\n      tag_134\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6951:6963  _msgSender() */\n      jump\t// in\n    tag_268:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6924:6964  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6942:6949  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6924:6964  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6936:6940  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6924:6964  RoleRevoked(role, account, _msgSender()) */\n      0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6985:6989  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6978:6989  return true */\n      swap1\n      pop\n      jump(tag_265)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6826:7043  if (hasRole(role, account)) {... */\n    tag_267:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7027:7032  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7020:7032  return false */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6732:7049  function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_265:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2586:2703  function _unpause() internal virtual whenPaused {... */\n    tag_181:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1597:1613  _requirePaused() */\n      tag_271\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1597:1611  _requirePaused */\n      tag_272\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1597:1613  _requirePaused() */\n      jump\t// in\n    tag_271:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2654:2659  false */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2644:2651  _paused */\n      0x05\n      0x00\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2644:2659  _paused = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2674:2696  Unpaused(_msgSender()) */\n      0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2683:2695  _msgSender() */\n      tag_274\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2683:2693  _msgSender */\n      tag_134\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2683:2695  _msgSender() */\n      jump\t// in\n    tag_274:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2674:2696  Unpaused(_msgSender()) */\n      mload(0x40)\n      tag_275\n      swap2\n      swap1\n      tag_244\n      jump\t// in\n    tag_275:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2586:2703  function _unpause() internal virtual whenPaused {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7439:7647  function _mint(address account, uint256 value) internal {... */\n    tag_205:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7529  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7509:7530  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7509:7516  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7509:7530  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7505:7596  if (account == address(0)) {... */\n      tag_277\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7582:7583  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7553:7585  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_278\n      swap2\n      swap1\n      tag_244\n      jump\t// in\n    tag_278:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7505:7596  if (account == address(0)) {... */\n    tag_277:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7605:7640  _update(address(0), account, value) */\n      tag_279\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7621:7622  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7625:7632  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7634:7639  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7605:7612  _update */\n      tag_246\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7605:7640  _update(address(0), account, value) */\n      jump\t// in\n    tag_279:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7439:7647  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2339:2454  function _pause() internal virtual whenNotPaused {... */\n    tag_212:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1350:1369  _requireNotPaused() */\n      tag_281\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1350:1367  _requireNotPaused */\n      tag_143\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1350:1369  _requireNotPaused() */\n      jump\t// in\n    tag_281:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2408:2412  true */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2398:2405  _paused */\n      0x05\n      0x00\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2398:2412  _paused = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2427:2447  Paused(_msgSender()) */\n      0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2434:2446  _msgSender() */\n      tag_283\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2434:2444  _msgSender */\n      tag_134\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2434:2446  _msgSender() */\n      jump\t// in\n    tag_283:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2427:2447  Paused(_msgSender()) */\n      mload(0x40)\n      tag_284\n      swap2\n      swap1\n      tag_244\n      jump\t// in\n    tag_284:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2339:2454  function _pause() internal virtual whenNotPaused {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9682:10114  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_233:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9811:9812  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9794:9813  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9794:9799  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9794:9813  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9790:9879  if (owner == address(0)) {... */\n      tag_286\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9865:9866  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9836:9868  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_287\n      swap2\n      swap1\n      tag_244\n      jump\t// in\n    tag_287:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9790:9879  if (owner == address(0)) {... */\n    tag_286:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9912  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9892:9913  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9892:9899  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9892:9913  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9888:9978  if (spender == address(0)) {... */\n      tag_288\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9964:9965  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9936:9967  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_289\n      swap2\n      swap1\n      tag_244\n      jump\t// in\n    tag_289:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9888:9978  if (spender == address(0)) {... */\n    tag_288:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10017:10022  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:9998  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10005  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9999:10004  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10005  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10014  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10013  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10014  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10022  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10036:10045  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10032:10108  if (emitEvent) {... */\n      iszero\n      tag_290\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10082:10089  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10066:10097  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10075:10080  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10066:10097  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10091:10096  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10066:10097  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_291\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_291:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10032:10108  if (emitEvent) {... */\n    tag_290:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9682:10114  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3432:3629  function _checkRole(bytes32 role, address account) internal view virtual {... */\n    tag_237:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3520:3542  hasRole(role, account) */\n      tag_293\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3528:3532  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3534:3541  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3520:3527  hasRole */\n      tag_91\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3520:3542  hasRole(role, account) */\n      jump\t// in\n    tag_293:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3515:3623  if (!hasRole(role, account)) {... */\n      tag_294\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3598:3605  account */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3607:3611  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3565:3612  AccessControlUnauthorizedAccount(account, role) */\n      mload(0x40)\n      0xe2517d3f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_295\n      swap3\n      swap2\n      swap1\n      tag_296\n      jump\t// in\n    tag_295:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3515:3623  if (!hasRole(role, account)) {... */\n    tag_294:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3432:3629  function _checkRole(bytes32 role, address account) internal view virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":1113:1258  function _update(address from, address to, uint256 value) internal virtual override whenNotPaused {... */\n    tag_246:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1350:1369  _requireNotPaused() */\n      tag_298\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1350:1367  _requireNotPaused */\n      tag_143\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1350:1369  _requireNotPaused() */\n      jump\t// in\n    tag_298:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":1221:1251  super._update(from, to, value) */\n      tag_300\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":1235:1239  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":1241:1243  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":1245:1250  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":1221:1234  super._update */\n      tag_301\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":1221:1251  super._update(from, to, value) */\n      jump\t// in\n    tag_300:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":1113:1258  function _update(address from, address to, uint256 value) internal virtual override whenNotPaused {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2078:2204  function _requirePaused() internal view virtual {... */\n    tag_272:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2141:2149  paused() */\n      tag_303\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2141:2147  paused */\n      tag_80\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2141:2149  paused() */\n      jump\t// in\n    tag_303:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2136:2198  if (!paused()) {... */\n      tag_304\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2172:2187  ExpectedPause() */\n      mload(0x40)\n      0x8dfc202b00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2136:2198  if (!paused()) {... */\n    tag_304:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2078:2204  function _requirePaused() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5989:7096  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_301:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6094:6095  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6078:6096  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6078:6082  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6078:6096  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n      tag_306\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6230:6235  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6214:6226  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6214:6235  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_307\n      swap2\n      swap1\n      tag_308\n      jump\t// in\n    tag_307:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n      jump(tag_309)\n    tag_306:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6266:6285  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6297  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6303  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6298:6302  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6303  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6266:6303  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6335:6340  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6321:6332  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6321:6340  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6432  if (fromBalance < value) {... */\n      iszero\n      tag_310\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6392:6396  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6398:6409  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6411:6416  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6367:6417  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_311\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_252\n      jump\t// in\n    tag_311:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6432  if (fromBalance < value) {... */\n    tag_310:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6584:6589  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6581  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6589  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6561  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6567  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6562:6566  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6567  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6589  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6252:6614  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n    tag_309:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6642:6643  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6628:6644  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6628:6630  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6628:6644  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n      tag_312\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6807:6812  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6791:6803  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6791:6812  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n      jump(tag_313)\n    tag_312:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7019:7024  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7011  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7015  _balances[to] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7012:7014  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7015  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7024  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n    tag_313:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7079:7081  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7077  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7088  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n      mload(0x40)\n      tag_314\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_314:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5989:7096  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_316:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      0x00\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_318:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_319:\n        /* \"#utility.yul\":561:584   */\n      tag_367\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_318\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_368\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      0x00\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_368:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_320:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_370\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_319\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_32:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_372\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_373\n      tag_316\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":833:952   */\n    tag_372:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_374\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_320\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_321:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_322:\n        /* \"#utility.yul\":1268:1289   */\n      tag_377\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_321\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_35:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_379\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_322\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1617   */\n    tag_323:\n        /* \"#utility.yul\":1570:1576   */\n      0x00\n        /* \"#utility.yul\":1604:1609   */\n      dup2\n        /* \"#utility.yul\":1598:1610   */\n      mload\n        /* \"#utility.yul\":1588:1610   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1617   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1623:1792   */\n    tag_324:\n        /* \"#utility.yul\":1707:1718   */\n      0x00\n        /* \"#utility.yul\":1741:1747   */\n      dup3\n        /* \"#utility.yul\":1736:1739   */\n      dup3\n        /* \"#utility.yul\":1729:1748   */\n      mstore\n        /* \"#utility.yul\":1781:1785   */\n      0x20\n        /* \"#utility.yul\":1776:1779   */\n      dup3\n        /* \"#utility.yul\":1772:1786   */\n      add\n        /* \"#utility.yul\":1757:1786   */\n      swap1\n      pop\n        /* \"#utility.yul\":1623:1792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1798:1937   */\n    tag_325:\n        /* \"#utility.yul\":1887:1893   */\n      dup3\n        /* \"#utility.yul\":1882:1885   */\n      dup2\n        /* \"#utility.yul\":1877:1880   */\n      dup4\n        /* \"#utility.yul\":1871:1894   */\n      mcopy\n        /* \"#utility.yul\":1928:1929   */\n      0x00\n        /* \"#utility.yul\":1919:1925   */\n      dup4\n        /* \"#utility.yul\":1914:1917   */\n      dup4\n        /* \"#utility.yul\":1910:1926   */\n      add\n        /* \"#utility.yul\":1903:1930   */\n      mstore\n        /* \"#utility.yul\":1798:1937   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1943:2045   */\n    tag_326:\n        /* \"#utility.yul\":1984:1990   */\n      0x00\n        /* \"#utility.yul\":2035:2037   */\n      0x1f\n        /* \"#utility.yul\":2031:2038   */\n      not\n        /* \"#utility.yul\":2026:2028   */\n      0x1f\n        /* \"#utility.yul\":2019:2024   */\n      dup4\n        /* \"#utility.yul\":2015:2029   */\n      add\n        /* \"#utility.yul\":2011:2039   */\n      and\n        /* \"#utility.yul\":2001:2039   */\n      swap1\n      pop\n        /* \"#utility.yul\":1943:2045   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2051:2428   */\n    tag_327:\n        /* \"#utility.yul\":2139:2142   */\n      0x00\n        /* \"#utility.yul\":2167:2206   */\n      tag_385\n        /* \"#utility.yul\":2200:2205   */\n      dup3\n        /* \"#utility.yul\":2167:2206   */\n      tag_323\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":2222:2293   */\n      tag_386\n        /* \"#utility.yul\":2286:2292   */\n      dup2\n        /* \"#utility.yul\":2281:2284   */\n      dup6\n        /* \"#utility.yul\":2222:2293   */\n      tag_324\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":2215:2293   */\n      swap4\n      pop\n        /* \"#utility.yul\":2302:2367   */\n      tag_387\n        /* \"#utility.yul\":2360:2366   */\n      dup2\n        /* \"#utility.yul\":2355:2358   */\n      dup6\n        /* \"#utility.yul\":2348:2352   */\n      0x20\n        /* \"#utility.yul\":2341:2346   */\n      dup7\n        /* \"#utility.yul\":2337:2353   */\n      add\n        /* \"#utility.yul\":2302:2367   */\n      tag_325\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":2392:2421   */\n      tag_388\n        /* \"#utility.yul\":2414:2420   */\n      dup2\n        /* \"#utility.yul\":2392:2421   */\n      tag_326\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":2387:2390   */\n      dup5\n        /* \"#utility.yul\":2383:2422   */\n      add\n        /* \"#utility.yul\":2376:2422   */\n      swap2\n      pop\n        /* \"#utility.yul\":2143:2428   */\n      pop\n        /* \"#utility.yul\":2051:2428   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2434:2747   */\n    tag_39:\n        /* \"#utility.yul\":2547:2551   */\n      0x00\n        /* \"#utility.yul\":2585:2587   */\n      0x20\n        /* \"#utility.yul\":2574:2583   */\n      dup3\n        /* \"#utility.yul\":2570:2588   */\n      add\n        /* \"#utility.yul\":2562:2588   */\n      swap1\n      pop\n        /* \"#utility.yul\":2634:2643   */\n      dup2\n        /* \"#utility.yul\":2628:2632   */\n      dup2\n        /* \"#utility.yul\":2624:2644   */\n      sub\n        /* \"#utility.yul\":2620:2621   */\n      0x00\n        /* \"#utility.yul\":2609:2618   */\n      dup4\n        /* \"#utility.yul\":2605:2622   */\n      add\n        /* \"#utility.yul\":2598:2645   */\n      mstore\n        /* \"#utility.yul\":2662:2740   */\n      tag_390\n        /* \"#utility.yul\":2735:2739   */\n      dup2\n        /* \"#utility.yul\":2726:2732   */\n      dup5\n        /* \"#utility.yul\":2662:2740   */\n      tag_327\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":2654:2740   */\n      swap1\n      pop\n        /* \"#utility.yul\":2434:2747   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2753:2879   */\n    tag_328:\n        /* \"#utility.yul\":2790:2797   */\n      0x00\n        /* \"#utility.yul\":2830:2872   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2823:2828   */\n      dup3\n        /* \"#utility.yul\":2819:2873   */\n      and\n        /* \"#utility.yul\":2808:2873   */\n      swap1\n      pop\n        /* \"#utility.yul\":2753:2879   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2885:2981   */\n    tag_329:\n        /* \"#utility.yul\":2922:2929   */\n      0x00\n        /* \"#utility.yul\":2951:2975   */\n      tag_393\n        /* \"#utility.yul\":2969:2974   */\n      dup3\n        /* \"#utility.yul\":2951:2975   */\n      tag_328\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":2940:2975   */\n      swap1\n      pop\n        /* \"#utility.yul\":2885:2981   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2987:3109   */\n    tag_330:\n        /* \"#utility.yul\":3060:3084   */\n      tag_395\n        /* \"#utility.yul\":3078:3083   */\n      dup2\n        /* \"#utility.yul\":3060:3084   */\n      tag_329\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":3053:3058   */\n      dup2\n        /* \"#utility.yul\":3050:3085   */\n      eq\n        /* \"#utility.yul\":3040:3103   */\n      tag_396\n      jumpi\n        /* \"#utility.yul\":3099:3100   */\n      0x00\n        /* \"#utility.yul\":3096:3097   */\n      0x00\n        /* \"#utility.yul\":3089:3101   */\n      revert\n        /* \"#utility.yul\":3040:3103   */\n    tag_396:\n        /* \"#utility.yul\":2987:3109   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3115:3254   */\n    tag_331:\n        /* \"#utility.yul\":3161:3166   */\n      0x00\n        /* \"#utility.yul\":3199:3205   */\n      dup2\n        /* \"#utility.yul\":3186:3206   */\n      calldataload\n        /* \"#utility.yul\":3177:3206   */\n      swap1\n      pop\n        /* \"#utility.yul\":3215:3248   */\n      tag_398\n        /* \"#utility.yul\":3242:3247   */\n      dup2\n        /* \"#utility.yul\":3215:3248   */\n      tag_330\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":3115:3254   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3260:3337   */\n    tag_332:\n        /* \"#utility.yul\":3297:3304   */\n      0x00\n        /* \"#utility.yul\":3326:3331   */\n      dup2\n        /* \"#utility.yul\":3315:3331   */\n      swap1\n      pop\n        /* \"#utility.yul\":3260:3337   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3343:3465   */\n    tag_333:\n        /* \"#utility.yul\":3416:3440   */\n      tag_401\n        /* \"#utility.yul\":3434:3439   */\n      dup2\n        /* \"#utility.yul\":3416:3440   */\n      tag_332\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":3409:3414   */\n      dup2\n        /* \"#utility.yul\":3406:3441   */\n      eq\n        /* \"#utility.yul\":3396:3459   */\n      tag_402\n      jumpi\n        /* \"#utility.yul\":3455:3456   */\n      0x00\n        /* \"#utility.yul\":3452:3453   */\n      0x00\n        /* \"#utility.yul\":3445:3457   */\n      revert\n        /* \"#utility.yul\":3396:3459   */\n    tag_402:\n        /* \"#utility.yul\":3343:3465   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3471:3610   */\n    tag_334:\n        /* \"#utility.yul\":3517:3522   */\n      0x00\n        /* \"#utility.yul\":3555:3561   */\n      dup2\n        /* \"#utility.yul\":3542:3562   */\n      calldataload\n        /* \"#utility.yul\":3533:3562   */\n      swap1\n      pop\n        /* \"#utility.yul\":3571:3604   */\n      tag_404\n        /* \"#utility.yul\":3598:3603   */\n      dup2\n        /* \"#utility.yul\":3571:3604   */\n      tag_333\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":3471:3610   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3616:4090   */\n    tag_42:\n        /* \"#utility.yul\":3684:3690   */\n      0x00\n        /* \"#utility.yul\":3692:3698   */\n      0x00\n        /* \"#utility.yul\":3741:3743   */\n      0x40\n        /* \"#utility.yul\":3729:3738   */\n      dup4\n        /* \"#utility.yul\":3720:3727   */\n      dup6\n        /* \"#utility.yul\":3716:3739   */\n      sub\n        /* \"#utility.yul\":3712:3744   */\n      slt\n        /* \"#utility.yul\":3709:3828   */\n      iszero\n      tag_406\n      jumpi\n        /* \"#utility.yul\":3747:3826   */\n      tag_407\n      tag_316\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":3709:3828   */\n    tag_406:\n        /* \"#utility.yul\":3867:3868   */\n      0x00\n        /* \"#utility.yul\":3892:3945   */\n      tag_408\n        /* \"#utility.yul\":3937:3944   */\n      dup6\n        /* \"#utility.yul\":3928:3934   */\n      dup3\n        /* \"#utility.yul\":3917:3926   */\n      dup7\n        /* \"#utility.yul\":3913:3935   */\n      add\n        /* \"#utility.yul\":3892:3945   */\n      tag_331\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":3882:3945   */\n      swap3\n      pop\n        /* \"#utility.yul\":3838:3955   */\n      pop\n        /* \"#utility.yul\":3994:3996   */\n      0x20\n        /* \"#utility.yul\":4020:4073   */\n      tag_409\n        /* \"#utility.yul\":4065:4072   */\n      dup6\n        /* \"#utility.yul\":4056:4062   */\n      dup3\n        /* \"#utility.yul\":4045:4054   */\n      dup7\n        /* \"#utility.yul\":4041:4063   */\n      add\n        /* \"#utility.yul\":4020:4073   */\n      tag_334\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":4010:4073   */\n      swap2\n      pop\n        /* \"#utility.yul\":3965:4083   */\n      pop\n        /* \"#utility.yul\":3616:4090   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4096:4214   */\n    tag_335:\n        /* \"#utility.yul\":4183:4207   */\n      tag_411\n        /* \"#utility.yul\":4201:4206   */\n      dup2\n        /* \"#utility.yul\":4183:4207   */\n      tag_332\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":4178:4181   */\n      dup3\n        /* \"#utility.yul\":4171:4208   */\n      mstore\n        /* \"#utility.yul\":4096:4214   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4220:4442   */\n    tag_48:\n        /* \"#utility.yul\":4313:4317   */\n      0x00\n        /* \"#utility.yul\":4351:4353   */\n      0x20\n        /* \"#utility.yul\":4340:4349   */\n      dup3\n        /* \"#utility.yul\":4336:4354   */\n      add\n        /* \"#utility.yul\":4328:4354   */\n      swap1\n      pop\n        /* \"#utility.yul\":4364:4435   */\n      tag_413\n        /* \"#utility.yul\":4432:4433   */\n      0x00\n        /* \"#utility.yul\":4421:4430   */\n      dup4\n        /* \"#utility.yul\":4417:4434   */\n      add\n        /* \"#utility.yul\":4408:4414   */\n      dup5\n        /* \"#utility.yul\":4364:4435   */\n      tag_335\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":4220:4442   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4448:5067   */\n    tag_54:\n        /* \"#utility.yul\":4525:4531   */\n      0x00\n        /* \"#utility.yul\":4533:4539   */\n      0x00\n        /* \"#utility.yul\":4541:4547   */\n      0x00\n        /* \"#utility.yul\":4590:4592   */\n      0x60\n        /* \"#utility.yul\":4578:4587   */\n      dup5\n        /* \"#utility.yul\":4569:4576   */\n      dup7\n        /* \"#utility.yul\":4565:4588   */\n      sub\n        /* \"#utility.yul\":4561:4593   */\n      slt\n        /* \"#utility.yul\":4558:4677   */\n      iszero\n      tag_415\n      jumpi\n        /* \"#utility.yul\":4596:4675   */\n      tag_416\n      tag_316\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":4558:4677   */\n    tag_415:\n        /* \"#utility.yul\":4716:4717   */\n      0x00\n        /* \"#utility.yul\":4741:4794   */\n      tag_417\n        /* \"#utility.yul\":4786:4793   */\n      dup7\n        /* \"#utility.yul\":4777:4783   */\n      dup3\n        /* \"#utility.yul\":4766:4775   */\n      dup8\n        /* \"#utility.yul\":4762:4784   */\n      add\n        /* \"#utility.yul\":4741:4794   */\n      tag_331\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":4731:4794   */\n      swap4\n      pop\n        /* \"#utility.yul\":4687:4804   */\n      pop\n        /* \"#utility.yul\":4843:4845   */\n      0x20\n        /* \"#utility.yul\":4869:4922   */\n      tag_418\n        /* \"#utility.yul\":4914:4921   */\n      dup7\n        /* \"#utility.yul\":4905:4911   */\n      dup3\n        /* \"#utility.yul\":4894:4903   */\n      dup8\n        /* \"#utility.yul\":4890:4912   */\n      add\n        /* \"#utility.yul\":4869:4922   */\n      tag_331\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":4859:4922   */\n      swap3\n      pop\n        /* \"#utility.yul\":4814:4932   */\n      pop\n        /* \"#utility.yul\":4971:4973   */\n      0x40\n        /* \"#utility.yul\":4997:5050   */\n      tag_419\n        /* \"#utility.yul\":5042:5049   */\n      dup7\n        /* \"#utility.yul\":5033:5039   */\n      dup3\n        /* \"#utility.yul\":5022:5031   */\n      dup8\n        /* \"#utility.yul\":5018:5040   */\n      add\n        /* \"#utility.yul\":4997:5050   */\n      tag_334\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":4987:5050   */\n      swap2\n      pop\n        /* \"#utility.yul\":4942:5060   */\n      pop\n        /* \"#utility.yul\":4448:5067   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5073:5150   */\n    tag_336:\n        /* \"#utility.yul\":5110:5117   */\n      0x00\n        /* \"#utility.yul\":5139:5144   */\n      dup2\n        /* \"#utility.yul\":5128:5144   */\n      swap1\n      pop\n        /* \"#utility.yul\":5073:5150   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5156:5278   */\n    tag_337:\n        /* \"#utility.yul\":5229:5253   */\n      tag_422\n        /* \"#utility.yul\":5247:5252   */\n      dup2\n        /* \"#utility.yul\":5229:5253   */\n      tag_336\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":5222:5227   */\n      dup2\n        /* \"#utility.yul\":5219:5254   */\n      eq\n        /* \"#utility.yul\":5209:5272   */\n      tag_423\n      jumpi\n        /* \"#utility.yul\":5268:5269   */\n      0x00\n        /* \"#utility.yul\":5265:5266   */\n      0x00\n        /* \"#utility.yul\":5258:5270   */\n      revert\n        /* \"#utility.yul\":5209:5272   */\n    tag_423:\n        /* \"#utility.yul\":5156:5278   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5284:5423   */\n    tag_338:\n        /* \"#utility.yul\":5330:5335   */\n      0x00\n        /* \"#utility.yul\":5368:5374   */\n      dup2\n        /* \"#utility.yul\":5355:5375   */\n      calldataload\n        /* \"#utility.yul\":5346:5375   */\n      swap1\n      pop\n        /* \"#utility.yul\":5384:5417   */\n      tag_425\n        /* \"#utility.yul\":5411:5416   */\n      dup2\n        /* \"#utility.yul\":5384:5417   */\n      tag_337\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":5284:5423   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5429:5758   */\n    tag_59:\n        /* \"#utility.yul\":5488:5494   */\n      0x00\n        /* \"#utility.yul\":5537:5539   */\n      0x20\n        /* \"#utility.yul\":5525:5534   */\n      dup3\n        /* \"#utility.yul\":5516:5523   */\n      dup5\n        /* \"#utility.yul\":5512:5535   */\n      sub\n        /* \"#utility.yul\":5508:5540   */\n      slt\n        /* \"#utility.yul\":5505:5624   */\n      iszero\n      tag_427\n      jumpi\n        /* \"#utility.yul\":5543:5622   */\n      tag_428\n      tag_316\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":5505:5624   */\n    tag_427:\n        /* \"#utility.yul\":5663:5664   */\n      0x00\n        /* \"#utility.yul\":5688:5741   */\n      tag_429\n        /* \"#utility.yul\":5733:5740   */\n      dup5\n        /* \"#utility.yul\":5724:5730   */\n      dup3\n        /* \"#utility.yul\":5713:5722   */\n      dup6\n        /* \"#utility.yul\":5709:5731   */\n      add\n        /* \"#utility.yul\":5688:5741   */\n      tag_338\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":5678:5741   */\n      swap2\n      pop\n        /* \"#utility.yul\":5634:5751   */\n      pop\n        /* \"#utility.yul\":5429:5758   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5764:5882   */\n    tag_339:\n        /* \"#utility.yul\":5851:5875   */\n      tag_431\n        /* \"#utility.yul\":5869:5874   */\n      dup2\n        /* \"#utility.yul\":5851:5875   */\n      tag_336\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":5846:5849   */\n      dup3\n        /* \"#utility.yul\":5839:5876   */\n      mstore\n        /* \"#utility.yul\":5764:5882   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5888:6110   */\n    tag_62:\n        /* \"#utility.yul\":5981:5985   */\n      0x00\n        /* \"#utility.yul\":6019:6021   */\n      0x20\n        /* \"#utility.yul\":6008:6017   */\n      dup3\n        /* \"#utility.yul\":6004:6022   */\n      add\n        /* \"#utility.yul\":5996:6022   */\n      swap1\n      pop\n        /* \"#utility.yul\":6032:6103   */\n      tag_433\n        /* \"#utility.yul\":6100:6101   */\n      0x00\n        /* \"#utility.yul\":6089:6098   */\n      dup4\n        /* \"#utility.yul\":6085:6102   */\n      add\n        /* \"#utility.yul\":6076:6082   */\n      dup5\n        /* \"#utility.yul\":6032:6103   */\n      tag_339\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":5888:6110   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6116:6590   */\n    tag_65:\n        /* \"#utility.yul\":6184:6190   */\n      0x00\n        /* \"#utility.yul\":6192:6198   */\n      0x00\n        /* \"#utility.yul\":6241:6243   */\n      0x40\n        /* \"#utility.yul\":6229:6238   */\n      dup4\n        /* \"#utility.yul\":6220:6227   */\n      dup6\n        /* \"#utility.yul\":6216:6239   */\n      sub\n        /* \"#utility.yul\":6212:6244   */\n      slt\n        /* \"#utility.yul\":6209:6328   */\n      iszero\n      tag_435\n      jumpi\n        /* \"#utility.yul\":6247:6326   */\n      tag_436\n      tag_316\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":6209:6328   */\n    tag_435:\n        /* \"#utility.yul\":6367:6368   */\n      0x00\n        /* \"#utility.yul\":6392:6445   */\n      tag_437\n        /* \"#utility.yul\":6437:6444   */\n      dup6\n        /* \"#utility.yul\":6428:6434   */\n      dup3\n        /* \"#utility.yul\":6417:6426   */\n      dup7\n        /* \"#utility.yul\":6413:6435   */\n      add\n        /* \"#utility.yul\":6392:6445   */\n      tag_338\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":6382:6445   */\n      swap3\n      pop\n        /* \"#utility.yul\":6338:6455   */\n      pop\n        /* \"#utility.yul\":6494:6496   */\n      0x20\n        /* \"#utility.yul\":6520:6573   */\n      tag_438\n        /* \"#utility.yul\":6565:6572   */\n      dup6\n        /* \"#utility.yul\":6556:6562   */\n      dup3\n        /* \"#utility.yul\":6545:6554   */\n      dup7\n        /* \"#utility.yul\":6541:6563   */\n      add\n        /* \"#utility.yul\":6520:6573   */\n      tag_331\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":6510:6573   */\n      swap2\n      pop\n        /* \"#utility.yul\":6465:6583   */\n      pop\n        /* \"#utility.yul\":6116:6590   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6596:6682   */\n    tag_340:\n        /* \"#utility.yul\":6631:6638   */\n      0x00\n        /* \"#utility.yul\":6671:6675   */\n      0xff\n        /* \"#utility.yul\":6664:6669   */\n      dup3\n        /* \"#utility.yul\":6660:6676   */\n      and\n        /* \"#utility.yul\":6649:6676   */\n      swap1\n      pop\n        /* \"#utility.yul\":6596:6682   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6688:6800   */\n    tag_341:\n        /* \"#utility.yul\":6771:6793   */\n      tag_441\n        /* \"#utility.yul\":6787:6792   */\n      dup2\n        /* \"#utility.yul\":6771:6793   */\n      tag_340\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":6766:6769   */\n      dup3\n        /* \"#utility.yul\":6759:6794   */\n      mstore\n        /* \"#utility.yul\":6688:6800   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6806:7020   */\n    tag_70:\n        /* \"#utility.yul\":6895:6899   */\n      0x00\n        /* \"#utility.yul\":6933:6935   */\n      0x20\n        /* \"#utility.yul\":6922:6931   */\n      dup3\n        /* \"#utility.yul\":6918:6936   */\n      add\n        /* \"#utility.yul\":6910:6936   */\n      swap1\n      pop\n        /* \"#utility.yul\":6946:7013   */\n      tag_443\n        /* \"#utility.yul\":7010:7011   */\n      0x00\n        /* \"#utility.yul\":6999:7008   */\n      dup4\n        /* \"#utility.yul\":6995:7012   */\n      add\n        /* \"#utility.yul\":6986:6992   */\n      dup5\n        /* \"#utility.yul\":6946:7013   */\n      tag_341\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":6806:7020   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7026:7355   */\n    tag_84:\n        /* \"#utility.yul\":7085:7091   */\n      0x00\n        /* \"#utility.yul\":7134:7136   */\n      0x20\n        /* \"#utility.yul\":7122:7131   */\n      dup3\n        /* \"#utility.yul\":7113:7120   */\n      dup5\n        /* \"#utility.yul\":7109:7132   */\n      sub\n        /* \"#utility.yul\":7105:7137   */\n      slt\n        /* \"#utility.yul\":7102:7221   */\n      iszero\n      tag_445\n      jumpi\n        /* \"#utility.yul\":7140:7219   */\n      tag_446\n      tag_316\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":7102:7221   */\n    tag_445:\n        /* \"#utility.yul\":7260:7261   */\n      0x00\n        /* \"#utility.yul\":7285:7338   */\n      tag_447\n        /* \"#utility.yul\":7330:7337   */\n      dup5\n        /* \"#utility.yul\":7321:7327   */\n      dup3\n        /* \"#utility.yul\":7310:7319   */\n      dup6\n        /* \"#utility.yul\":7306:7328   */\n      add\n        /* \"#utility.yul\":7285:7338   */\n      tag_331\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":7275:7338   */\n      swap2\n      pop\n        /* \"#utility.yul\":7231:7348   */\n      pop\n        /* \"#utility.yul\":7026:7355   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7361:7835   */\n    tag_111:\n        /* \"#utility.yul\":7429:7435   */\n      0x00\n        /* \"#utility.yul\":7437:7443   */\n      0x00\n        /* \"#utility.yul\":7486:7488   */\n      0x40\n        /* \"#utility.yul\":7474:7483   */\n      dup4\n        /* \"#utility.yul\":7465:7472   */\n      dup6\n        /* \"#utility.yul\":7461:7484   */\n      sub\n        /* \"#utility.yul\":7457:7489   */\n      slt\n        /* \"#utility.yul\":7454:7573   */\n      iszero\n      tag_449\n      jumpi\n        /* \"#utility.yul\":7492:7571   */\n      tag_450\n      tag_316\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":7454:7573   */\n    tag_449:\n        /* \"#utility.yul\":7612:7613   */\n      0x00\n        /* \"#utility.yul\":7637:7690   */\n      tag_451\n        /* \"#utility.yul\":7682:7689   */\n      dup6\n        /* \"#utility.yul\":7673:7679   */\n      dup3\n        /* \"#utility.yul\":7662:7671   */\n      dup7\n        /* \"#utility.yul\":7658:7680   */\n      add\n        /* \"#utility.yul\":7637:7690   */\n      tag_331\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":7627:7690   */\n      swap3\n      pop\n        /* \"#utility.yul\":7583:7700   */\n      pop\n        /* \"#utility.yul\":7739:7741   */\n      0x20\n        /* \"#utility.yul\":7765:7818   */\n      tag_452\n        /* \"#utility.yul\":7810:7817   */\n      dup6\n        /* \"#utility.yul\":7801:7807   */\n      dup3\n        /* \"#utility.yul\":7790:7799   */\n      dup7\n        /* \"#utility.yul\":7786:7808   */\n      add\n        /* \"#utility.yul\":7765:7818   */\n      tag_331\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":7755:7818   */\n      swap2\n      pop\n        /* \"#utility.yul\":7710:7828   */\n      pop\n        /* \"#utility.yul\":7361:7835   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7841:7901   */\n    tag_342:\n        /* \"#utility.yul\":7869:7872   */\n      0x00\n        /* \"#utility.yul\":7890:7895   */\n      dup2\n        /* \"#utility.yul\":7883:7895   */\n      swap1\n      pop\n        /* \"#utility.yul\":7841:7901   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7907:8049   */\n    tag_343:\n        /* \"#utility.yul\":7957:7966   */\n      0x00\n        /* \"#utility.yul\":7990:8043   */\n      tag_455\n        /* \"#utility.yul\":8008:8042   */\n      tag_456\n        /* \"#utility.yul\":8017:8041   */\n      tag_457\n        /* \"#utility.yul\":8035:8040   */\n      dup5\n        /* \"#utility.yul\":8017:8041   */\n      tag_328\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":8008:8042   */\n      tag_342\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":7990:8043   */\n      tag_328\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":7977:8043   */\n      swap1\n      pop\n        /* \"#utility.yul\":7907:8049   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8055:8181   */\n    tag_344:\n        /* \"#utility.yul\":8105:8114   */\n      0x00\n        /* \"#utility.yul\":8138:8175   */\n      tag_459\n        /* \"#utility.yul\":8169:8174   */\n      dup3\n        /* \"#utility.yul\":8138:8175   */\n      tag_343\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":8125:8175   */\n      swap1\n      pop\n        /* \"#utility.yul\":8055:8181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8187:8335   */\n    tag_345:\n        /* \"#utility.yul\":8259:8268   */\n      0x00\n        /* \"#utility.yul\":8292:8329   */\n      tag_461\n        /* \"#utility.yul\":8323:8328   */\n      dup3\n        /* \"#utility.yul\":8292:8329   */\n      tag_344\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":8279:8329   */\n      swap1\n      pop\n        /* \"#utility.yul\":8187:8335   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8341:8516   */\n    tag_346:\n        /* \"#utility.yul\":8450:8509   */\n      tag_463\n        /* \"#utility.yul\":8503:8508   */\n      dup2\n        /* \"#utility.yul\":8450:8509   */\n      tag_345\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":8445:8448   */\n      dup3\n        /* \"#utility.yul\":8438:8510   */\n      mstore\n        /* \"#utility.yul\":8341:8516   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8522:8788   */\n    tag_120:\n        /* \"#utility.yul\":8637:8641   */\n      0x00\n        /* \"#utility.yul\":8675:8677   */\n      0x20\n        /* \"#utility.yul\":8664:8673   */\n      dup3\n        /* \"#utility.yul\":8660:8678   */\n      add\n        /* \"#utility.yul\":8652:8678   */\n      swap1\n      pop\n        /* \"#utility.yul\":8688:8781   */\n      tag_465\n        /* \"#utility.yul\":8778:8779   */\n      0x00\n        /* \"#utility.yul\":8767:8776   */\n      dup4\n        /* \"#utility.yul\":8763:8780   */\n      add\n        /* \"#utility.yul\":8754:8760   */\n      dup5\n        /* \"#utility.yul\":8688:8781   */\n      tag_346\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":8522:8788   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8794:8974   */\n    tag_347:\n        /* \"#utility.yul\":8842:8919   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8839:8840   */\n      0x00\n        /* \"#utility.yul\":8832:8920   */\n      mstore\n        /* \"#utility.yul\":8939:8943   */\n      0x22\n        /* \"#utility.yul\":8936:8937   */\n      0x04\n        /* \"#utility.yul\":8929:8944   */\n      mstore\n        /* \"#utility.yul\":8963:8967   */\n      0x24\n        /* \"#utility.yul\":8960:8961   */\n      0x00\n        /* \"#utility.yul\":8953:8968   */\n      revert\n        /* \"#utility.yul\":8980:9300   */\n    tag_127:\n        /* \"#utility.yul\":9024:9030   */\n      0x00\n        /* \"#utility.yul\":9061:9062   */\n      0x02\n        /* \"#utility.yul\":9055:9059   */\n      dup3\n        /* \"#utility.yul\":9051:9063   */\n      div\n        /* \"#utility.yul\":9041:9063   */\n      swap1\n      pop\n        /* \"#utility.yul\":9108:9109   */\n      0x01\n        /* \"#utility.yul\":9102:9106   */\n      dup3\n        /* \"#utility.yul\":9098:9110   */\n      and\n        /* \"#utility.yul\":9129:9147   */\n      dup1\n        /* \"#utility.yul\":9119:9200   */\n      tag_468\n      jumpi\n        /* \"#utility.yul\":9185:9189   */\n      0x7f\n        /* \"#utility.yul\":9177:9183   */\n      dup3\n        /* \"#utility.yul\":9173:9190   */\n      and\n        /* \"#utility.yul\":9163:9190   */\n      swap2\n      pop\n        /* \"#utility.yul\":9119:9200   */\n    tag_468:\n        /* \"#utility.yul\":9247:9249   */\n      0x20\n        /* \"#utility.yul\":9239:9245   */\n      dup3\n        /* \"#utility.yul\":9236:9250   */\n      lt\n        /* \"#utility.yul\":9216:9234   */\n      dup2\n        /* \"#utility.yul\":9213:9251   */\n      sub\n        /* \"#utility.yul\":9210:9294   */\n      tag_469\n      jumpi\n        /* \"#utility.yul\":9266:9284   */\n      tag_470\n      tag_347\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":9210:9294   */\n    tag_469:\n        /* \"#utility.yul\":9031:9300   */\n      pop\n        /* \"#utility.yul\":8980:9300   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9306:9471   */\n    tag_348:\n        /* \"#utility.yul\":9446:9463   */\n      0x496e76616c696420616464726573730000000000000000000000000000000000\n        /* \"#utility.yul\":9442:9443   */\n      0x00\n        /* \"#utility.yul\":9434:9440   */\n      dup3\n        /* \"#utility.yul\":9430:9444   */\n      add\n        /* \"#utility.yul\":9423:9464   */\n      mstore\n        /* \"#utility.yul\":9306:9471   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9477:9843   */\n    tag_349:\n        /* \"#utility.yul\":9619:9622   */\n      0x00\n        /* \"#utility.yul\":9640:9707   */\n      tag_473\n        /* \"#utility.yul\":9704:9706   */\n      0x0f\n        /* \"#utility.yul\":9699:9702   */\n      dup4\n        /* \"#utility.yul\":9640:9707   */\n      tag_324\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":9633:9707   */\n      swap2\n      pop\n        /* \"#utility.yul\":9716:9809   */\n      tag_474\n        /* \"#utility.yul\":9805:9808   */\n      dup3\n        /* \"#utility.yul\":9716:9809   */\n      tag_348\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":9834:9836   */\n      0x20\n        /* \"#utility.yul\":9829:9832   */\n      dup3\n        /* \"#utility.yul\":9825:9837   */\n      add\n        /* \"#utility.yul\":9818:9837   */\n      swap1\n      pop\n        /* \"#utility.yul\":9477:9843   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9849:10268   */\n    tag_147:\n        /* \"#utility.yul\":10015:10019   */\n      0x00\n        /* \"#utility.yul\":10053:10055   */\n      0x20\n        /* \"#utility.yul\":10042:10051   */\n      dup3\n        /* \"#utility.yul\":10038:10056   */\n      add\n        /* \"#utility.yul\":10030:10056   */\n      swap1\n      pop\n        /* \"#utility.yul\":10102:10111   */\n      dup2\n        /* \"#utility.yul\":10096:10100   */\n      dup2\n        /* \"#utility.yul\":10092:10112   */\n      sub\n        /* \"#utility.yul\":10088:10089   */\n      0x00\n        /* \"#utility.yul\":10077:10086   */\n      dup4\n        /* \"#utility.yul\":10073:10090   */\n      add\n        /* \"#utility.yul\":10066:10113   */\n      mstore\n        /* \"#utility.yul\":10130:10261   */\n      tag_476\n        /* \"#utility.yul\":10256:10260   */\n      dup2\n        /* \"#utility.yul\":10130:10261   */\n      tag_349\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":10122:10261   */\n      swap1\n      pop\n        /* \"#utility.yul\":9849:10268   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10274:10444   */\n    tag_350:\n        /* \"#utility.yul\":10414:10436   */\n      0x496e73756666696369656e742062616c616e6365000000000000000000000000\n        /* \"#utility.yul\":10410:10411   */\n      0x00\n        /* \"#utility.yul\":10402:10408   */\n      dup3\n        /* \"#utility.yul\":10398:10412   */\n      add\n        /* \"#utility.yul\":10391:10437   */\n      mstore\n        /* \"#utility.yul\":10274:10444   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10450:10816   */\n    tag_351:\n        /* \"#utility.yul\":10592:10595   */\n      0x00\n        /* \"#utility.yul\":10613:10680   */\n      tag_479\n        /* \"#utility.yul\":10677:10679   */\n      0x14\n        /* \"#utility.yul\":10672:10675   */\n      dup4\n        /* \"#utility.yul\":10613:10680   */\n      tag_324\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":10606:10680   */\n      swap2\n      pop\n        /* \"#utility.yul\":10689:10782   */\n      tag_480\n        /* \"#utility.yul\":10778:10781   */\n      dup3\n        /* \"#utility.yul\":10689:10782   */\n      tag_350\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":10807:10809   */\n      0x20\n        /* \"#utility.yul\":10802:10805   */\n      dup3\n        /* \"#utility.yul\":10798:10810   */\n      add\n        /* \"#utility.yul\":10791:10810   */\n      swap1\n      pop\n        /* \"#utility.yul\":10450:10816   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10822:11241   */\n    tag_151:\n        /* \"#utility.yul\":10988:10992   */\n      0x00\n        /* \"#utility.yul\":11026:11028   */\n      0x20\n        /* \"#utility.yul\":11015:11024   */\n      dup3\n        /* \"#utility.yul\":11011:11029   */\n      add\n        /* \"#utility.yul\":11003:11029   */\n      swap1\n      pop\n        /* \"#utility.yul\":11075:11084   */\n      dup2\n        /* \"#utility.yul\":11069:11073   */\n      dup2\n        /* \"#utility.yul\":11065:11085   */\n      sub\n        /* \"#utility.yul\":11061:11062   */\n      0x00\n        /* \"#utility.yul\":11050:11059   */\n      dup4\n        /* \"#utility.yul\":11046:11063   */\n      add\n        /* \"#utility.yul\":11039:11086   */\n      mstore\n        /* \"#utility.yul\":11103:11234   */\n      tag_482\n        /* \"#utility.yul\":11229:11233   */\n      dup2\n        /* \"#utility.yul\":11103:11234   */\n      tag_351\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":11095:11234   */\n      swap1\n      pop\n        /* \"#utility.yul\":10822:11241   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11247:11414   */\n    tag_352:\n        /* \"#utility.yul\":11387:11406   */\n      0x496e76616c696420726563697069656e74000000000000000000000000000000\n        /* \"#utility.yul\":11383:11384   */\n      0x00\n        /* \"#utility.yul\":11375:11381   */\n      dup3\n        /* \"#utility.yul\":11371:11385   */\n      add\n        /* \"#utility.yul\":11364:11407   */\n      mstore\n        /* \"#utility.yul\":11247:11414   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11420:11786   */\n    tag_353:\n        /* \"#utility.yul\":11562:11565   */\n      0x00\n        /* \"#utility.yul\":11583:11650   */\n      tag_485\n        /* \"#utility.yul\":11647:11649   */\n      0x11\n        /* \"#utility.yul\":11642:11645   */\n      dup4\n        /* \"#utility.yul\":11583:11650   */\n      tag_324\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":11576:11650   */\n      swap2\n      pop\n        /* \"#utility.yul\":11659:11752   */\n      tag_486\n        /* \"#utility.yul\":11748:11751   */\n      dup3\n        /* \"#utility.yul\":11659:11752   */\n      tag_352\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":11777:11779   */\n      0x20\n        /* \"#utility.yul\":11772:11775   */\n      dup3\n        /* \"#utility.yul\":11768:11780   */\n      add\n        /* \"#utility.yul\":11761:11780   */\n      swap1\n      pop\n        /* \"#utility.yul\":11420:11786   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11792:12211   */\n    tag_189:\n        /* \"#utility.yul\":11958:11962   */\n      0x00\n        /* \"#utility.yul\":11996:11998   */\n      0x20\n        /* \"#utility.yul\":11985:11994   */\n      dup3\n        /* \"#utility.yul\":11981:11999   */\n      add\n        /* \"#utility.yul\":11973:11999   */\n      swap1\n      pop\n        /* \"#utility.yul\":12045:12054   */\n      dup2\n        /* \"#utility.yul\":12039:12043   */\n      dup2\n        /* \"#utility.yul\":12035:12055   */\n      sub\n        /* \"#utility.yul\":12031:12032   */\n      0x00\n        /* \"#utility.yul\":12020:12029   */\n      dup4\n        /* \"#utility.yul\":12016:12033   */\n      add\n        /* \"#utility.yul\":12009:12056   */\n      mstore\n        /* \"#utility.yul\":12073:12204   */\n      tag_488\n        /* \"#utility.yul\":12199:12203   */\n      dup2\n        /* \"#utility.yul\":12073:12204   */\n      tag_353\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":12065:12204   */\n      swap1\n      pop\n        /* \"#utility.yul\":11792:12211   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12217:12385   */\n    tag_354:\n        /* \"#utility.yul\":12357:12377   */\n      0x416d6f756e74206d757374206265203e20300000000000000000000000000000\n        /* \"#utility.yul\":12353:12354   */\n      0x00\n        /* \"#utility.yul\":12345:12351   */\n      dup3\n        /* \"#utility.yul\":12341:12355   */\n      add\n        /* \"#utility.yul\":12334:12378   */\n      mstore\n        /* \"#utility.yul\":12217:12385   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12391:12757   */\n    tag_355:\n        /* \"#utility.yul\":12533:12536   */\n      0x00\n        /* \"#utility.yul\":12554:12621   */\n      tag_491\n        /* \"#utility.yul\":12618:12620   */\n      0x12\n        /* \"#utility.yul\":12613:12616   */\n      dup4\n        /* \"#utility.yul\":12554:12621   */\n      tag_324\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":12547:12621   */\n      swap2\n      pop\n        /* \"#utility.yul\":12630:12723   */\n      tag_492\n        /* \"#utility.yul\":12719:12722   */\n      dup3\n        /* \"#utility.yul\":12630:12723   */\n      tag_354\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":12748:12750   */\n      0x20\n        /* \"#utility.yul\":12743:12746   */\n      dup3\n        /* \"#utility.yul\":12739:12751   */\n      add\n        /* \"#utility.yul\":12732:12751   */\n      swap1\n      pop\n        /* \"#utility.yul\":12391:12757   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12763:13182   */\n    tag_192:\n        /* \"#utility.yul\":12929:12933   */\n      0x00\n        /* \"#utility.yul\":12967:12969   */\n      0x20\n        /* \"#utility.yul\":12956:12965   */\n      dup3\n        /* \"#utility.yul\":12952:12970   */\n      add\n        /* \"#utility.yul\":12944:12970   */\n      swap1\n      pop\n        /* \"#utility.yul\":13016:13025   */\n      dup2\n        /* \"#utility.yul\":13010:13014   */\n      dup2\n        /* \"#utility.yul\":13006:13026   */\n      sub\n        /* \"#utility.yul\":13002:13003   */\n      0x00\n        /* \"#utility.yul\":12991:13000   */\n      dup4\n        /* \"#utility.yul\":12987:13004   */\n      add\n        /* \"#utility.yul\":12980:13027   */\n      mstore\n        /* \"#utility.yul\":13044:13175   */\n      tag_494\n        /* \"#utility.yul\":13170:13174   */\n      dup2\n        /* \"#utility.yul\":13044:13175   */\n      tag_355\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":13036:13175   */\n      swap1\n      pop\n        /* \"#utility.yul\":12763:13182   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13188:13331   */\n    tag_356:\n        /* \"#utility.yul\":13245:13250   */\n      0x00\n        /* \"#utility.yul\":13276:13282   */\n      dup2\n        /* \"#utility.yul\":13270:13283   */\n      mload\n        /* \"#utility.yul\":13261:13283   */\n      swap1\n      pop\n        /* \"#utility.yul\":13292:13325   */\n      tag_496\n        /* \"#utility.yul\":13319:13324   */\n      dup2\n        /* \"#utility.yul\":13292:13325   */\n      tag_333\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":13188:13331   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13337:13688   */\n    tag_196:\n        /* \"#utility.yul\":13407:13413   */\n      0x00\n        /* \"#utility.yul\":13456:13458   */\n      0x20\n        /* \"#utility.yul\":13444:13453   */\n      dup3\n        /* \"#utility.yul\":13435:13442   */\n      dup5\n        /* \"#utility.yul\":13431:13454   */\n      sub\n        /* \"#utility.yul\":13427:13459   */\n      slt\n        /* \"#utility.yul\":13424:13543   */\n      iszero\n      tag_498\n      jumpi\n        /* \"#utility.yul\":13462:13541   */\n      tag_499\n      tag_316\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":13424:13543   */\n    tag_498:\n        /* \"#utility.yul\":13582:13583   */\n      0x00\n        /* \"#utility.yul\":13607:13671   */\n      tag_500\n        /* \"#utility.yul\":13663:13670   */\n      dup5\n        /* \"#utility.yul\":13654:13660   */\n      dup3\n        /* \"#utility.yul\":13643:13652   */\n      dup6\n        /* \"#utility.yul\":13639:13661   */\n      add\n        /* \"#utility.yul\":13607:13671   */\n      tag_356\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":13597:13671   */\n      swap2\n      pop\n        /* \"#utility.yul\":13553:13681   */\n      pop\n        /* \"#utility.yul\":13337:13688   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13694:13859   */\n    tag_357:\n        /* \"#utility.yul\":13834:13851   */\n      0x4e6f7420656e6f75676820676f6c640000000000000000000000000000000000\n        /* \"#utility.yul\":13830:13831   */\n      0x00\n        /* \"#utility.yul\":13822:13828   */\n      dup3\n        /* \"#utility.yul\":13818:13832   */\n      add\n        /* \"#utility.yul\":13811:13852   */\n      mstore\n        /* \"#utility.yul\":13694:13859   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13865:14231   */\n    tag_358:\n        /* \"#utility.yul\":14007:14010   */\n      0x00\n        /* \"#utility.yul\":14028:14095   */\n      tag_503\n        /* \"#utility.yul\":14092:14094   */\n      0x0f\n        /* \"#utility.yul\":14087:14090   */\n      dup4\n        /* \"#utility.yul\":14028:14095   */\n      tag_324\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":14021:14095   */\n      swap2\n      pop\n        /* \"#utility.yul\":14104:14197   */\n      tag_504\n        /* \"#utility.yul\":14193:14196   */\n      dup3\n        /* \"#utility.yul\":14104:14197   */\n      tag_357\n      jump\t// in\n    tag_504:\n        /* \"#utility.yul\":14222:14224   */\n      0x20\n        /* \"#utility.yul\":14217:14220   */\n      dup3\n        /* \"#utility.yul\":14213:14225   */\n      add\n        /* \"#utility.yul\":14206:14225   */\n      swap1\n      pop\n        /* \"#utility.yul\":13865:14231   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14237:14656   */\n    tag_199:\n        /* \"#utility.yul\":14403:14407   */\n      0x00\n        /* \"#utility.yul\":14441:14443   */\n      0x20\n        /* \"#utility.yul\":14430:14439   */\n      dup3\n        /* \"#utility.yul\":14426:14444   */\n      add\n        /* \"#utility.yul\":14418:14444   */\n      swap1\n      pop\n        /* \"#utility.yul\":14490:14499   */\n      dup2\n        /* \"#utility.yul\":14484:14488   */\n      dup2\n        /* \"#utility.yul\":14480:14500   */\n      sub\n        /* \"#utility.yul\":14476:14477   */\n      0x00\n        /* \"#utility.yul\":14465:14474   */\n      dup4\n        /* \"#utility.yul\":14461:14478   */\n      add\n        /* \"#utility.yul\":14454:14501   */\n      mstore\n        /* \"#utility.yul\":14518:14649   */\n      tag_506\n        /* \"#utility.yul\":14644:14648   */\n      dup2\n        /* \"#utility.yul\":14518:14649   */\n      tag_358\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":14510:14649   */\n      swap1\n      pop\n        /* \"#utility.yul\":14237:14656   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14662:14780   */\n    tag_359:\n        /* \"#utility.yul\":14749:14773   */\n      tag_508\n        /* \"#utility.yul\":14767:14772   */\n      dup2\n        /* \"#utility.yul\":14749:14773   */\n      tag_329\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":14744:14747   */\n      dup3\n        /* \"#utility.yul\":14737:14774   */\n      mstore\n        /* \"#utility.yul\":14662:14780   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14786:15008   */\n    tag_244:\n        /* \"#utility.yul\":14879:14883   */\n      0x00\n        /* \"#utility.yul\":14917:14919   */\n      0x20\n        /* \"#utility.yul\":14906:14915   */\n      dup3\n        /* \"#utility.yul\":14902:14920   */\n      add\n        /* \"#utility.yul\":14894:14920   */\n      swap1\n      pop\n        /* \"#utility.yul\":14930:15001   */\n      tag_510\n        /* \"#utility.yul\":14998:14999   */\n      0x00\n        /* \"#utility.yul\":14987:14996   */\n      dup4\n        /* \"#utility.yul\":14983:15000   */\n      add\n        /* \"#utility.yul\":14974:14980   */\n      dup5\n        /* \"#utility.yul\":14930:15001   */\n      tag_359\n      jump\t// in\n    tag_510:\n        /* \"#utility.yul\":14786:15008   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15014:15456   */\n    tag_252:\n        /* \"#utility.yul\":15163:15167   */\n      0x00\n        /* \"#utility.yul\":15201:15203   */\n      0x60\n        /* \"#utility.yul\":15190:15199   */\n      dup3\n        /* \"#utility.yul\":15186:15204   */\n      add\n        /* \"#utility.yul\":15178:15204   */\n      swap1\n      pop\n        /* \"#utility.yul\":15214:15285   */\n      tag_512\n        /* \"#utility.yul\":15282:15283   */\n      0x00\n        /* \"#utility.yul\":15271:15280   */\n      dup4\n        /* \"#utility.yul\":15267:15284   */\n      add\n        /* \"#utility.yul\":15258:15264   */\n      dup7\n        /* \"#utility.yul\":15214:15285   */\n      tag_359\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":15295:15367   */\n      tag_513\n        /* \"#utility.yul\":15363:15365   */\n      0x20\n        /* \"#utility.yul\":15352:15361   */\n      dup4\n        /* \"#utility.yul\":15348:15366   */\n      add\n        /* \"#utility.yul\":15339:15345   */\n      dup6\n        /* \"#utility.yul\":15295:15367   */\n      tag_335\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":15377:15449   */\n      tag_514\n        /* \"#utility.yul\":15445:15447   */\n      0x40\n        /* \"#utility.yul\":15434:15443   */\n      dup4\n        /* \"#utility.yul\":15430:15448   */\n      add\n        /* \"#utility.yul\":15421:15427   */\n      dup5\n        /* \"#utility.yul\":15377:15449   */\n      tag_335\n      jump\t// in\n    tag_514:\n        /* \"#utility.yul\":15014:15456   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15462:15794   */\n    tag_296:\n        /* \"#utility.yul\":15583:15587   */\n      0x00\n        /* \"#utility.yul\":15621:15623   */\n      0x40\n        /* \"#utility.yul\":15610:15619   */\n      dup3\n        /* \"#utility.yul\":15606:15624   */\n      add\n        /* \"#utility.yul\":15598:15624   */\n      swap1\n      pop\n        /* \"#utility.yul\":15634:15705   */\n      tag_516\n        /* \"#utility.yul\":15702:15703   */\n      0x00\n        /* \"#utility.yul\":15691:15700   */\n      dup4\n        /* \"#utility.yul\":15687:15704   */\n      add\n        /* \"#utility.yul\":15678:15684   */\n      dup6\n        /* \"#utility.yul\":15634:15705   */\n      tag_359\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":15715:15787   */\n      tag_517\n        /* \"#utility.yul\":15783:15785   */\n      0x20\n        /* \"#utility.yul\":15772:15781   */\n      dup4\n        /* \"#utility.yul\":15768:15786   */\n      add\n        /* \"#utility.yul\":15759:15765   */\n      dup5\n        /* \"#utility.yul\":15715:15787   */\n      tag_339\n      jump\t// in\n    tag_517:\n        /* \"#utility.yul\":15462:15794   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15800:15980   */\n    tag_360:\n        /* \"#utility.yul\":15848:15925   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15845:15846   */\n      0x00\n        /* \"#utility.yul\":15838:15926   */\n      mstore\n        /* \"#utility.yul\":15945:15949   */\n      0x11\n        /* \"#utility.yul\":15942:15943   */\n      0x04\n        /* \"#utility.yul\":15935:15950   */\n      mstore\n        /* \"#utility.yul\":15969:15973   */\n      0x24\n        /* \"#utility.yul\":15966:15967   */\n      0x00\n        /* \"#utility.yul\":15959:15974   */\n      revert\n        /* \"#utility.yul\":15986:16177   */\n    tag_308:\n        /* \"#utility.yul\":16026:16029   */\n      0x00\n        /* \"#utility.yul\":16045:16065   */\n      tag_520\n        /* \"#utility.yul\":16063:16064   */\n      dup3\n        /* \"#utility.yul\":16045:16065   */\n      tag_332\n      jump\t// in\n    tag_520:\n        /* \"#utility.yul\":16040:16065   */\n      swap2\n      pop\n        /* \"#utility.yul\":16079:16099   */\n      tag_521\n        /* \"#utility.yul\":16097:16098   */\n      dup4\n        /* \"#utility.yul\":16079:16099   */\n      tag_332\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":16074:16099   */\n      swap3\n      pop\n        /* \"#utility.yul\":16122:16123   */\n      dup3\n        /* \"#utility.yul\":16119:16120   */\n      dup3\n        /* \"#utility.yul\":16115:16124   */\n      add\n        /* \"#utility.yul\":16108:16124   */\n      swap1\n      pop\n        /* \"#utility.yul\":16143:16146   */\n      dup1\n        /* \"#utility.yul\":16140:16141   */\n      dup3\n        /* \"#utility.yul\":16137:16147   */\n      gt\n        /* \"#utility.yul\":16134:16170   */\n      iszero\n      tag_522\n      jumpi\n        /* \"#utility.yul\":16150:16168   */\n      tag_523\n      tag_360\n      jump\t// in\n    tag_523:\n        /* \"#utility.yul\":16134:16170   */\n    tag_522:\n        /* \"#utility.yul\":15986:16177   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220a9bedc9257f7682c654ed3c122af6a5bc293ee837f06c504b5928a73e32699fe64736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1440": {
									"entryPoint": null,
									"id": 1440,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_567": {
									"entryPoint": null,
									"id": 567,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_grantRole_256": {
									"entryPoint": 599,
									"id": 256,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_msgSender_1180": {
									"entryPoint": 945,
									"id": 1180,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@hasRole_80": {
									"entryPoint": 845,
									"id": 80,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 1026,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address_fromMemory": {
									"entryPoint": 1046,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_stringliteral_1d4b05e5256c70cb19cbeae4f5dbc68cbf63906eed2b6782a552ca8fc044422e_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1944,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_61dd2a6cf2ead59b09922a19257b57dec215ba2abf4fa7a561c379f2a10b24a5_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2048,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1d4b05e5256c70cb19cbeae4f5dbc68cbf63906eed2b6782a552ca8fc044422e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1978,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_61dd2a6cf2ead59b09922a19257b57dec215ba2abf4fa7a561c379f2a10b24a5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2082,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 1256,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 1108,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 1888,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1544,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 987,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 956,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1382,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1510,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 1400,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1681,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 1274,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1208,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1654,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 1391,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1626,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 1163,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1118,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 1433,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 952,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"shift_left_dynamic": {
									"entryPoint": 1289,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1614,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1486,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"store_literal_in_memory_1d4b05e5256c70cb19cbeae4f5dbc68cbf63906eed2b6782a552ca8fc044422e": {
									"entryPoint": 1904,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_61dd2a6cf2ead59b09922a19257b57dec215ba2abf4fa7a561c379f2a10b24a5": {
									"entryPoint": 2008,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 1301,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 1442,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1004,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 1479,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:8697:12",
										"nodeType": "YulBlock",
										"src": "0:8697:12",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:12",
													"nodeType": "YulBlock",
													"src": "47:35:12",
													"statements": [
														{
															"nativeSrc": "57:19:12",
															"nodeType": "YulAssignment",
															"src": "57:19:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:12",
																		"nodeType": "YulLiteral",
																		"src": "73:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:12"
																},
																"nativeSrc": "67:9:12",
																"nodeType": "YulFunctionCall",
																"src": "67:9:12"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:12"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:12",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:12",
														"nodeType": "YulTypedName",
														"src": "40:6:12",
														"type": ""
													}
												],
												"src": "7:75:12"
											},
											{
												"body": {
													"nativeSrc": "177:28:12",
													"nodeType": "YulBlock",
													"src": "177:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:12",
																		"nodeType": "YulLiteral",
																		"src": "194:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:12",
																		"nodeType": "YulLiteral",
																		"src": "197:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:12"
																},
																"nativeSrc": "187:12:12",
																"nodeType": "YulFunctionCall",
																"src": "187:12:12"
															},
															"nativeSrc": "187:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:12"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:12"
											},
											{
												"body": {
													"nativeSrc": "300:28:12",
													"nodeType": "YulBlock",
													"src": "300:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:12",
																		"nodeType": "YulLiteral",
																		"src": "317:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:12",
																		"nodeType": "YulLiteral",
																		"src": "320:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:12"
																},
																"nativeSrc": "310:12:12",
																"nodeType": "YulFunctionCall",
																"src": "310:12:12"
															},
															"nativeSrc": "310:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:12"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:12"
											},
											{
												"body": {
													"nativeSrc": "379:81:12",
													"nodeType": "YulBlock",
													"src": "379:81:12",
													"statements": [
														{
															"nativeSrc": "389:65:12",
															"nodeType": "YulAssignment",
															"src": "389:65:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:12",
																		"nodeType": "YulLiteral",
																		"src": "411:42:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:12"
																},
																"nativeSrc": "400:54:12",
																"nodeType": "YulFunctionCall",
																"src": "400:54:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:12",
														"nodeType": "YulTypedName",
														"src": "361:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:12",
														"nodeType": "YulTypedName",
														"src": "371:7:12",
														"type": ""
													}
												],
												"src": "334:126:12"
											},
											{
												"body": {
													"nativeSrc": "511:51:12",
													"nodeType": "YulBlock",
													"src": "511:51:12",
													"statements": [
														{
															"nativeSrc": "521:35:12",
															"nodeType": "YulAssignment",
															"src": "521:35:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:12"
																},
																"nativeSrc": "532:24:12",
																"nodeType": "YulFunctionCall",
																"src": "532:24:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:12",
														"nodeType": "YulTypedName",
														"src": "493:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:12",
														"nodeType": "YulTypedName",
														"src": "503:7:12",
														"type": ""
													}
												],
												"src": "466:96:12"
											},
											{
												"body": {
													"nativeSrc": "611:79:12",
													"nodeType": "YulBlock",
													"src": "611:79:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:12",
																"nodeType": "YulBlock",
																"src": "668:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:12",
																					"nodeType": "YulLiteral",
																					"src": "677:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:12",
																					"nodeType": "YulLiteral",
																					"src": "680:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:12"
																			},
																			"nativeSrc": "670:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:12"
																		},
																		"nativeSrc": "670:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:12"
																				},
																				"nativeSrc": "641:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:12"
																		},
																		"nativeSrc": "631:35:12",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:12"
																},
																"nativeSrc": "624:43:12",
																"nodeType": "YulFunctionCall",
																"src": "624:43:12"
															},
															"nativeSrc": "621:63:12",
															"nodeType": "YulIf",
															"src": "621:63:12"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:12",
														"nodeType": "YulTypedName",
														"src": "604:5:12",
														"type": ""
													}
												],
												"src": "568:122:12"
											},
											{
												"body": {
													"nativeSrc": "759:80:12",
													"nodeType": "YulBlock",
													"src": "759:80:12",
													"statements": [
														{
															"nativeSrc": "769:22:12",
															"nodeType": "YulAssignment",
															"src": "769:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:12"
																},
																"nativeSrc": "778:13:12",
																"nodeType": "YulFunctionCall",
																"src": "778:13:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:12",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:12"
																},
																"nativeSrc": "800:33:12",
																"nodeType": "YulFunctionCall",
																"src": "800:33:12"
															},
															"nativeSrc": "800:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:12"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:12",
														"nodeType": "YulTypedName",
														"src": "737:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:12",
														"nodeType": "YulTypedName",
														"src": "745:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:12",
														"nodeType": "YulTypedName",
														"src": "753:5:12",
														"type": ""
													}
												],
												"src": "696:143:12"
											},
											{
												"body": {
													"nativeSrc": "939:413:12",
													"nodeType": "YulBlock",
													"src": "939:413:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "985:83:12",
																"nodeType": "YulBlock",
																"src": "985:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "987:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "987:77:12"
																			},
																			"nativeSrc": "987:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "987:79:12"
																		},
																		"nativeSrc": "987:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "987:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "960:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "960:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "969:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "969:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "956:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "956:3:12"
																		},
																		"nativeSrc": "956:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "956:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "981:2:12",
																		"nodeType": "YulLiteral",
																		"src": "981:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "952:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "952:3:12"
																},
																"nativeSrc": "952:32:12",
																"nodeType": "YulFunctionCall",
																"src": "952:32:12"
															},
															"nativeSrc": "949:119:12",
															"nodeType": "YulIf",
															"src": "949:119:12"
														},
														{
															"nativeSrc": "1078:128:12",
															"nodeType": "YulBlock",
															"src": "1078:128:12",
															"statements": [
																{
																	"nativeSrc": "1093:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1093:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1107:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1107:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1097:6:12",
																			"nodeType": "YulTypedName",
																			"src": "1097:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1122:74:12",
																	"nodeType": "YulAssignment",
																	"src": "1122:74:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1168:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "1168:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1179:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "1179:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1164:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "1164:3:12"
																				},
																				"nativeSrc": "1164:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "1164:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1188:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "1188:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1132:31:12",
																			"nodeType": "YulIdentifier",
																			"src": "1132:31:12"
																		},
																		"nativeSrc": "1132:64:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1132:64:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1122:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "1122:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1216:129:12",
															"nodeType": "YulBlock",
															"src": "1216:129:12",
															"statements": [
																{
																	"nativeSrc": "1231:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1231:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1245:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1245:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1235:6:12",
																			"nodeType": "YulTypedName",
																			"src": "1235:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1261:74:12",
																	"nodeType": "YulAssignment",
																	"src": "1261:74:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1307:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "1307:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1318:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "1318:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1303:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "1303:3:12"
																				},
																				"nativeSrc": "1303:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "1303:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1327:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "1327:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1271:31:12",
																			"nodeType": "YulIdentifier",
																			"src": "1271:31:12"
																		},
																		"nativeSrc": "1271:64:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1271:64:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1261:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "1261:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address_fromMemory",
												"nativeSrc": "845:507:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "901:9:12",
														"nodeType": "YulTypedName",
														"src": "901:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "912:7:12",
														"nodeType": "YulTypedName",
														"src": "912:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "924:6:12",
														"nodeType": "YulTypedName",
														"src": "924:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "932:6:12",
														"nodeType": "YulTypedName",
														"src": "932:6:12",
														"type": ""
													}
												],
												"src": "845:507:12"
											},
											{
												"body": {
													"nativeSrc": "1417:40:12",
													"nodeType": "YulBlock",
													"src": "1417:40:12",
													"statements": [
														{
															"nativeSrc": "1428:22:12",
															"nodeType": "YulAssignment",
															"src": "1428:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1444:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "1444:5:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1438:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "1438:5:12"
																},
																"nativeSrc": "1438:12:12",
																"nodeType": "YulFunctionCall",
																"src": "1438:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1428:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1428:6:12"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1358:99:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1400:5:12",
														"nodeType": "YulTypedName",
														"src": "1400:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1410:6:12",
														"nodeType": "YulTypedName",
														"src": "1410:6:12",
														"type": ""
													}
												],
												"src": "1358:99:12"
											},
											{
												"body": {
													"nativeSrc": "1491:152:12",
													"nodeType": "YulBlock",
													"src": "1491:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1508:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1508:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1511:77:12",
																		"nodeType": "YulLiteral",
																		"src": "1511:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1501:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1501:6:12"
																},
																"nativeSrc": "1501:88:12",
																"nodeType": "YulFunctionCall",
																"src": "1501:88:12"
															},
															"nativeSrc": "1501:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "1501:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1605:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1605:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1608:4:12",
																		"nodeType": "YulLiteral",
																		"src": "1608:4:12",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1598:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1598:6:12"
																},
																"nativeSrc": "1598:15:12",
																"nodeType": "YulFunctionCall",
																"src": "1598:15:12"
															},
															"nativeSrc": "1598:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "1598:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1629:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1629:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1632:4:12",
																		"nodeType": "YulLiteral",
																		"src": "1632:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1622:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1622:6:12"
																},
																"nativeSrc": "1622:15:12",
																"nodeType": "YulFunctionCall",
																"src": "1622:15:12"
															},
															"nativeSrc": "1622:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "1622:15:12"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "1463:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "1463:180:12"
											},
											{
												"body": {
													"nativeSrc": "1677:152:12",
													"nodeType": "YulBlock",
													"src": "1677:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1694:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1694:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1697:77:12",
																		"nodeType": "YulLiteral",
																		"src": "1697:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1687:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1687:6:12"
																},
																"nativeSrc": "1687:88:12",
																"nodeType": "YulFunctionCall",
																"src": "1687:88:12"
															},
															"nativeSrc": "1687:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "1687:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1791:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1791:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1794:4:12",
																		"nodeType": "YulLiteral",
																		"src": "1794:4:12",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1784:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1784:6:12"
																},
																"nativeSrc": "1784:15:12",
																"nodeType": "YulFunctionCall",
																"src": "1784:15:12"
															},
															"nativeSrc": "1784:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "1784:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1815:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1815:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1818:4:12",
																		"nodeType": "YulLiteral",
																		"src": "1818:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1808:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1808:6:12"
																},
																"nativeSrc": "1808:15:12",
																"nodeType": "YulFunctionCall",
																"src": "1808:15:12"
															},
															"nativeSrc": "1808:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "1808:15:12"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "1649:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "1649:180:12"
											},
											{
												"body": {
													"nativeSrc": "1886:269:12",
													"nodeType": "YulBlock",
													"src": "1886:269:12",
													"statements": [
														{
															"nativeSrc": "1896:22:12",
															"nodeType": "YulAssignment",
															"src": "1896:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1910:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "1910:4:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1916:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1916:1:12",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "1906:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1906:3:12"
																},
																"nativeSrc": "1906:12:12",
																"nodeType": "YulFunctionCall",
																"src": "1906:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1896:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1896:6:12"
																}
															]
														},
														{
															"nativeSrc": "1927:38:12",
															"nodeType": "YulVariableDeclaration",
															"src": "1927:38:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1957:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "1957:4:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1963:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1963:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1953:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1953:3:12"
																},
																"nativeSrc": "1953:12:12",
																"nodeType": "YulFunctionCall",
																"src": "1953:12:12"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "1931:18:12",
																	"nodeType": "YulTypedName",
																	"src": "1931:18:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2004:51:12",
																"nodeType": "YulBlock",
																"src": "2004:51:12",
																"statements": [
																	{
																		"nativeSrc": "2018:27:12",
																		"nodeType": "YulAssignment",
																		"src": "2018:27:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "2032:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "2032:6:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2040:4:12",
																					"nodeType": "YulLiteral",
																					"src": "2040:4:12",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "2028:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "2028:3:12"
																			},
																			"nativeSrc": "2028:17:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2028:17:12"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "2018:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "2018:6:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1984:18:12",
																		"nodeType": "YulIdentifier",
																		"src": "1984:18:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1977:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1977:6:12"
																},
																"nativeSrc": "1977:26:12",
																"nodeType": "YulFunctionCall",
																"src": "1977:26:12"
															},
															"nativeSrc": "1974:81:12",
															"nodeType": "YulIf",
															"src": "1974:81:12"
														},
														{
															"body": {
																"nativeSrc": "2107:42:12",
																"nodeType": "YulBlock",
																"src": "2107:42:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "2121:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "2121:16:12"
																			},
																			"nativeSrc": "2121:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2121:18:12"
																		},
																		"nativeSrc": "2121:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "2121:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2071:18:12",
																		"nodeType": "YulIdentifier",
																		"src": "2071:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2094:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "2094:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2102:2:12",
																				"nodeType": "YulLiteral",
																				"src": "2102:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "2091:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "2091:2:12"
																		},
																		"nativeSrc": "2091:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2091:14:12"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "2068:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "2068:2:12"
																},
																"nativeSrc": "2068:38:12",
																"nodeType": "YulFunctionCall",
																"src": "2068:38:12"
															},
															"nativeSrc": "2065:84:12",
															"nodeType": "YulIf",
															"src": "2065:84:12"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "1835:320:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1870:4:12",
														"nodeType": "YulTypedName",
														"src": "1870:4:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1879:6:12",
														"nodeType": "YulTypedName",
														"src": "1879:6:12",
														"type": ""
													}
												],
												"src": "1835:320:12"
											},
											{
												"body": {
													"nativeSrc": "2215:87:12",
													"nodeType": "YulBlock",
													"src": "2215:87:12",
													"statements": [
														{
															"nativeSrc": "2225:11:12",
															"nodeType": "YulAssignment",
															"src": "2225:11:12",
															"value": {
																"name": "ptr",
																"nativeSrc": "2233:3:12",
																"nodeType": "YulIdentifier",
																"src": "2233:3:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2225:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "2225:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2253:1:12",
																		"nodeType": "YulLiteral",
																		"src": "2253:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "2256:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "2256:3:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2246:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2246:6:12"
																},
																"nativeSrc": "2246:14:12",
																"nodeType": "YulFunctionCall",
																"src": "2246:14:12"
															},
															"nativeSrc": "2246:14:12",
															"nodeType": "YulExpressionStatement",
															"src": "2246:14:12"
														},
														{
															"nativeSrc": "2269:26:12",
															"nodeType": "YulAssignment",
															"src": "2269:26:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2287:1:12",
																		"nodeType": "YulLiteral",
																		"src": "2287:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2290:4:12",
																		"nodeType": "YulLiteral",
																		"src": "2290:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "2277:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "2277:9:12"
																},
																"nativeSrc": "2277:18:12",
																"nodeType": "YulFunctionCall",
																"src": "2277:18:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2269:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "2269:4:12"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "2161:141:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "2202:3:12",
														"nodeType": "YulTypedName",
														"src": "2202:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "2210:4:12",
														"nodeType": "YulTypedName",
														"src": "2210:4:12",
														"type": ""
													}
												],
												"src": "2161:141:12"
											},
											{
												"body": {
													"nativeSrc": "2352:49:12",
													"nodeType": "YulBlock",
													"src": "2352:49:12",
													"statements": [
														{
															"nativeSrc": "2362:33:12",
															"nodeType": "YulAssignment",
															"src": "2362:33:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2380:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "2380:5:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2387:2:12",
																				"nodeType": "YulLiteral",
																				"src": "2387:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2376:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2376:3:12"
																		},
																		"nativeSrc": "2376:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2376:14:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2392:2:12",
																		"nodeType": "YulLiteral",
																		"src": "2392:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "2372:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2372:3:12"
																},
																"nativeSrc": "2372:23:12",
																"nodeType": "YulFunctionCall",
																"src": "2372:23:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2362:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2362:6:12"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "2308:93:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2335:5:12",
														"nodeType": "YulTypedName",
														"src": "2335:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2345:6:12",
														"nodeType": "YulTypedName",
														"src": "2345:6:12",
														"type": ""
													}
												],
												"src": "2308:93:12"
											},
											{
												"body": {
													"nativeSrc": "2460:54:12",
													"nodeType": "YulBlock",
													"src": "2460:54:12",
													"statements": [
														{
															"nativeSrc": "2470:37:12",
															"nodeType": "YulAssignment",
															"src": "2470:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "2495:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "2495:4:12"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "2501:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "2501:5:12"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "2491:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2491:3:12"
																},
																"nativeSrc": "2491:16:12",
																"nodeType": "YulFunctionCall",
																"src": "2491:16:12"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "2470:8:12",
																	"nodeType": "YulIdentifier",
																	"src": "2470:8:12"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "2407:107:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "2435:4:12",
														"nodeType": "YulTypedName",
														"src": "2435:4:12",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "2441:5:12",
														"nodeType": "YulTypedName",
														"src": "2441:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "2451:8:12",
														"nodeType": "YulTypedName",
														"src": "2451:8:12",
														"type": ""
													}
												],
												"src": "2407:107:12"
											},
											{
												"body": {
													"nativeSrc": "2596:317:12",
													"nodeType": "YulBlock",
													"src": "2596:317:12",
													"statements": [
														{
															"nativeSrc": "2606:35:12",
															"nodeType": "YulVariableDeclaration",
															"src": "2606:35:12",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "2627:10:12",
																		"nodeType": "YulIdentifier",
																		"src": "2627:10:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2639:1:12",
																		"nodeType": "YulLiteral",
																		"src": "2639:1:12",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "2623:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2623:3:12"
																},
																"nativeSrc": "2623:18:12",
																"nodeType": "YulFunctionCall",
																"src": "2623:18:12"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "2610:9:12",
																	"nodeType": "YulTypedName",
																	"src": "2610:9:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2650:109:12",
															"nodeType": "YulVariableDeclaration",
															"src": "2650:109:12",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "2681:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "2681:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2692:66:12",
																		"nodeType": "YulLiteral",
																		"src": "2692:66:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "2662:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "2662:18:12"
																},
																"nativeSrc": "2662:97:12",
																"nodeType": "YulFunctionCall",
																"src": "2662:97:12"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "2654:4:12",
																	"nodeType": "YulTypedName",
																	"src": "2654:4:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2768:51:12",
															"nodeType": "YulAssignment",
															"src": "2768:51:12",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "2799:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "2799:9:12"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "2810:8:12",
																		"nodeType": "YulIdentifier",
																		"src": "2810:8:12"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "2780:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "2780:18:12"
																},
																"nativeSrc": "2780:39:12",
																"nodeType": "YulFunctionCall",
																"src": "2780:39:12"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "2768:8:12",
																	"nodeType": "YulIdentifier",
																	"src": "2768:8:12"
																}
															]
														},
														{
															"nativeSrc": "2828:30:12",
															"nodeType": "YulAssignment",
															"src": "2828:30:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2841:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "2841:5:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "2852:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "2852:4:12"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2848:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2848:3:12"
																		},
																		"nativeSrc": "2848:9:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2848:9:12"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2837:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2837:3:12"
																},
																"nativeSrc": "2837:21:12",
																"nodeType": "YulFunctionCall",
																"src": "2837:21:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2828:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "2828:5:12"
																}
															]
														},
														{
															"nativeSrc": "2867:40:12",
															"nodeType": "YulAssignment",
															"src": "2867:40:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2880:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "2880:5:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "2891:8:12",
																				"nodeType": "YulIdentifier",
																				"src": "2891:8:12"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "2901:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "2901:4:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2887:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2887:3:12"
																		},
																		"nativeSrc": "2887:19:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2887:19:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "2877:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "2877:2:12"
																},
																"nativeSrc": "2877:30:12",
																"nodeType": "YulFunctionCall",
																"src": "2877:30:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2867:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2867:6:12"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "2520:393:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2557:5:12",
														"nodeType": "YulTypedName",
														"src": "2557:5:12",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "2564:10:12",
														"nodeType": "YulTypedName",
														"src": "2564:10:12",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "2576:8:12",
														"nodeType": "YulTypedName",
														"src": "2576:8:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2589:6:12",
														"nodeType": "YulTypedName",
														"src": "2589:6:12",
														"type": ""
													}
												],
												"src": "2520:393:12"
											},
											{
												"body": {
													"nativeSrc": "2964:32:12",
													"nodeType": "YulBlock",
													"src": "2964:32:12",
													"statements": [
														{
															"nativeSrc": "2974:16:12",
															"nodeType": "YulAssignment",
															"src": "2974:16:12",
															"value": {
																"name": "value",
																"nativeSrc": "2985:5:12",
																"nodeType": "YulIdentifier",
																"src": "2985:5:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2974:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "2974:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2919:77:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2946:5:12",
														"nodeType": "YulTypedName",
														"src": "2946:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2956:7:12",
														"nodeType": "YulTypedName",
														"src": "2956:7:12",
														"type": ""
													}
												],
												"src": "2919:77:12"
											},
											{
												"body": {
													"nativeSrc": "3034:28:12",
													"nodeType": "YulBlock",
													"src": "3034:28:12",
													"statements": [
														{
															"nativeSrc": "3044:12:12",
															"nodeType": "YulAssignment",
															"src": "3044:12:12",
															"value": {
																"name": "value",
																"nativeSrc": "3051:5:12",
																"nodeType": "YulIdentifier",
																"src": "3051:5:12"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3044:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3044:3:12"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "3002:60:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3020:5:12",
														"nodeType": "YulTypedName",
														"src": "3020:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3030:3:12",
														"nodeType": "YulTypedName",
														"src": "3030:3:12",
														"type": ""
													}
												],
												"src": "3002:60:12"
											},
											{
												"body": {
													"nativeSrc": "3128:82:12",
													"nodeType": "YulBlock",
													"src": "3128:82:12",
													"statements": [
														{
															"nativeSrc": "3138:66:12",
															"nodeType": "YulAssignment",
															"src": "3138:66:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3196:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "3196:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3178:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "3178:17:12"
																				},
																				"nativeSrc": "3178:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3178:24:12"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "3169:8:12",
																			"nodeType": "YulIdentifier",
																			"src": "3169:8:12"
																		},
																		"nativeSrc": "3169:34:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3169:34:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "3151:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "3151:17:12"
																},
																"nativeSrc": "3151:53:12",
																"nodeType": "YulFunctionCall",
																"src": "3151:53:12"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "3138:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "3138:9:12"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "3068:142:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3108:5:12",
														"nodeType": "YulTypedName",
														"src": "3108:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "3118:9:12",
														"nodeType": "YulTypedName",
														"src": "3118:9:12",
														"type": ""
													}
												],
												"src": "3068:142:12"
											},
											{
												"body": {
													"nativeSrc": "3263:28:12",
													"nodeType": "YulBlock",
													"src": "3263:28:12",
													"statements": [
														{
															"nativeSrc": "3273:12:12",
															"nodeType": "YulAssignment",
															"src": "3273:12:12",
															"value": {
																"name": "value",
																"nativeSrc": "3280:5:12",
																"nodeType": "YulIdentifier",
																"src": "3280:5:12"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3273:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3273:3:12"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "3216:75:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3249:5:12",
														"nodeType": "YulTypedName",
														"src": "3249:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3259:3:12",
														"nodeType": "YulTypedName",
														"src": "3259:3:12",
														"type": ""
													}
												],
												"src": "3216:75:12"
											},
											{
												"body": {
													"nativeSrc": "3373:193:12",
													"nodeType": "YulBlock",
													"src": "3373:193:12",
													"statements": [
														{
															"nativeSrc": "3383:63:12",
															"nodeType": "YulVariableDeclaration",
															"src": "3383:63:12",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "3438:7:12",
																		"nodeType": "YulIdentifier",
																		"src": "3438:7:12"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "3407:30:12",
																	"nodeType": "YulIdentifier",
																	"src": "3407:30:12"
																},
																"nativeSrc": "3407:39:12",
																"nodeType": "YulFunctionCall",
																"src": "3407:39:12"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "3387:16:12",
																	"nodeType": "YulTypedName",
																	"src": "3387:16:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3462:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "3462:4:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "3502:4:12",
																						"nodeType": "YulIdentifier",
																						"src": "3502:4:12"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "3496:5:12",
																					"nodeType": "YulIdentifier",
																					"src": "3496:5:12"
																				},
																				"nativeSrc": "3496:11:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3496:11:12"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "3509:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "3509:6:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "3541:16:12",
																						"nodeType": "YulIdentifier",
																						"src": "3541:16:12"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "3517:23:12",
																					"nodeType": "YulIdentifier",
																					"src": "3517:23:12"
																				},
																				"nativeSrc": "3517:41:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3517:41:12"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "3468:27:12",
																			"nodeType": "YulIdentifier",
																			"src": "3468:27:12"
																		},
																		"nativeSrc": "3468:91:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3468:91:12"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "3455:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3455:6:12"
																},
																"nativeSrc": "3455:105:12",
																"nodeType": "YulFunctionCall",
																"src": "3455:105:12"
															},
															"nativeSrc": "3455:105:12",
															"nodeType": "YulExpressionStatement",
															"src": "3455:105:12"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "3297:269:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3350:4:12",
														"nodeType": "YulTypedName",
														"src": "3350:4:12",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "3356:6:12",
														"nodeType": "YulTypedName",
														"src": "3356:6:12",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "3364:7:12",
														"nodeType": "YulTypedName",
														"src": "3364:7:12",
														"type": ""
													}
												],
												"src": "3297:269:12"
											},
											{
												"body": {
													"nativeSrc": "3621:24:12",
													"nodeType": "YulBlock",
													"src": "3621:24:12",
													"statements": [
														{
															"nativeSrc": "3631:8:12",
															"nodeType": "YulAssignment",
															"src": "3631:8:12",
															"value": {
																"kind": "number",
																"nativeSrc": "3638:1:12",
																"nodeType": "YulLiteral",
																"src": "3638:1:12",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3631:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3631:3:12"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "3572:73:12",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3617:3:12",
														"nodeType": "YulTypedName",
														"src": "3617:3:12",
														"type": ""
													}
												],
												"src": "3572:73:12"
											},
											{
												"body": {
													"nativeSrc": "3704:136:12",
													"nodeType": "YulBlock",
													"src": "3704:136:12",
													"statements": [
														{
															"nativeSrc": "3714:46:12",
															"nodeType": "YulVariableDeclaration",
															"src": "3714:46:12",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "3728:30:12",
																	"nodeType": "YulIdentifier",
																	"src": "3728:30:12"
																},
																"nativeSrc": "3728:32:12",
																"nodeType": "YulFunctionCall",
																"src": "3728:32:12"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "3718:6:12",
																	"nodeType": "YulTypedName",
																	"src": "3718:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3813:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "3813:4:12"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "3819:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "3819:6:12"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "3827:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "3827:6:12"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "3769:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "3769:43:12"
																},
																"nativeSrc": "3769:65:12",
																"nodeType": "YulFunctionCall",
																"src": "3769:65:12"
															},
															"nativeSrc": "3769:65:12",
															"nodeType": "YulExpressionStatement",
															"src": "3769:65:12"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "3651:189:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3690:4:12",
														"nodeType": "YulTypedName",
														"src": "3690:4:12",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "3696:6:12",
														"nodeType": "YulTypedName",
														"src": "3696:6:12",
														"type": ""
													}
												],
												"src": "3651:189:12"
											},
											{
												"body": {
													"nativeSrc": "3896:136:12",
													"nodeType": "YulBlock",
													"src": "3896:136:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "3963:63:12",
																"nodeType": "YulBlock",
																"src": "3963:63:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "4007:5:12",
																					"nodeType": "YulIdentifier",
																					"src": "4007:5:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4014:1:12",
																					"nodeType": "YulLiteral",
																					"src": "4014:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "3977:29:12",
																				"nodeType": "YulIdentifier",
																				"src": "3977:29:12"
																			},
																			"nativeSrc": "3977:39:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3977:39:12"
																		},
																		"nativeSrc": "3977:39:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "3977:39:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "3916:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "3916:5:12"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "3923:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "3923:3:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "3913:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "3913:2:12"
																},
																"nativeSrc": "3913:14:12",
																"nodeType": "YulFunctionCall",
																"src": "3913:14:12"
															},
															"nativeSrc": "3906:120:12",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "3928:26:12",
																"nodeType": "YulBlock",
																"src": "3928:26:12",
																"statements": [
																	{
																		"nativeSrc": "3930:22:12",
																		"nodeType": "YulAssignment",
																		"src": "3930:22:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "3943:5:12",
																					"nodeType": "YulIdentifier",
																					"src": "3943:5:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3950:1:12",
																					"nodeType": "YulLiteral",
																					"src": "3950:1:12",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3939:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "3939:3:12"
																			},
																			"nativeSrc": "3939:13:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3939:13:12"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "3930:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "3930:5:12"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "3910:2:12",
																"nodeType": "YulBlock",
																"src": "3910:2:12",
																"statements": []
															},
															"src": "3906:120:12"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "3846:186:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "3884:5:12",
														"nodeType": "YulTypedName",
														"src": "3884:5:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3891:3:12",
														"nodeType": "YulTypedName",
														"src": "3891:3:12",
														"type": ""
													}
												],
												"src": "3846:186:12"
											},
											{
												"body": {
													"nativeSrc": "4117:464:12",
													"nodeType": "YulBlock",
													"src": "4117:464:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "4143:431:12",
																"nodeType": "YulBlock",
																"src": "4143:431:12",
																"statements": [
																	{
																		"nativeSrc": "4157:54:12",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4157:54:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "4205:5:12",
																					"nodeType": "YulIdentifier",
																					"src": "4205:5:12"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "4173:31:12",
																				"nodeType": "YulIdentifier",
																				"src": "4173:31:12"
																			},
																			"nativeSrc": "4173:38:12",
																			"nodeType": "YulFunctionCall",
																			"src": "4173:38:12"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "4161:8:12",
																				"nodeType": "YulTypedName",
																				"src": "4161:8:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "4224:63:12",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4224:63:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "4247:8:12",
																					"nodeType": "YulIdentifier",
																					"src": "4247:8:12"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "4275:10:12",
																							"nodeType": "YulIdentifier",
																							"src": "4275:10:12"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "4257:17:12",
																						"nodeType": "YulIdentifier",
																						"src": "4257:17:12"
																					},
																					"nativeSrc": "4257:29:12",
																					"nodeType": "YulFunctionCall",
																					"src": "4257:29:12"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4243:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "4243:3:12"
																			},
																			"nativeSrc": "4243:44:12",
																			"nodeType": "YulFunctionCall",
																			"src": "4243:44:12"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "4228:11:12",
																				"nodeType": "YulTypedName",
																				"src": "4228:11:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "4444:27:12",
																			"nodeType": "YulBlock",
																			"src": "4444:27:12",
																			"statements": [
																				{
																					"nativeSrc": "4446:23:12",
																					"nodeType": "YulAssignment",
																					"src": "4446:23:12",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "4461:8:12",
																						"nodeType": "YulIdentifier",
																						"src": "4461:8:12"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "4446:11:12",
																							"nodeType": "YulIdentifier",
																							"src": "4446:11:12"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "4428:10:12",
																					"nodeType": "YulIdentifier",
																					"src": "4428:10:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4440:2:12",
																					"nodeType": "YulLiteral",
																					"src": "4440:2:12",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "4425:2:12",
																				"nodeType": "YulIdentifier",
																				"src": "4425:2:12"
																			},
																			"nativeSrc": "4425:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "4425:18:12"
																		},
																		"nativeSrc": "4422:49:12",
																		"nodeType": "YulIf",
																		"src": "4422:49:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "4513:11:12",
																					"nodeType": "YulIdentifier",
																					"src": "4513:11:12"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "4530:8:12",
																							"nodeType": "YulIdentifier",
																							"src": "4530:8:12"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "4558:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "4558:3:12"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "4540:17:12",
																								"nodeType": "YulIdentifier",
																								"src": "4540:17:12"
																							},
																							"nativeSrc": "4540:22:12",
																							"nodeType": "YulFunctionCall",
																							"src": "4540:22:12"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "4526:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "4526:3:12"
																					},
																					"nativeSrc": "4526:37:12",
																					"nodeType": "YulFunctionCall",
																					"src": "4526:37:12"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "4484:28:12",
																				"nodeType": "YulIdentifier",
																				"src": "4484:28:12"
																			},
																			"nativeSrc": "4484:80:12",
																			"nodeType": "YulFunctionCall",
																			"src": "4484:80:12"
																		},
																		"nativeSrc": "4484:80:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "4484:80:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "4134:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "4134:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4139:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4139:2:12",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4131:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "4131:2:12"
																},
																"nativeSrc": "4131:11:12",
																"nodeType": "YulFunctionCall",
																"src": "4131:11:12"
															},
															"nativeSrc": "4128:446:12",
															"nodeType": "YulIf",
															"src": "4128:446:12"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "4038:543:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "4093:5:12",
														"nodeType": "YulTypedName",
														"src": "4093:5:12",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "4100:3:12",
														"nodeType": "YulTypedName",
														"src": "4100:3:12",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "4105:10:12",
														"nodeType": "YulTypedName",
														"src": "4105:10:12",
														"type": ""
													}
												],
												"src": "4038:543:12"
											},
											{
												"body": {
													"nativeSrc": "4650:54:12",
													"nodeType": "YulBlock",
													"src": "4650:54:12",
													"statements": [
														{
															"nativeSrc": "4660:37:12",
															"nodeType": "YulAssignment",
															"src": "4660:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "4685:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "4685:4:12"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "4691:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "4691:5:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "4681:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4681:3:12"
																},
																"nativeSrc": "4681:16:12",
																"nodeType": "YulFunctionCall",
																"src": "4681:16:12"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "4660:8:12",
																	"nodeType": "YulIdentifier",
																	"src": "4660:8:12"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "4587:117:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "4625:4:12",
														"nodeType": "YulTypedName",
														"src": "4625:4:12",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "4631:5:12",
														"nodeType": "YulTypedName",
														"src": "4631:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "4641:8:12",
														"nodeType": "YulTypedName",
														"src": "4641:8:12",
														"type": ""
													}
												],
												"src": "4587:117:12"
											},
											{
												"body": {
													"nativeSrc": "4761:118:12",
													"nodeType": "YulBlock",
													"src": "4761:118:12",
													"statements": [
														{
															"nativeSrc": "4771:68:12",
															"nodeType": "YulVariableDeclaration",
															"src": "4771:68:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4820:1:12",
																						"nodeType": "YulLiteral",
																						"src": "4820:1:12",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "4823:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "4823:5:12"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "4816:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "4816:3:12"
																				},
																				"nativeSrc": "4816:13:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4816:13:12"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4835:1:12",
																						"nodeType": "YulLiteral",
																						"src": "4835:1:12",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4831:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "4831:3:12"
																				},
																				"nativeSrc": "4831:6:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4831:6:12"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "4787:28:12",
																			"nodeType": "YulIdentifier",
																			"src": "4787:28:12"
																		},
																		"nativeSrc": "4787:51:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4787:51:12"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "4783:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4783:3:12"
																},
																"nativeSrc": "4783:56:12",
																"nodeType": "YulFunctionCall",
																"src": "4783:56:12"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "4775:4:12",
																	"nodeType": "YulTypedName",
																	"src": "4775:4:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4848:25:12",
															"nodeType": "YulAssignment",
															"src": "4848:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4862:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "4862:4:12"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "4868:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "4868:4:12"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4858:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4858:3:12"
																},
																"nativeSrc": "4858:15:12",
																"nodeType": "YulFunctionCall",
																"src": "4858:15:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4848:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4848:6:12"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "4710:169:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4738:4:12",
														"nodeType": "YulTypedName",
														"src": "4738:4:12",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "4744:5:12",
														"nodeType": "YulTypedName",
														"src": "4744:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4754:6:12",
														"nodeType": "YulTypedName",
														"src": "4754:6:12",
														"type": ""
													}
												],
												"src": "4710:169:12"
											},
											{
												"body": {
													"nativeSrc": "4965:214:12",
													"nodeType": "YulBlock",
													"src": "4965:214:12",
													"statements": [
														{
															"nativeSrc": "5098:37:12",
															"nodeType": "YulAssignment",
															"src": "5098:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5125:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "5125:4:12"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "5131:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "5131:3:12"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "5106:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "5106:18:12"
																},
																"nativeSrc": "5106:29:12",
																"nodeType": "YulFunctionCall",
																"src": "5106:29:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "5098:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "5098:4:12"
																}
															]
														},
														{
															"nativeSrc": "5144:29:12",
															"nodeType": "YulAssignment",
															"src": "5144:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5155:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "5155:4:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5165:1:12",
																				"nodeType": "YulLiteral",
																				"src": "5165:1:12",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "5168:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "5168:3:12"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "5161:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5161:3:12"
																		},
																		"nativeSrc": "5161:11:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5161:11:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5152:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "5152:2:12"
																},
																"nativeSrc": "5152:21:12",
																"nodeType": "YulFunctionCall",
																"src": "5152:21:12"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "5144:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "5144:4:12"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "4884:295:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4946:4:12",
														"nodeType": "YulTypedName",
														"src": "4946:4:12",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "4952:3:12",
														"nodeType": "YulTypedName",
														"src": "4952:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "4960:4:12",
														"nodeType": "YulTypedName",
														"src": "4960:4:12",
														"type": ""
													}
												],
												"src": "4884:295:12"
											},
											{
												"body": {
													"nativeSrc": "5276:1303:12",
													"nodeType": "YulBlock",
													"src": "5276:1303:12",
													"statements": [
														{
															"nativeSrc": "5287:51:12",
															"nodeType": "YulVariableDeclaration",
															"src": "5287:51:12",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "5334:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "5334:3:12"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "5301:32:12",
																	"nodeType": "YulIdentifier",
																	"src": "5301:32:12"
																},
																"nativeSrc": "5301:37:12",
																"nodeType": "YulFunctionCall",
																"src": "5301:37:12"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "5291:6:12",
																	"nodeType": "YulTypedName",
																	"src": "5291:6:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5423:22:12",
																"nodeType": "YulBlock",
																"src": "5423:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "5425:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "5425:16:12"
																			},
																			"nativeSrc": "5425:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "5425:18:12"
																		},
																		"nativeSrc": "5425:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "5425:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5395:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "5395:6:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5403:18:12",
																		"nodeType": "YulLiteral",
																		"src": "5403:18:12",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5392:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "5392:2:12"
																},
																"nativeSrc": "5392:30:12",
																"nodeType": "YulFunctionCall",
																"src": "5392:30:12"
															},
															"nativeSrc": "5389:56:12",
															"nodeType": "YulIf",
															"src": "5389:56:12"
														},
														{
															"nativeSrc": "5455:52:12",
															"nodeType": "YulVariableDeclaration",
															"src": "5455:52:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "5501:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "5501:4:12"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "5495:5:12",
																			"nodeType": "YulIdentifier",
																			"src": "5495:5:12"
																		},
																		"nativeSrc": "5495:11:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5495:11:12"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "5469:25:12",
																	"nodeType": "YulIdentifier",
																	"src": "5469:25:12"
																},
																"nativeSrc": "5469:38:12",
																"nodeType": "YulFunctionCall",
																"src": "5469:38:12"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "5459:6:12",
																	"nodeType": "YulTypedName",
																	"src": "5459:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "5600:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "5600:4:12"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "5606:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "5606:6:12"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "5614:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "5614:6:12"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "5554:45:12",
																	"nodeType": "YulIdentifier",
																	"src": "5554:45:12"
																},
																"nativeSrc": "5554:67:12",
																"nodeType": "YulFunctionCall",
																"src": "5554:67:12"
															},
															"nativeSrc": "5554:67:12",
															"nodeType": "YulExpressionStatement",
															"src": "5554:67:12"
														},
														{
															"nativeSrc": "5631:18:12",
															"nodeType": "YulVariableDeclaration",
															"src": "5631:18:12",
															"value": {
																"kind": "number",
																"nativeSrc": "5648:1:12",
																"nodeType": "YulLiteral",
																"src": "5648:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "5635:9:12",
																	"nodeType": "YulTypedName",
																	"src": "5635:9:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5659:17:12",
															"nodeType": "YulAssignment",
															"src": "5659:17:12",
															"value": {
																"kind": "number",
																"nativeSrc": "5672:4:12",
																"nodeType": "YulLiteral",
																"src": "5672:4:12",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "5659:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "5659:9:12"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "5723:611:12",
																		"nodeType": "YulBlock",
																		"src": "5723:611:12",
																		"statements": [
																			{
																				"nativeSrc": "5737:37:12",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5737:37:12",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "5756:6:12",
																							"nodeType": "YulIdentifier",
																							"src": "5756:6:12"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "5768:4:12",
																									"nodeType": "YulLiteral",
																									"src": "5768:4:12",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "5764:3:12",
																								"nodeType": "YulIdentifier",
																								"src": "5764:3:12"
																							},
																							"nativeSrc": "5764:9:12",
																							"nodeType": "YulFunctionCall",
																							"src": "5764:9:12"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "5752:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "5752:3:12"
																					},
																					"nativeSrc": "5752:22:12",
																					"nodeType": "YulFunctionCall",
																					"src": "5752:22:12"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "5741:7:12",
																						"nodeType": "YulTypedName",
																						"src": "5741:7:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "5788:51:12",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5788:51:12",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5834:4:12",
																							"nodeType": "YulIdentifier",
																							"src": "5834:4:12"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "5802:31:12",
																						"nodeType": "YulIdentifier",
																						"src": "5802:31:12"
																					},
																					"nativeSrc": "5802:37:12",
																					"nodeType": "YulFunctionCall",
																					"src": "5802:37:12"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "5792:6:12",
																						"nodeType": "YulTypedName",
																						"src": "5792:6:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "5852:10:12",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5852:10:12",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5861:1:12",
																					"nodeType": "YulLiteral",
																					"src": "5861:1:12",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "5856:1:12",
																						"nodeType": "YulTypedName",
																						"src": "5856:1:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "5920:163:12",
																					"nodeType": "YulBlock",
																					"src": "5920:163:12",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "5945:6:12",
																										"nodeType": "YulIdentifier",
																										"src": "5945:6:12"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "5963:3:12",
																														"nodeType": "YulIdentifier",
																														"src": "5963:3:12"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "5968:9:12",
																														"nodeType": "YulIdentifier",
																														"src": "5968:9:12"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "5959:3:12",
																													"nodeType": "YulIdentifier",
																													"src": "5959:3:12"
																												},
																												"nativeSrc": "5959:19:12",
																												"nodeType": "YulFunctionCall",
																												"src": "5959:19:12"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "5953:5:12",
																											"nodeType": "YulIdentifier",
																											"src": "5953:5:12"
																										},
																										"nativeSrc": "5953:26:12",
																										"nodeType": "YulFunctionCall",
																										"src": "5953:26:12"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "5938:6:12",
																									"nodeType": "YulIdentifier",
																									"src": "5938:6:12"
																								},
																								"nativeSrc": "5938:42:12",
																								"nodeType": "YulFunctionCall",
																								"src": "5938:42:12"
																							},
																							"nativeSrc": "5938:42:12",
																							"nodeType": "YulExpressionStatement",
																							"src": "5938:42:12"
																						},
																						{
																							"nativeSrc": "5997:24:12",
																							"nodeType": "YulAssignment",
																							"src": "5997:24:12",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "6011:6:12",
																										"nodeType": "YulIdentifier",
																										"src": "6011:6:12"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "6019:1:12",
																										"nodeType": "YulLiteral",
																										"src": "6019:1:12",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "6007:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "6007:3:12"
																								},
																								"nativeSrc": "6007:14:12",
																								"nodeType": "YulFunctionCall",
																								"src": "6007:14:12"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "5997:6:12",
																									"nodeType": "YulIdentifier",
																									"src": "5997:6:12"
																								}
																							]
																						},
																						{
																							"nativeSrc": "6038:31:12",
																							"nodeType": "YulAssignment",
																							"src": "6038:31:12",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "6055:9:12",
																										"nodeType": "YulIdentifier",
																										"src": "6055:9:12"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "6066:2:12",
																										"nodeType": "YulLiteral",
																										"src": "6066:2:12",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "6051:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "6051:3:12"
																								},
																								"nativeSrc": "6051:18:12",
																								"nodeType": "YulFunctionCall",
																								"src": "6051:18:12"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "6038:9:12",
																									"nodeType": "YulIdentifier",
																									"src": "6038:9:12"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "5886:1:12",
																							"nodeType": "YulIdentifier",
																							"src": "5886:1:12"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "5889:7:12",
																							"nodeType": "YulIdentifier",
																							"src": "5889:7:12"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "5883:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "5883:2:12"
																					},
																					"nativeSrc": "5883:14:12",
																					"nodeType": "YulFunctionCall",
																					"src": "5883:14:12"
																				},
																				"nativeSrc": "5875:208:12",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "5898:21:12",
																					"nodeType": "YulBlock",
																					"src": "5898:21:12",
																					"statements": [
																						{
																							"nativeSrc": "5900:17:12",
																							"nodeType": "YulAssignment",
																							"src": "5900:17:12",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "5909:1:12",
																										"nodeType": "YulIdentifier",
																										"src": "5909:1:12"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5912:4:12",
																										"nodeType": "YulLiteral",
																										"src": "5912:4:12",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5905:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "5905:3:12"
																								},
																								"nativeSrc": "5905:12:12",
																								"nodeType": "YulFunctionCall",
																								"src": "5905:12:12"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "5900:1:12",
																									"nodeType": "YulIdentifier",
																									"src": "5900:1:12"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "5879:3:12",
																					"nodeType": "YulBlock",
																					"src": "5879:3:12",
																					"statements": []
																				},
																				"src": "5875:208:12"
																			},
																			{
																				"body": {
																					"nativeSrc": "6119:156:12",
																					"nodeType": "YulBlock",
																					"src": "6119:156:12",
																					"statements": [
																						{
																							"nativeSrc": "6137:43:12",
																							"nodeType": "YulVariableDeclaration",
																							"src": "6137:43:12",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "6164:3:12",
																												"nodeType": "YulIdentifier",
																												"src": "6164:3:12"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "6169:9:12",
																												"nodeType": "YulIdentifier",
																												"src": "6169:9:12"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "6160:3:12",
																											"nodeType": "YulIdentifier",
																											"src": "6160:3:12"
																										},
																										"nativeSrc": "6160:19:12",
																										"nodeType": "YulFunctionCall",
																										"src": "6160:19:12"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "6154:5:12",
																									"nodeType": "YulIdentifier",
																									"src": "6154:5:12"
																								},
																								"nativeSrc": "6154:26:12",
																								"nodeType": "YulFunctionCall",
																								"src": "6154:26:12"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "6141:9:12",
																									"nodeType": "YulTypedName",
																									"src": "6141:9:12",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "6204:6:12",
																										"nodeType": "YulIdentifier",
																										"src": "6204:6:12"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "6231:9:12",
																												"nodeType": "YulIdentifier",
																												"src": "6231:9:12"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "6246:6:12",
																														"nodeType": "YulIdentifier",
																														"src": "6246:6:12"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "6254:4:12",
																														"nodeType": "YulLiteral",
																														"src": "6254:4:12",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "6242:3:12",
																													"nodeType": "YulIdentifier",
																													"src": "6242:3:12"
																												},
																												"nativeSrc": "6242:17:12",
																												"nodeType": "YulFunctionCall",
																												"src": "6242:17:12"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "6212:18:12",
																											"nodeType": "YulIdentifier",
																											"src": "6212:18:12"
																										},
																										"nativeSrc": "6212:48:12",
																										"nodeType": "YulFunctionCall",
																										"src": "6212:48:12"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "6197:6:12",
																									"nodeType": "YulIdentifier",
																									"src": "6197:6:12"
																								},
																								"nativeSrc": "6197:64:12",
																								"nodeType": "YulFunctionCall",
																								"src": "6197:64:12"
																							},
																							"nativeSrc": "6197:64:12",
																							"nodeType": "YulExpressionStatement",
																							"src": "6197:64:12"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "6102:7:12",
																							"nodeType": "YulIdentifier",
																							"src": "6102:7:12"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "6111:6:12",
																							"nodeType": "YulIdentifier",
																							"src": "6111:6:12"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "6099:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "6099:2:12"
																					},
																					"nativeSrc": "6099:19:12",
																					"nodeType": "YulFunctionCall",
																					"src": "6099:19:12"
																				},
																				"nativeSrc": "6096:179:12",
																				"nodeType": "YulIf",
																				"src": "6096:179:12"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6295:4:12",
																							"nodeType": "YulIdentifier",
																							"src": "6295:4:12"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "6309:6:12",
																											"nodeType": "YulIdentifier",
																											"src": "6309:6:12"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "6317:1:12",
																											"nodeType": "YulLiteral",
																											"src": "6317:1:12",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "6305:3:12",
																										"nodeType": "YulIdentifier",
																										"src": "6305:3:12"
																									},
																									"nativeSrc": "6305:14:12",
																									"nodeType": "YulFunctionCall",
																									"src": "6305:14:12"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "6321:1:12",
																									"nodeType": "YulLiteral",
																									"src": "6321:1:12",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "6301:3:12",
																								"nodeType": "YulIdentifier",
																								"src": "6301:3:12"
																							},
																							"nativeSrc": "6301:22:12",
																							"nodeType": "YulFunctionCall",
																							"src": "6301:22:12"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "6288:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "6288:6:12"
																					},
																					"nativeSrc": "6288:36:12",
																					"nodeType": "YulFunctionCall",
																					"src": "6288:36:12"
																				},
																				"nativeSrc": "6288:36:12",
																				"nodeType": "YulExpressionStatement",
																				"src": "6288:36:12"
																			}
																		]
																	},
																	"nativeSrc": "5716:618:12",
																	"nodeType": "YulCase",
																	"src": "5716:618:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5721:1:12",
																		"nodeType": "YulLiteral",
																		"src": "5721:1:12",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "6351:222:12",
																		"nodeType": "YulBlock",
																		"src": "6351:222:12",
																		"statements": [
																			{
																				"nativeSrc": "6365:14:12",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6365:14:12",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "6378:1:12",
																					"nodeType": "YulLiteral",
																					"src": "6378:1:12",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "6369:5:12",
																						"nodeType": "YulTypedName",
																						"src": "6369:5:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "6402:67:12",
																					"nodeType": "YulBlock",
																					"src": "6402:67:12",
																					"statements": [
																						{
																							"nativeSrc": "6420:35:12",
																							"nodeType": "YulAssignment",
																							"src": "6420:35:12",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "6439:3:12",
																												"nodeType": "YulIdentifier",
																												"src": "6439:3:12"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "6444:9:12",
																												"nodeType": "YulIdentifier",
																												"src": "6444:9:12"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "6435:3:12",
																											"nodeType": "YulIdentifier",
																											"src": "6435:3:12"
																										},
																										"nativeSrc": "6435:19:12",
																										"nodeType": "YulFunctionCall",
																										"src": "6435:19:12"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "6429:5:12",
																									"nodeType": "YulIdentifier",
																									"src": "6429:5:12"
																								},
																								"nativeSrc": "6429:26:12",
																								"nodeType": "YulFunctionCall",
																								"src": "6429:26:12"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "6420:5:12",
																									"nodeType": "YulIdentifier",
																									"src": "6420:5:12"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "6395:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "6395:6:12"
																				},
																				"nativeSrc": "6392:77:12",
																				"nodeType": "YulIf",
																				"src": "6392:77:12"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6489:4:12",
																							"nodeType": "YulIdentifier",
																							"src": "6489:4:12"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "6548:5:12",
																									"nodeType": "YulIdentifier",
																									"src": "6548:5:12"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "6555:6:12",
																									"nodeType": "YulIdentifier",
																									"src": "6555:6:12"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "6495:52:12",
																								"nodeType": "YulIdentifier",
																								"src": "6495:52:12"
																							},
																							"nativeSrc": "6495:67:12",
																							"nodeType": "YulFunctionCall",
																							"src": "6495:67:12"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "6482:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "6482:6:12"
																					},
																					"nativeSrc": "6482:81:12",
																					"nodeType": "YulFunctionCall",
																					"src": "6482:81:12"
																				},
																				"nativeSrc": "6482:81:12",
																				"nodeType": "YulExpressionStatement",
																				"src": "6482:81:12"
																			}
																		]
																	},
																	"nativeSrc": "6343:230:12",
																	"nodeType": "YulCase",
																	"src": "6343:230:12",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5696:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "5696:6:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5704:2:12",
																		"nodeType": "YulLiteral",
																		"src": "5704:2:12",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5693:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "5693:2:12"
																},
																"nativeSrc": "5693:14:12",
																"nodeType": "YulFunctionCall",
																"src": "5693:14:12"
															},
															"nativeSrc": "5686:887:12",
															"nodeType": "YulSwitch",
															"src": "5686:887:12"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "5184:1395:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "5265:4:12",
														"nodeType": "YulTypedName",
														"src": "5265:4:12",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "5271:3:12",
														"nodeType": "YulTypedName",
														"src": "5271:3:12",
														"type": ""
													}
												],
												"src": "5184:1395:12"
											},
											{
												"body": {
													"nativeSrc": "6681:73:12",
													"nodeType": "YulBlock",
													"src": "6681:73:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6698:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "6698:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6703:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "6703:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6691:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6691:6:12"
																},
																"nativeSrc": "6691:19:12",
																"nodeType": "YulFunctionCall",
																"src": "6691:19:12"
															},
															"nativeSrc": "6691:19:12",
															"nodeType": "YulExpressionStatement",
															"src": "6691:19:12"
														},
														{
															"nativeSrc": "6719:29:12",
															"nodeType": "YulAssignment",
															"src": "6719:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6738:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "6738:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6743:4:12",
																		"nodeType": "YulLiteral",
																		"src": "6743:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6734:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6734:3:12"
																},
																"nativeSrc": "6734:14:12",
																"nodeType": "YulFunctionCall",
																"src": "6734:14:12"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "6719:11:12",
																	"nodeType": "YulIdentifier",
																	"src": "6719:11:12"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "6585:169:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6653:3:12",
														"nodeType": "YulTypedName",
														"src": "6653:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6658:6:12",
														"nodeType": "YulTypedName",
														"src": "6658:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "6669:11:12",
														"nodeType": "YulTypedName",
														"src": "6669:11:12",
														"type": ""
													}
												],
												"src": "6585:169:12"
											},
											{
												"body": {
													"nativeSrc": "6866:65:12",
													"nodeType": "YulBlock",
													"src": "6866:65:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6888:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "6888:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6896:1:12",
																				"nodeType": "YulLiteral",
																				"src": "6896:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6884:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6884:3:12"
																		},
																		"nativeSrc": "6884:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6884:14:12"
																	},
																	{
																		"hexValue": "496e76616c6964207661756c742061646472657373",
																		"kind": "string",
																		"nativeSrc": "6900:23:12",
																		"nodeType": "YulLiteral",
																		"src": "6900:23:12",
																		"type": "",
																		"value": "Invalid vault address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6877:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6877:6:12"
																},
																"nativeSrc": "6877:47:12",
																"nodeType": "YulFunctionCall",
																"src": "6877:47:12"
															},
															"nativeSrc": "6877:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "6877:47:12"
														}
													]
												},
												"name": "store_literal_in_memory_1d4b05e5256c70cb19cbeae4f5dbc68cbf63906eed2b6782a552ca8fc044422e",
												"nativeSrc": "6760:171:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "6858:6:12",
														"nodeType": "YulTypedName",
														"src": "6858:6:12",
														"type": ""
													}
												],
												"src": "6760:171:12"
											},
											{
												"body": {
													"nativeSrc": "7083:220:12",
													"nodeType": "YulBlock",
													"src": "7083:220:12",
													"statements": [
														{
															"nativeSrc": "7093:74:12",
															"nodeType": "YulAssignment",
															"src": "7093:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7159:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "7159:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7164:2:12",
																		"nodeType": "YulLiteral",
																		"src": "7164:2:12",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7100:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "7100:58:12"
																},
																"nativeSrc": "7100:67:12",
																"nodeType": "YulFunctionCall",
																"src": "7100:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7093:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7093:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7265:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "7265:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1d4b05e5256c70cb19cbeae4f5dbc68cbf63906eed2b6782a552ca8fc044422e",
																	"nativeSrc": "7176:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "7176:88:12"
																},
																"nativeSrc": "7176:93:12",
																"nodeType": "YulFunctionCall",
																"src": "7176:93:12"
															},
															"nativeSrc": "7176:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "7176:93:12"
														},
														{
															"nativeSrc": "7278:19:12",
															"nodeType": "YulAssignment",
															"src": "7278:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7289:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "7289:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7294:2:12",
																		"nodeType": "YulLiteral",
																		"src": "7294:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7285:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7285:3:12"
																},
																"nativeSrc": "7285:12:12",
																"nodeType": "YulFunctionCall",
																"src": "7285:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7278:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7278:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1d4b05e5256c70cb19cbeae4f5dbc68cbf63906eed2b6782a552ca8fc044422e_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "6937:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7071:3:12",
														"nodeType": "YulTypedName",
														"src": "7071:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7079:3:12",
														"nodeType": "YulTypedName",
														"src": "7079:3:12",
														"type": ""
													}
												],
												"src": "6937:366:12"
											},
											{
												"body": {
													"nativeSrc": "7480:248:12",
													"nodeType": "YulBlock",
													"src": "7480:248:12",
													"statements": [
														{
															"nativeSrc": "7490:26:12",
															"nodeType": "YulAssignment",
															"src": "7490:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7502:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "7502:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7513:2:12",
																		"nodeType": "YulLiteral",
																		"src": "7513:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7498:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7498:3:12"
																},
																"nativeSrc": "7498:18:12",
																"nodeType": "YulFunctionCall",
																"src": "7498:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7490:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "7490:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7537:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "7537:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7548:1:12",
																				"nodeType": "YulLiteral",
																				"src": "7548:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7533:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7533:3:12"
																		},
																		"nativeSrc": "7533:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7533:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "7556:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "7556:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7562:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "7562:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7552:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7552:3:12"
																		},
																		"nativeSrc": "7552:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7552:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7526:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7526:6:12"
																},
																"nativeSrc": "7526:47:12",
																"nodeType": "YulFunctionCall",
																"src": "7526:47:12"
															},
															"nativeSrc": "7526:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "7526:47:12"
														},
														{
															"nativeSrc": "7582:139:12",
															"nodeType": "YulAssignment",
															"src": "7582:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "7716:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "7716:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1d4b05e5256c70cb19cbeae4f5dbc68cbf63906eed2b6782a552ca8fc044422e_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7590:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "7590:124:12"
																},
																"nativeSrc": "7590:131:12",
																"nodeType": "YulFunctionCall",
																"src": "7590:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7582:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "7582:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1d4b05e5256c70cb19cbeae4f5dbc68cbf63906eed2b6782a552ca8fc044422e__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7309:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7460:9:12",
														"nodeType": "YulTypedName",
														"src": "7460:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7475:4:12",
														"nodeType": "YulTypedName",
														"src": "7475:4:12",
														"type": ""
													}
												],
												"src": "7309:419:12"
											},
											{
												"body": {
													"nativeSrc": "7840:57:12",
													"nodeType": "YulBlock",
													"src": "7840:57:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7862:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "7862:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7870:1:12",
																				"nodeType": "YulLiteral",
																				"src": "7870:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7858:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7858:3:12"
																		},
																		"nativeSrc": "7858:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7858:14:12"
																	},
																	{
																		"hexValue": "496e76616c69642061646d696e",
																		"kind": "string",
																		"nativeSrc": "7874:15:12",
																		"nodeType": "YulLiteral",
																		"src": "7874:15:12",
																		"type": "",
																		"value": "Invalid admin"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7851:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7851:6:12"
																},
																"nativeSrc": "7851:39:12",
																"nodeType": "YulFunctionCall",
																"src": "7851:39:12"
															},
															"nativeSrc": "7851:39:12",
															"nodeType": "YulExpressionStatement",
															"src": "7851:39:12"
														}
													]
												},
												"name": "store_literal_in_memory_61dd2a6cf2ead59b09922a19257b57dec215ba2abf4fa7a561c379f2a10b24a5",
												"nativeSrc": "7734:163:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7832:6:12",
														"nodeType": "YulTypedName",
														"src": "7832:6:12",
														"type": ""
													}
												],
												"src": "7734:163:12"
											},
											{
												"body": {
													"nativeSrc": "8049:220:12",
													"nodeType": "YulBlock",
													"src": "8049:220:12",
													"statements": [
														{
															"nativeSrc": "8059:74:12",
															"nodeType": "YulAssignment",
															"src": "8059:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8125:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "8125:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8130:2:12",
																		"nodeType": "YulLiteral",
																		"src": "8130:2:12",
																		"type": "",
																		"value": "13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8066:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "8066:58:12"
																},
																"nativeSrc": "8066:67:12",
																"nodeType": "YulFunctionCall",
																"src": "8066:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8059:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8059:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8231:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "8231:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_61dd2a6cf2ead59b09922a19257b57dec215ba2abf4fa7a561c379f2a10b24a5",
																	"nativeSrc": "8142:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "8142:88:12"
																},
																"nativeSrc": "8142:93:12",
																"nodeType": "YulFunctionCall",
																"src": "8142:93:12"
															},
															"nativeSrc": "8142:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "8142:93:12"
														},
														{
															"nativeSrc": "8244:19:12",
															"nodeType": "YulAssignment",
															"src": "8244:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8255:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "8255:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8260:2:12",
																		"nodeType": "YulLiteral",
																		"src": "8260:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8251:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8251:3:12"
																},
																"nativeSrc": "8251:12:12",
																"nodeType": "YulFunctionCall",
																"src": "8251:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8244:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8244:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_61dd2a6cf2ead59b09922a19257b57dec215ba2abf4fa7a561c379f2a10b24a5_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "7903:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8037:3:12",
														"nodeType": "YulTypedName",
														"src": "8037:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8045:3:12",
														"nodeType": "YulTypedName",
														"src": "8045:3:12",
														"type": ""
													}
												],
												"src": "7903:366:12"
											},
											{
												"body": {
													"nativeSrc": "8446:248:12",
													"nodeType": "YulBlock",
													"src": "8446:248:12",
													"statements": [
														{
															"nativeSrc": "8456:26:12",
															"nodeType": "YulAssignment",
															"src": "8456:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8468:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "8468:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8479:2:12",
																		"nodeType": "YulLiteral",
																		"src": "8479:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8464:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8464:3:12"
																},
																"nativeSrc": "8464:18:12",
																"nodeType": "YulFunctionCall",
																"src": "8464:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8456:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "8456:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8503:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "8503:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8514:1:12",
																				"nodeType": "YulLiteral",
																				"src": "8514:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8499:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8499:3:12"
																		},
																		"nativeSrc": "8499:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8499:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8522:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "8522:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8528:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "8528:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8518:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8518:3:12"
																		},
																		"nativeSrc": "8518:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8518:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8492:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8492:6:12"
																},
																"nativeSrc": "8492:47:12",
																"nodeType": "YulFunctionCall",
																"src": "8492:47:12"
															},
															"nativeSrc": "8492:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "8492:47:12"
														},
														{
															"nativeSrc": "8548:139:12",
															"nodeType": "YulAssignment",
															"src": "8548:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "8682:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "8682:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_61dd2a6cf2ead59b09922a19257b57dec215ba2abf4fa7a561c379f2a10b24a5_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8556:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "8556:124:12"
																},
																"nativeSrc": "8556:131:12",
																"nodeType": "YulFunctionCall",
																"src": "8556:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8548:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "8548:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_61dd2a6cf2ead59b09922a19257b57dec215ba2abf4fa7a561c379f2a10b24a5__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8275:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8426:9:12",
														"nodeType": "YulTypedName",
														"src": "8426:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8441:4:12",
														"nodeType": "YulTypedName",
														"src": "8441:4:12",
														"type": ""
													}
												],
												"src": "8275:419:12"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_1d4b05e5256c70cb19cbeae4f5dbc68cbf63906eed2b6782a552ca8fc044422e(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid vault address\")\n\n    }\n\n    function abi_encode_t_stringliteral_1d4b05e5256c70cb19cbeae4f5dbc68cbf63906eed2b6782a552ca8fc044422e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_1d4b05e5256c70cb19cbeae4f5dbc68cbf63906eed2b6782a552ca8fc044422e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1d4b05e5256c70cb19cbeae4f5dbc68cbf63906eed2b6782a552ca8fc044422e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1d4b05e5256c70cb19cbeae4f5dbc68cbf63906eed2b6782a552ca8fc044422e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_61dd2a6cf2ead59b09922a19257b57dec215ba2abf4fa7a561c379f2a10b24a5(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid admin\")\n\n    }\n\n    function abi_encode_t_stringliteral_61dd2a6cf2ead59b09922a19257b57dec215ba2abf4fa7a561c379f2a10b24a5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 13)\n        store_literal_in_memory_61dd2a6cf2ead59b09922a19257b57dec215ba2abf4fa7a561c379f2a10b24a5(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_61dd2a6cf2ead59b09922a19257b57dec215ba2abf4fa7a561c379f2a10b24a5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_61dd2a6cf2ead59b09922a19257b57dec215ba2abf4fa7a561c379f2a10b24a5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b5060405161285038038061285083398181016040528101906100319190610416565b6040518060400160405280601081526020017f417572697820476f6c6420546f6b656e000000000000000000000000000000008152506040518060400160405280600481526020017f474f4c440000000000000000000000000000000000000000000000000000000081525081600390816100ac9190610691565b5080600490816100bc9190610691565b5050505f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361012d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610124906107ba565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361019b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161019290610822565b60405180910390fd5b8160075f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506101ed5f5f1b8261025760201b60201c565b5061021e7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a68261025760201b60201c565b5061024f7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a8261025760201b60201c565b505050610840565b5f610268838361034d60201b60201c565b61034357600160065f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055506102e06103b160201b60201c565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a460019050610347565b5f90505b92915050565b5f60065f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f33905090565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6103e5826103bc565b9050919050565b6103f5816103db565b81146103ff575f5ffd5b50565b5f81519050610410816103ec565b92915050565b5f5f6040838503121561042c5761042b6103b8565b5b5f61043985828601610402565b925050602061044a85828601610402565b9150509250929050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806104cf57607f821691505b6020821081036104e2576104e161048b565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026105447fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610509565b61054e8683610509565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f61059261058d61058884610566565b61056f565b610566565b9050919050565b5f819050919050565b6105ab83610578565b6105bf6105b782610599565b848454610515565b825550505050565b5f5f905090565b6105d66105c7565b6105e18184846105a2565b505050565b5b81811015610604576105f95f826105ce565b6001810190506105e7565b5050565b601f8211156106495761061a816104e8565b610623846104fa565b81016020851015610632578190505b61064661063e856104fa565b8301826105e6565b50505b505050565b5f82821c905092915050565b5f6106695f198460080261064e565b1980831691505092915050565b5f610681838361065a565b9150826002028217905092915050565b61069a82610454565b67ffffffffffffffff8111156106b3576106b261045e565b5b6106bd82546104b8565b6106c8828285610608565b5f60209050601f8311600181146106f9575f84156106e7578287015190505b6106f18582610676565b865550610758565b601f198416610707866104e8565b5f5b8281101561072e57848901518255600182019150602085019450602081019050610709565b8683101561074b5784890151610747601f89168261065a565b8355505b6001600288020188555050505b505050505050565b5f82825260208201905092915050565b7f496e76616c6964207661756c74206164647265737300000000000000000000005f82015250565b5f6107a4601583610760565b91506107af82610770565b602082019050919050565b5f6020820190508181035f8301526107d181610798565b9050919050565b7f496e76616c69642061646d696e000000000000000000000000000000000000005f82015250565b5f61080c600d83610760565b9150610817826107d8565b602082019050919050565b5f6020820190508181035f83015261083981610800565b9050919050565b6120038061084d5f395ff3fe608060405234801561000f575f5ffd5b5060043610610156575f3560e01c80635c975abb116100c1578063a9059cbb1161007a578063a9059cbb146103b2578063d5391393146103e2578063d547741f14610400578063dd62ed3e1461041c578063e63ab1e91461044c578063fbfa77cf1461046a57610156565b80635c975abb146102ee57806370a082311461030c5780638456cb591461033c57806391d148541461034657806395d89b4114610376578063a217fddf1461039457610156565b8063248a9ca311610113578063248a9ca3146102425780632f2ff15d14610272578063313ce5671461028e57806336568abe146102ac5780633f4ba83a146102c857806340c10f19146102d257610156565b806301ffc9a71461015a57806306fdde031461018a578063095ea7b3146101a857806318160ddd146101d85780631c83ba4a146101f657806323b872dd14610212575b5f5ffd5b610174600480360381019061016f919061183f565b610488565b6040516101819190611884565b60405180910390f35b610192610501565b60405161019f919061190d565b60405180910390f35b6101c260048036038101906101bd91906119ba565b610591565b6040516101cf9190611884565b60405180910390f35b6101e06105b3565b6040516101ed9190611a07565b60405180910390f35b610210600480360381019061020b91906119ba565b6105bc565b005b61022c60048036038101906102279190611a20565b61073d565b6040516102399190611884565b60405180910390f35b61025c60048036038101906102579190611aa3565b61076b565b6040516102699190611add565b60405180910390f35b61028c60048036038101906102879190611af6565b610788565b005b6102966107aa565b6040516102a39190611b4f565b60405180910390f35b6102c660048036038101906102c19190611af6565b6107b2565b005b6102d061082d565b005b6102ec60048036038101906102e791906119ba565b610862565b005b6102f6610aaa565b6040516103039190611884565b60405180910390f35b61032660048036038101906103219190611b68565b610abf565b6040516103339190611a07565b60405180910390f35b610344610b04565b005b610360600480360381019061035b9190611af6565b610b39565b60405161036d9190611884565b60405180910390f35b61037e610b9d565b60405161038b919061190d565b60405180910390f35b61039c610c2d565b6040516103a99190611add565b60405180910390f35b6103cc60048036038101906103c791906119ba565b610c33565b6040516103d99190611884565b60405180910390f35b6103ea610c55565b6040516103f79190611add565b60405180910390f35b61041a60048036038101906104159190611af6565b610c79565b005b61043660048036038101906104319190611b93565b610c9b565b6040516104439190611a07565b60405180910390f35b610454610d1d565b6040516104619190611add565b60405180910390f35b610472610d41565b60405161047f9190611c2c565b60405180910390f35b5f7f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806104fa57506104f982610d66565b5b9050919050565b60606003805461051090611c72565b80601f016020809104026020016040519081016040528092919081815260200182805461053c90611c72565b80156105875780601f1061055e57610100808354040283529160200191610587565b820191905f5260205f20905b81548152906001019060200180831161056a57829003601f168201915b5050505050905090565b5f5f61059b610dcf565b90506105a8818585610dd6565b600191505092915050565b5f600254905090565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a66105e681610de8565b6105ee610dfc565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361065c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161065390611cec565b60405180910390fd5b8161066684610abf565b10156106a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161069e90611d54565b60405180910390fd5b60075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ecad4f68836040518263ffffffff1660e01b81526004016107019190611a07565b5f604051808303815f87803b158015610718575f5ffd5b505af115801561072a573d5f5f3e3d5ffd5b505050506107388383610e3d565b505050565b5f5f610747610dcf565b9050610754858285610ebc565b61075f858585610f4f565b60019150509392505050565b5f60065f8381526020019081526020015f20600101549050919050565b6107918261076b565b61079a81610de8565b6107a4838361103f565b50505050565b5f6012905090565b6107ba610dcf565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461081e576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6108288282611129565b505050565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a61085781610de8565b61085f611213565b50565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a661088c81610de8565b610894610dfc565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610902576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108f990611dbc565b60405180910390fd5b5f8211610944576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161093b90611e24565b60405180910390fd5b8160075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ff9b1b116040518163ffffffff1660e01b8152600401602060405180830381865afa1580156109af573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906109d39190611e56565b1015610a14576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a0b90611ecb565b60405180910390fd5b60075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633dd0104e836040518263ffffffff1660e01b8152600401610a6e9190611a07565b5f604051808303815f87803b158015610a85575f5ffd5b505af1158015610a97573d5f5f3e3d5ffd5b50505050610aa58383611274565b505050565b5f60055f9054906101000a900460ff16905090565b5f5f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a610b2e81610de8565b610b366112f3565b50565b5f60065f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b606060048054610bac90611c72565b80601f0160208091040260200160405190810160405280929190818152602001828054610bd890611c72565b8015610c235780601f10610bfa57610100808354040283529160200191610c23565b820191905f5260205f20905b815481529060010190602001808311610c0657829003601f168201915b5050505050905090565b5f5f1b81565b5f5f610c3d610dcf565b9050610c4a818585610f4f565b600191505092915050565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b610c828261076b565b610c8b81610de8565b610c958383611129565b50505050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a81565b60075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f33905090565b610de38383836001611355565b505050565b610df981610df4610dcf565b611524565b50565b610e04610aaa565b15610e3b576040517fd93c066500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610ead575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610ea49190611ef8565b60405180910390fd5b610eb8825f83611575565b5050565b5f610ec78484610c9b565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811015610f495781811015610f3a578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610f3193929190611f11565b60405180910390fd5b610f4884848484035f611355565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610fbf575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610fb69190611ef8565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361102f575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016110269190611ef8565b60405180910390fd5b61103a838383611575565b505050565b5f61104a8383610b39565b61111f57600160065f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055506110bc610dcf565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a460019050611123565b5f90505b92915050565b5f6111348383610b39565b15611209575f60065f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055506111a6610dcf565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a46001905061120d565b5f90505b92915050565b61121b61158d565b5f60055f6101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa61125d610dcf565b60405161126a9190611ef8565b60405180910390a1565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036112e4575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016112db9190611ef8565b60405180910390fd5b6112ef5f8383611575565b5050565b6112fb610dfc565b600160055f6101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25861133e610dcf565b60405161134b9190611ef8565b60405180910390a1565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036113c5575f6040517fe602df050000000000000000000000000000000000000000000000000000000081526004016113bc9190611ef8565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611435575f6040517f94280d6200000000000000000000000000000000000000000000000000000000815260040161142c9190611ef8565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550801561151e578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516115159190611a07565b60405180910390a35b50505050565b61152e8282610b39565b6115715780826040517fe2517d3f000000000000000000000000000000000000000000000000000000008152600401611568929190611f46565b60405180910390fd5b5050565b61157d610dfc565b6115888383836115cd565b505050565b611595610aaa565b6115cb576040517f8dfc202b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361161d578060025f8282546116119190611f9a565b925050819055506116eb565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050818110156116a6578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161169d93929190611f11565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611732578060025f828254039250508190555061177c565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516117d99190611a07565b60405180910390a3505050565b5f5ffd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61181e816117ea565b8114611828575f5ffd5b50565b5f8135905061183981611815565b92915050565b5f60208284031215611854576118536117e6565b5b5f6118618482850161182b565b91505092915050565b5f8115159050919050565b61187e8161186a565b82525050565b5f6020820190506118975f830184611875565b92915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f6118df8261189d565b6118e981856118a7565b93506118f98185602086016118b7565b611902816118c5565b840191505092915050565b5f6020820190508181035f83015261192581846118d5565b905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6119568261192d565b9050919050565b6119668161194c565b8114611970575f5ffd5b50565b5f813590506119818161195d565b92915050565b5f819050919050565b61199981611987565b81146119a3575f5ffd5b50565b5f813590506119b481611990565b92915050565b5f5f604083850312156119d0576119cf6117e6565b5b5f6119dd85828601611973565b92505060206119ee858286016119a6565b9150509250929050565b611a0181611987565b82525050565b5f602082019050611a1a5f8301846119f8565b92915050565b5f5f5f60608486031215611a3757611a366117e6565b5b5f611a4486828701611973565b9350506020611a5586828701611973565b9250506040611a66868287016119a6565b9150509250925092565b5f819050919050565b611a8281611a70565b8114611a8c575f5ffd5b50565b5f81359050611a9d81611a79565b92915050565b5f60208284031215611ab857611ab76117e6565b5b5f611ac584828501611a8f565b91505092915050565b611ad781611a70565b82525050565b5f602082019050611af05f830184611ace565b92915050565b5f5f60408385031215611b0c57611b0b6117e6565b5b5f611b1985828601611a8f565b9250506020611b2a85828601611973565b9150509250929050565b5f60ff82169050919050565b611b4981611b34565b82525050565b5f602082019050611b625f830184611b40565b92915050565b5f60208284031215611b7d57611b7c6117e6565b5b5f611b8a84828501611973565b91505092915050565b5f5f60408385031215611ba957611ba86117e6565b5b5f611bb685828601611973565b9250506020611bc785828601611973565b9150509250929050565b5f819050919050565b5f611bf4611bef611bea8461192d565b611bd1565b61192d565b9050919050565b5f611c0582611bda565b9050919050565b5f611c1682611bfb565b9050919050565b611c2681611c0c565b82525050565b5f602082019050611c3f5f830184611c1d565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680611c8957607f821691505b602082108103611c9c57611c9b611c45565b5b50919050565b7f496e76616c6964206164647265737300000000000000000000000000000000005f82015250565b5f611cd6600f836118a7565b9150611ce182611ca2565b602082019050919050565b5f6020820190508181035f830152611d0381611cca565b9050919050565b7f496e73756666696369656e742062616c616e63650000000000000000000000005f82015250565b5f611d3e6014836118a7565b9150611d4982611d0a565b602082019050919050565b5f6020820190508181035f830152611d6b81611d32565b9050919050565b7f496e76616c696420726563697069656e740000000000000000000000000000005f82015250565b5f611da66011836118a7565b9150611db182611d72565b602082019050919050565b5f6020820190508181035f830152611dd381611d9a565b9050919050565b7f416d6f756e74206d757374206265203e203000000000000000000000000000005f82015250565b5f611e0e6012836118a7565b9150611e1982611dda565b602082019050919050565b5f6020820190508181035f830152611e3b81611e02565b9050919050565b5f81519050611e5081611990565b92915050565b5f60208284031215611e6b57611e6a6117e6565b5b5f611e7884828501611e42565b91505092915050565b7f4e6f7420656e6f75676820676f6c6400000000000000000000000000000000005f82015250565b5f611eb5600f836118a7565b9150611ec082611e81565b602082019050919050565b5f6020820190508181035f830152611ee281611ea9565b9050919050565b611ef28161194c565b82525050565b5f602082019050611f0b5f830184611ee9565b92915050565b5f606082019050611f245f830186611ee9565b611f3160208301856119f8565b611f3e60408301846119f8565b949350505050565b5f604082019050611f595f830185611ee9565b611f666020830184611ace565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611fa482611987565b9150611faf83611987565b9250828201905080821115611fc757611fc6611f6d565b5b9291505056fea2646970667358221220a9bedc9257f7682c654ed3c122af6a5bc293ee837f06c504b5928a73e32699fe64736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x2850 CODESIZE SUB DUP1 PUSH2 0x2850 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x416 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x10 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x417572697820476F6C6420546F6B656E00000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x474F4C4400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0xAC SWAP2 SWAP1 PUSH2 0x691 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0xBC SWAP2 SWAP1 PUSH2 0x691 JUMP JUMPDEST POP POP POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x12D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x124 SWAP1 PUSH2 0x7BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x19B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x192 SWAP1 PUSH2 0x822 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x7 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x1ED PUSH0 PUSH0 SHL DUP3 PUSH2 0x257 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0x21E PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP3 PUSH2 0x257 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0x24F PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A DUP3 PUSH2 0x257 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP PUSH2 0x840 JUMP JUMPDEST PUSH0 PUSH2 0x268 DUP4 DUP4 PUSH2 0x34D PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x343 JUMPI PUSH1 0x1 PUSH1 0x6 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x2E0 PUSH2 0x3B1 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x347 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x3E5 DUP3 PUSH2 0x3BC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3F5 DUP2 PUSH2 0x3DB JUMP JUMPDEST DUP2 EQ PUSH2 0x3FF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x410 DUP2 PUSH2 0x3EC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x42C JUMPI PUSH2 0x42B PUSH2 0x3B8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x439 DUP6 DUP3 DUP7 ADD PUSH2 0x402 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x44A DUP6 DUP3 DUP7 ADD PUSH2 0x402 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x4CF JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x4E2 JUMPI PUSH2 0x4E1 PUSH2 0x48B JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x544 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x509 JUMP JUMPDEST PUSH2 0x54E DUP7 DUP4 PUSH2 0x509 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x592 PUSH2 0x58D PUSH2 0x588 DUP5 PUSH2 0x566 JUMP JUMPDEST PUSH2 0x56F JUMP JUMPDEST PUSH2 0x566 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5AB DUP4 PUSH2 0x578 JUMP JUMPDEST PUSH2 0x5BF PUSH2 0x5B7 DUP3 PUSH2 0x599 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x515 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x5D6 PUSH2 0x5C7 JUMP JUMPDEST PUSH2 0x5E1 DUP2 DUP5 DUP5 PUSH2 0x5A2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x604 JUMPI PUSH2 0x5F9 PUSH0 DUP3 PUSH2 0x5CE JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x5E7 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x649 JUMPI PUSH2 0x61A DUP2 PUSH2 0x4E8 JUMP JUMPDEST PUSH2 0x623 DUP5 PUSH2 0x4FA JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x632 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x646 PUSH2 0x63E DUP6 PUSH2 0x4FA JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x5E6 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x669 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x64E JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x681 DUP4 DUP4 PUSH2 0x65A JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x69A DUP3 PUSH2 0x454 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x6B3 JUMPI PUSH2 0x6B2 PUSH2 0x45E JUMP JUMPDEST JUMPDEST PUSH2 0x6BD DUP3 SLOAD PUSH2 0x4B8 JUMP JUMPDEST PUSH2 0x6C8 DUP3 DUP3 DUP6 PUSH2 0x608 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x6F9 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x6E7 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x6F1 DUP6 DUP3 PUSH2 0x676 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x758 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x707 DUP7 PUSH2 0x4E8 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x72E JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x709 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x74B JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x747 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x65A JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C6964207661756C7420616464726573730000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x7A4 PUSH1 0x15 DUP4 PUSH2 0x760 JUMP JUMPDEST SWAP2 POP PUSH2 0x7AF DUP3 PUSH2 0x770 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x7D1 DUP2 PUSH2 0x798 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C69642061646D696E00000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x80C PUSH1 0xD DUP4 PUSH2 0x760 JUMP JUMPDEST SWAP2 POP PUSH2 0x817 DUP3 PUSH2 0x7D8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x839 DUP2 PUSH2 0x800 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2003 DUP1 PUSH2 0x84D PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x156 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5C975ABB GT PUSH2 0xC1 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x3B2 JUMPI DUP1 PUSH4 0xD5391393 EQ PUSH2 0x3E2 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x400 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x41C JUMPI DUP1 PUSH4 0xE63AB1E9 EQ PUSH2 0x44C JUMPI DUP1 PUSH4 0xFBFA77CF EQ PUSH2 0x46A JUMPI PUSH2 0x156 JUMP JUMPDEST DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x2EE JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x30C JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x33C JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x346 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x376 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x394 JUMPI PUSH2 0x156 JUMP JUMPDEST DUP1 PUSH4 0x248A9CA3 GT PUSH2 0x113 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x242 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x272 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x28E JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x2AC JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x2C8 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x2D2 JUMPI PUSH2 0x156 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x18A JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1A8 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1D8 JUMPI DUP1 PUSH4 0x1C83BA4A EQ PUSH2 0x1F6 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x212 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x174 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16F SWAP2 SWAP1 PUSH2 0x183F JUMP JUMPDEST PUSH2 0x488 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x181 SWAP2 SWAP1 PUSH2 0x1884 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x192 PUSH2 0x501 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19F SWAP2 SWAP1 PUSH2 0x190D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BD SWAP2 SWAP1 PUSH2 0x19BA JUMP JUMPDEST PUSH2 0x591 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CF SWAP2 SWAP1 PUSH2 0x1884 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E0 PUSH2 0x5B3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1ED SWAP2 SWAP1 PUSH2 0x1A07 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x210 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20B SWAP2 SWAP1 PUSH2 0x19BA JUMP JUMPDEST PUSH2 0x5BC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x22C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x227 SWAP2 SWAP1 PUSH2 0x1A20 JUMP JUMPDEST PUSH2 0x73D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x239 SWAP2 SWAP1 PUSH2 0x1884 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x25C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x257 SWAP2 SWAP1 PUSH2 0x1AA3 JUMP JUMPDEST PUSH2 0x76B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x269 SWAP2 SWAP1 PUSH2 0x1ADD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x28C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x287 SWAP2 SWAP1 PUSH2 0x1AF6 JUMP JUMPDEST PUSH2 0x788 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x296 PUSH2 0x7AA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A3 SWAP2 SWAP1 PUSH2 0x1B4F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C1 SWAP2 SWAP1 PUSH2 0x1AF6 JUMP JUMPDEST PUSH2 0x7B2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2D0 PUSH2 0x82D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2EC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E7 SWAP2 SWAP1 PUSH2 0x19BA JUMP JUMPDEST PUSH2 0x862 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2F6 PUSH2 0xAAA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x303 SWAP2 SWAP1 PUSH2 0x1884 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x326 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x321 SWAP2 SWAP1 PUSH2 0x1B68 JUMP JUMPDEST PUSH2 0xABF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x333 SWAP2 SWAP1 PUSH2 0x1A07 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x344 PUSH2 0xB04 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x360 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x35B SWAP2 SWAP1 PUSH2 0x1AF6 JUMP JUMPDEST PUSH2 0xB39 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x36D SWAP2 SWAP1 PUSH2 0x1884 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x37E PUSH2 0xB9D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x38B SWAP2 SWAP1 PUSH2 0x190D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x39C PUSH2 0xC2D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A9 SWAP2 SWAP1 PUSH2 0x1ADD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3CC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3C7 SWAP2 SWAP1 PUSH2 0x19BA JUMP JUMPDEST PUSH2 0xC33 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D9 SWAP2 SWAP1 PUSH2 0x1884 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3EA PUSH2 0xC55 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F7 SWAP2 SWAP1 PUSH2 0x1ADD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x41A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x415 SWAP2 SWAP1 PUSH2 0x1AF6 JUMP JUMPDEST PUSH2 0xC79 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x436 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x431 SWAP2 SWAP1 PUSH2 0x1B93 JUMP JUMPDEST PUSH2 0xC9B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x443 SWAP2 SWAP1 PUSH2 0x1A07 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x454 PUSH2 0xD1D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x461 SWAP2 SWAP1 PUSH2 0x1ADD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x472 PUSH2 0xD41 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x47F SWAP2 SWAP1 PUSH2 0x1C2C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x4FA JUMPI POP PUSH2 0x4F9 DUP3 PUSH2 0xD66 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x510 SWAP1 PUSH2 0x1C72 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x53C SWAP1 PUSH2 0x1C72 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x587 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x55E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x587 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x56A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x59B PUSH2 0xDCF JUMP JUMPDEST SWAP1 POP PUSH2 0x5A8 DUP2 DUP6 DUP6 PUSH2 0xDD6 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH2 0x5E6 DUP2 PUSH2 0xDE8 JUMP JUMPDEST PUSH2 0x5EE PUSH2 0xDFC JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x65C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x653 SWAP1 PUSH2 0x1CEC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH2 0x666 DUP5 PUSH2 0xABF JUMP JUMPDEST LT ISZERO PUSH2 0x6A7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x69E SWAP1 PUSH2 0x1D54 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xECAD4F68 DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x701 SWAP2 SWAP1 PUSH2 0x1A07 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x718 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x72A JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH2 0x738 DUP4 DUP4 PUSH2 0xE3D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x747 PUSH2 0xDCF JUMP JUMPDEST SWAP1 POP PUSH2 0x754 DUP6 DUP3 DUP6 PUSH2 0xEBC JUMP JUMPDEST PUSH2 0x75F DUP6 DUP6 DUP6 PUSH2 0xF4F JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x791 DUP3 PUSH2 0x76B JUMP JUMPDEST PUSH2 0x79A DUP2 PUSH2 0xDE8 JUMP JUMPDEST PUSH2 0x7A4 DUP4 DUP4 PUSH2 0x103F JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x7BA PUSH2 0xDCF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x81E JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x828 DUP3 DUP3 PUSH2 0x1129 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A PUSH2 0x857 DUP2 PUSH2 0xDE8 JUMP JUMPDEST PUSH2 0x85F PUSH2 0x1213 JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH2 0x88C DUP2 PUSH2 0xDE8 JUMP JUMPDEST PUSH2 0x894 PUSH2 0xDFC JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x902 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8F9 SWAP1 PUSH2 0x1DBC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 GT PUSH2 0x944 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x93B SWAP1 PUSH2 0x1E24 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFF9B1B11 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9AF JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9D3 SWAP2 SWAP1 PUSH2 0x1E56 JUMP JUMPDEST LT ISZERO PUSH2 0xA14 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA0B SWAP1 PUSH2 0x1ECB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x3DD0104E DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA6E SWAP2 SWAP1 PUSH2 0x1A07 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA85 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA97 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH2 0xAA5 DUP4 DUP4 PUSH2 0x1274 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A PUSH2 0xB2E DUP2 PUSH2 0xDE8 JUMP JUMPDEST PUSH2 0xB36 PUSH2 0x12F3 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0xBAC SWAP1 PUSH2 0x1C72 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xBD8 SWAP1 PUSH2 0x1C72 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xC23 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xBFA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xC23 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xC06 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 SHL DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0xC3D PUSH2 0xDCF JUMP JUMPDEST SWAP1 POP PUSH2 0xC4A DUP2 DUP6 DUP6 PUSH2 0xF4F JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP2 JUMP JUMPDEST PUSH2 0xC82 DUP3 PUSH2 0x76B JUMP JUMPDEST PUSH2 0xC8B DUP2 PUSH2 0xDE8 JUMP JUMPDEST PUSH2 0xC95 DUP4 DUP4 PUSH2 0x1129 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A DUP2 JUMP JUMPDEST PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xDE3 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1355 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xDF9 DUP2 PUSH2 0xDF4 PUSH2 0xDCF JUMP JUMPDEST PUSH2 0x1524 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xE04 PUSH2 0xAAA JUMP JUMPDEST ISZERO PUSH2 0xE3B JUMPI PUSH1 0x40 MLOAD PUSH32 0xD93C066500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xEAD JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEA4 SWAP2 SWAP1 PUSH2 0x1EF8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xEB8 DUP3 PUSH0 DUP4 PUSH2 0x1575 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0xEC7 DUP5 DUP5 PUSH2 0xC9B JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0xF49 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xF3A JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF31 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1F11 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF48 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x1355 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xFBF JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFB6 SWAP2 SWAP1 PUSH2 0x1EF8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x102F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1026 SWAP2 SWAP1 PUSH2 0x1EF8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x103A DUP4 DUP4 DUP4 PUSH2 0x1575 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x104A DUP4 DUP4 PUSH2 0xB39 JUMP JUMPDEST PUSH2 0x111F JUMPI PUSH1 0x1 PUSH1 0x6 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x10BC PUSH2 0xDCF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x1123 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1134 DUP4 DUP4 PUSH2 0xB39 JUMP JUMPDEST ISZERO PUSH2 0x1209 JUMPI PUSH0 PUSH1 0x6 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x11A6 PUSH2 0xDCF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x120D JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x121B PUSH2 0x158D JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x125D PUSH2 0xDCF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x126A SWAP2 SWAP1 PUSH2 0x1EF8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x12E4 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12DB SWAP2 SWAP1 PUSH2 0x1EF8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x12EF PUSH0 DUP4 DUP4 PUSH2 0x1575 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x12FB PUSH2 0xDFC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x133E PUSH2 0xDCF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x134B SWAP2 SWAP1 PUSH2 0x1EF8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x13C5 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13BC SWAP2 SWAP1 PUSH2 0x1EF8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1435 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x142C SWAP2 SWAP1 PUSH2 0x1EF8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x151E JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1515 SWAP2 SWAP1 PUSH2 0x1A07 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x152E DUP3 DUP3 PUSH2 0xB39 JUMP JUMPDEST PUSH2 0x1571 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1568 SWAP3 SWAP2 SWAP1 PUSH2 0x1F46 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x157D PUSH2 0xDFC JUMP JUMPDEST PUSH2 0x1588 DUP4 DUP4 DUP4 PUSH2 0x15CD JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1595 PUSH2 0xAAA JUMP JUMPDEST PUSH2 0x15CB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8DFC202B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x161D JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1611 SWAP2 SWAP1 PUSH2 0x1F9A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x16EB JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x16A6 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x169D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1F11 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1732 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x177C JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x17D9 SWAP2 SWAP1 PUSH2 0x1A07 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x181E DUP2 PUSH2 0x17EA JUMP JUMPDEST DUP2 EQ PUSH2 0x1828 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1839 DUP2 PUSH2 0x1815 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1854 JUMPI PUSH2 0x1853 PUSH2 0x17E6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1861 DUP5 DUP3 DUP6 ADD PUSH2 0x182B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x187E DUP2 PUSH2 0x186A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1897 PUSH0 DUP4 ADD DUP5 PUSH2 0x1875 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x18DF DUP3 PUSH2 0x189D JUMP JUMPDEST PUSH2 0x18E9 DUP2 DUP6 PUSH2 0x18A7 JUMP JUMPDEST SWAP4 POP PUSH2 0x18F9 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x18B7 JUMP JUMPDEST PUSH2 0x1902 DUP2 PUSH2 0x18C5 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1925 DUP2 DUP5 PUSH2 0x18D5 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1956 DUP3 PUSH2 0x192D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1966 DUP2 PUSH2 0x194C JUMP JUMPDEST DUP2 EQ PUSH2 0x1970 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1981 DUP2 PUSH2 0x195D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1999 DUP2 PUSH2 0x1987 JUMP JUMPDEST DUP2 EQ PUSH2 0x19A3 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x19B4 DUP2 PUSH2 0x1990 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x19D0 JUMPI PUSH2 0x19CF PUSH2 0x17E6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x19DD DUP6 DUP3 DUP7 ADD PUSH2 0x1973 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x19EE DUP6 DUP3 DUP7 ADD PUSH2 0x19A6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A01 DUP2 PUSH2 0x1987 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A1A PUSH0 DUP4 ADD DUP5 PUSH2 0x19F8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1A37 JUMPI PUSH2 0x1A36 PUSH2 0x17E6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A44 DUP7 DUP3 DUP8 ADD PUSH2 0x1973 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1A55 DUP7 DUP3 DUP8 ADD PUSH2 0x1973 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1A66 DUP7 DUP3 DUP8 ADD PUSH2 0x19A6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A82 DUP2 PUSH2 0x1A70 JUMP JUMPDEST DUP2 EQ PUSH2 0x1A8C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A9D DUP2 PUSH2 0x1A79 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1AB8 JUMPI PUSH2 0x1AB7 PUSH2 0x17E6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1AC5 DUP5 DUP3 DUP6 ADD PUSH2 0x1A8F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1AD7 DUP2 PUSH2 0x1A70 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1AF0 PUSH0 DUP4 ADD DUP5 PUSH2 0x1ACE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B0C JUMPI PUSH2 0x1B0B PUSH2 0x17E6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B19 DUP6 DUP3 DUP7 ADD PUSH2 0x1A8F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1B2A DUP6 DUP3 DUP7 ADD PUSH2 0x1973 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B49 DUP2 PUSH2 0x1B34 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B62 PUSH0 DUP4 ADD DUP5 PUSH2 0x1B40 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B7D JUMPI PUSH2 0x1B7C PUSH2 0x17E6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B8A DUP5 DUP3 DUP6 ADD PUSH2 0x1973 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1BA9 JUMPI PUSH2 0x1BA8 PUSH2 0x17E6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1BB6 DUP6 DUP3 DUP7 ADD PUSH2 0x1973 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1BC7 DUP6 DUP3 DUP7 ADD PUSH2 0x1973 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1BF4 PUSH2 0x1BEF PUSH2 0x1BEA DUP5 PUSH2 0x192D JUMP JUMPDEST PUSH2 0x1BD1 JUMP JUMPDEST PUSH2 0x192D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1C05 DUP3 PUSH2 0x1BDA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1C16 DUP3 PUSH2 0x1BFB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C26 DUP2 PUSH2 0x1C0C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C3F PUSH0 DUP4 ADD DUP5 PUSH2 0x1C1D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1C89 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1C9C JUMPI PUSH2 0x1C9B PUSH2 0x1C45 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420616464726573730000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1CD6 PUSH1 0xF DUP4 PUSH2 0x18A7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CE1 DUP3 PUSH2 0x1CA2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1D03 DUP2 PUSH2 0x1CCA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742062616C616E6365000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1D3E PUSH1 0x14 DUP4 PUSH2 0x18A7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D49 DUP3 PUSH2 0x1D0A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1D6B DUP2 PUSH2 0x1D32 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420726563697069656E74000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1DA6 PUSH1 0x11 DUP4 PUSH2 0x18A7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DB1 DUP3 PUSH2 0x1D72 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1DD3 DUP2 PUSH2 0x1D9A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416D6F756E74206D757374206265203E20300000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1E0E PUSH1 0x12 DUP4 PUSH2 0x18A7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E19 DUP3 PUSH2 0x1DDA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1E3B DUP2 PUSH2 0x1E02 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1E50 DUP2 PUSH2 0x1990 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E6B JUMPI PUSH2 0x1E6A PUSH2 0x17E6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1E78 DUP5 DUP3 DUP6 ADD PUSH2 0x1E42 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F7420656E6F75676820676F6C640000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1EB5 PUSH1 0xF DUP4 PUSH2 0x18A7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EC0 DUP3 PUSH2 0x1E81 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1EE2 DUP2 PUSH2 0x1EA9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1EF2 DUP2 PUSH2 0x194C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F0B PUSH0 DUP4 ADD DUP5 PUSH2 0x1EE9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1F24 PUSH0 DUP4 ADD DUP7 PUSH2 0x1EE9 JUMP JUMPDEST PUSH2 0x1F31 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x19F8 JUMP JUMPDEST PUSH2 0x1F3E PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x19F8 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1F59 PUSH0 DUP4 ADD DUP6 PUSH2 0x1EE9 JUMP JUMPDEST PUSH2 0x1F66 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1ACE JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1FA4 DUP3 PUSH2 0x1987 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FAF DUP4 PUSH2 0x1987 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1FC7 JUMPI PUSH2 0x1FC6 PUSH2 0x1F6D JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA9 0xBE 0xDC SWAP3 JUMPI 0xF7 PUSH9 0x2C654ED3C122AF6A5B 0xC2 SWAP4 RETURNCONTRACT 0x83 PUSH32 0x6C504B5928A73E32699FE64736F6C634300081E003300000000000000000000 ",
							"sourceMap": "725:2193:11:-:0;;;1187:449;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1582:113:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1656:5;1648;:13;;;;;;:::i;:::-;;1681:7;1671;:17;;;;;;:::i;:::-;;1582:113;;1338:1:11::1;1307:33;;:19;:33;;::::0;1299:67:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;1401:1;1384:19;;:5;:19;;::::0;1376:45:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;1454:19;1432:5;;:42;;;;;;;;;;;;;;;;;;1512:37;2232:4:0;1523:18:11;;1543:5;1512:10;;;:37;;:::i;:::-;;1559:30;844:24;1583:5;1559:10;;;:30;;:::i;:::-;;1599;912:24;1623:5;1599:10;;;:30;;:::i;:::-;;1187:449:::0;;725:2193;;6179:316:0;6256:4;6277:22;6285:4;6291:7;6277;;;:22;;:::i;:::-;6272:217;;6347:4;6315:6;:12;6322:4;6315:12;;;;;;;;;;;:20;;:29;6336:7;6315:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;6397:12;:10;;;:12;;:::i;:::-;6370:40;;6388:7;6370:40;;6382:4;6370:40;;;;;;;;;;6431:4;6424:11;;;;6272:217;6473:5;6466:12;;6179:316;;;;;:::o;2854:136::-;2931:4;2954:6;:12;2961:4;2954:12;;;;;;;;;;;:20;;:29;2975:7;2954:29;;;;;;;;;;;;;;;;;;;;;;;;;2947:36;;2854:136;;;;:::o;656:96:7:-;709:7;735:10;728:17;;656:96;:::o;88:117:12:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:507::-;924:6;932;981:2;969:9;960:7;956:23;952:32;949:119;;;987:79;;:::i;:::-;949:119;1107:1;1132:64;1188:7;1179:6;1168:9;1164:22;1132:64;:::i;:::-;1122:74;;1078:128;1245:2;1271:64;1327:7;1318:6;1307:9;1303:22;1271:64;:::i;:::-;1261:74;;1216:129;845:507;;;;;:::o;1358:99::-;1410:6;1444:5;1438:12;1428:22;;1358:99;;;:::o;1463:180::-;1511:77;1508:1;1501:88;1608:4;1605:1;1598:15;1632:4;1629:1;1622:15;1649:180;1697:77;1694:1;1687:88;1794:4;1791:1;1784:15;1818:4;1815:1;1808:15;1835:320;1879:6;1916:1;1910:4;1906:12;1896:22;;1963:1;1957:4;1953:12;1984:18;1974:81;;2040:4;2032:6;2028:17;2018:27;;1974:81;2102:2;2094:6;2091:14;2071:18;2068:38;2065:84;;2121:18;;:::i;:::-;2065:84;1886:269;1835:320;;;:::o;2161:141::-;2210:4;2233:3;2225:11;;2256:3;2253:1;2246:14;2290:4;2287:1;2277:18;2269:26;;2161:141;;;:::o;2308:93::-;2345:6;2392:2;2387;2380:5;2376:14;2372:23;2362:33;;2308:93;;;:::o;2407:107::-;2451:8;2501:5;2495:4;2491:16;2470:37;;2407:107;;;;:::o;2520:393::-;2589:6;2639:1;2627:10;2623:18;2662:97;2692:66;2681:9;2662:97;:::i;:::-;2780:39;2810:8;2799:9;2780:39;:::i;:::-;2768:51;;2852:4;2848:9;2841:5;2837:21;2828:30;;2901:4;2891:8;2887:19;2880:5;2877:30;2867:40;;2596:317;;2520:393;;;;;:::o;2919:77::-;2956:7;2985:5;2974:16;;2919:77;;;:::o;3002:60::-;3030:3;3051:5;3044:12;;3002:60;;;:::o;3068:142::-;3118:9;3151:53;3169:34;3178:24;3196:5;3178:24;:::i;:::-;3169:34;:::i;:::-;3151:53;:::i;:::-;3138:66;;3068:142;;;:::o;3216:75::-;3259:3;3280:5;3273:12;;3216:75;;;:::o;3297:269::-;3407:39;3438:7;3407:39;:::i;:::-;3468:91;3517:41;3541:16;3517:41;:::i;:::-;3509:6;3502:4;3496:11;3468:91;:::i;:::-;3462:4;3455:105;3373:193;3297:269;;;:::o;3572:73::-;3617:3;3638:1;3631:8;;3572:73;:::o;3651:189::-;3728:32;;:::i;:::-;3769:65;3827:6;3819;3813:4;3769:65;:::i;:::-;3704:136;3651:189;;:::o;3846:186::-;3906:120;3923:3;3916:5;3913:14;3906:120;;;3977:39;4014:1;4007:5;3977:39;:::i;:::-;3950:1;3943:5;3939:13;3930:22;;3906:120;;;3846:186;;:::o;4038:543::-;4139:2;4134:3;4131:11;4128:446;;;4173:38;4205:5;4173:38;:::i;:::-;4257:29;4275:10;4257:29;:::i;:::-;4247:8;4243:44;4440:2;4428:10;4425:18;4422:49;;;4461:8;4446:23;;4422:49;4484:80;4540:22;4558:3;4540:22;:::i;:::-;4530:8;4526:37;4513:11;4484:80;:::i;:::-;4143:431;;4128:446;4038:543;;;:::o;4587:117::-;4641:8;4691:5;4685:4;4681:16;4660:37;;4587:117;;;;:::o;4710:169::-;4754:6;4787:51;4835:1;4831:6;4823:5;4820:1;4816:13;4787:51;:::i;:::-;4783:56;4868:4;4862;4858:15;4848:25;;4761:118;4710:169;;;;:::o;4884:295::-;4960:4;5106:29;5131:3;5125:4;5106:29;:::i;:::-;5098:37;;5168:3;5165:1;5161:11;5155:4;5152:21;5144:29;;4884:295;;;;:::o;5184:1395::-;5301:37;5334:3;5301:37;:::i;:::-;5403:18;5395:6;5392:30;5389:56;;;5425:18;;:::i;:::-;5389:56;5469:38;5501:4;5495:11;5469:38;:::i;:::-;5554:67;5614:6;5606;5600:4;5554:67;:::i;:::-;5648:1;5672:4;5659:17;;5704:2;5696:6;5693:14;5721:1;5716:618;;;;6378:1;6395:6;6392:77;;;6444:9;6439:3;6435:19;6429:26;6420:35;;6392:77;6495:67;6555:6;6548:5;6495:67;:::i;:::-;6489:4;6482:81;6351:222;5686:887;;5716:618;5768:4;5764:9;5756:6;5752:22;5802:37;5834:4;5802:37;:::i;:::-;5861:1;5875:208;5889:7;5886:1;5883:14;5875:208;;;5968:9;5963:3;5959:19;5953:26;5945:6;5938:42;6019:1;6011:6;6007:14;5997:24;;6066:2;6055:9;6051:18;6038:31;;5912:4;5909:1;5905:12;5900:17;;5875:208;;;6111:6;6102:7;6099:19;6096:179;;;6169:9;6164:3;6160:19;6154:26;6212:48;6254:4;6246:6;6242:17;6231:9;6212:48;:::i;:::-;6204:6;6197:64;6119:156;6096:179;6321:1;6317;6309:6;6305:14;6301:22;6295:4;6288:36;5723:611;;;5686:887;;5276:1303;;;5184:1395;;:::o;6585:169::-;6669:11;6703:6;6698:3;6691:19;6743:4;6738:3;6734:14;6719:29;;6585:169;;;;:::o;6760:171::-;6900:23;6896:1;6888:6;6884:14;6877:47;6760:171;:::o;6937:366::-;7079:3;7100:67;7164:2;7159:3;7100:67;:::i;:::-;7093:74;;7176:93;7265:3;7176:93;:::i;:::-;7294:2;7289:3;7285:12;7278:19;;6937:366;;;:::o;7309:419::-;7475:4;7513:2;7502:9;7498:18;7490:26;;7562:9;7556:4;7552:20;7548:1;7537:9;7533:17;7526:47;7590:131;7716:4;7590:131;:::i;:::-;7582:139;;7309:419;;;:::o;7734:163::-;7874:15;7870:1;7862:6;7858:14;7851:39;7734:163;:::o;7903:366::-;8045:3;8066:67;8130:2;8125:3;8066:67;:::i;:::-;8059:74;;8142:93;8231:3;8142:93;:::i;:::-;8260:2;8255:3;8251:12;8244:19;;7903:366;;;:::o;8275:419::-;8441:4;8479:2;8468:9;8464:18;8456:26;;8528:9;8522:4;8518:20;8514:1;8503:9;8499:17;8492:47;8556:131;8682:4;8556:131;:::i;:::-;8548:139;;8275:419;;;:::o;725:2193:11:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@DEFAULT_ADMIN_ROLE_29": {
									"entryPoint": 3117,
									"id": 29,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@MINTER_ROLE_1378": {
									"entryPoint": 3157,
									"id": 1378,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@PAUSER_ROLE_1383": {
									"entryPoint": 3357,
									"id": 1383,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_approve_921": {
									"entryPoint": 3542,
									"id": 921,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_981": {
									"entryPoint": 4949,
									"id": 981,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_burn_903": {
									"entryPoint": 3645,
									"id": 903,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkRole_114": {
									"entryPoint": 5412,
									"id": 114,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkRole_93": {
									"entryPoint": 3560,
									"id": 93,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_grantRole_256": {
									"entryPoint": 4159,
									"id": 256,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_mint_870": {
									"entryPoint": 4724,
									"id": 870,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1180": {
									"entryPoint": 3535,
									"id": 1180,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_pause_1289": {
									"entryPoint": 4851,
									"id": 1289,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requireNotPaused_1260": {
									"entryPoint": 3580,
									"id": 1260,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requirePaused_1273": {
									"entryPoint": 5517,
									"id": 1273,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_revokeRole_294": {
									"entryPoint": 4393,
									"id": 294,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_spendAllowance_1029": {
									"entryPoint": 3772,
									"id": 1029,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_760": {
									"entryPoint": 3919,
									"id": 760,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_unpause_1305": {
									"entryPoint": 4627,
									"id": 1305,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_update_1141": {
									"entryPoint": 5493,
									"id": 1141,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_837": {
									"entryPoint": 5581,
									"id": 837,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_657": {
									"entryPoint": 3227,
									"id": 657,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_681": {
									"entryPoint": 1425,
									"id": 681,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_616": {
									"entryPoint": 2751,
									"id": 616,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burnFromVault_1535": {
									"entryPoint": 1468,
									"id": 1535,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@decimals_594": {
									"entryPoint": 1962,
									"id": 594,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getRoleAdmin_128": {
									"entryPoint": 1899,
									"id": 128,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@grantRole_147": {
									"entryPoint": 1928,
									"id": 147,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@hasRole_80": {
									"entryPoint": 2873,
									"id": 80,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@mint_1491": {
									"entryPoint": 2146,
									"id": 1491,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@name_576": {
									"entryPoint": 1281,
									"id": 576,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pause_1546": {
									"entryPoint": 2820,
									"id": 1546,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@paused_1248": {
									"entryPoint": 2730,
									"id": 1248,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceRole_189": {
									"entryPoint": 1970,
									"id": 189,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@revokeRole_166": {
									"entryPoint": 3193,
									"id": 166,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_1329": {
									"entryPoint": 3430,
									"id": 1329,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_62": {
									"entryPoint": 1160,
									"id": 62,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_585": {
									"entryPoint": 2973,
									"id": 585,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_603": {
									"entryPoint": 1459,
									"id": 603,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_713": {
									"entryPoint": 1853,
									"id": 713,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_640": {
									"entryPoint": 3123,
									"id": 640,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@unpause_1557": {
									"entryPoint": 2093,
									"id": 1557,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@vault_1386": {
									"entryPoint": 3393,
									"id": 1386,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 6515,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32": {
									"entryPoint": 6799,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 6187,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 6566,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 7746,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 7016,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 7059,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 6688,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 6586,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": 6819,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32t_address": {
									"entryPoint": 6902,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 6207,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 7766,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 7913,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 6261,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 6862,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IVaultManager_$1368_to_t_address_fromStack": {
									"entryPoint": 7197,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6357,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7682,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7370,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7474,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_7d5f8b7a385facf19389f22978f36cd75aee6d5cec328741ff39c84acdfadfaa_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7849,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_a6664b97aef19c137d44ec81dfc0c0cc28a2c3470357b125208345a2c048425d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7578,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 6648,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 6976,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 7928,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed": {
									"entryPoint": 8006,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 7953,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 6276,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": 6877,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IVaultManager_$1368__to_t_address__fromStack_reversed": {
									"entryPoint": 7212,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6413,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7716,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7404,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7508,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7d5f8b7a385facf19389f22978f36cd75aee6d5cec328741ff39c84acdfadfaa__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7883,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a6664b97aef19c137d44ec81dfc0c0cc28a2c3470357b125208345a2c048425d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7612,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 6663,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 6991,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 6301,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 6311,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 8090,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 6476,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 6250,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 6768,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 6122,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 6445,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 6535,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 6964,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IVaultManager_$1368_to_t_address": {
									"entryPoint": 7180,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 7163,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 7130,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 6327,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 7282,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 7121,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 8045,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 7237,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 6118,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 6341,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb": {
									"entryPoint": 7642,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226": {
									"entryPoint": 7330,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5": {
									"entryPoint": 7434,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_7d5f8b7a385facf19389f22978f36cd75aee6d5cec328741ff39c84acdfadfaa": {
									"entryPoint": 7809,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_a6664b97aef19c137d44ec81dfc0c0cc28a2c3470357b125208345a2c048425d": {
									"entryPoint": 7538,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 6493,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes32": {
									"entryPoint": 6777,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 6165,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 6544,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:16180:12",
										"nodeType": "YulBlock",
										"src": "0:16180:12",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:12",
													"nodeType": "YulBlock",
													"src": "47:35:12",
													"statements": [
														{
															"nativeSrc": "57:19:12",
															"nodeType": "YulAssignment",
															"src": "57:19:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:12",
																		"nodeType": "YulLiteral",
																		"src": "73:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:12"
																},
																"nativeSrc": "67:9:12",
																"nodeType": "YulFunctionCall",
																"src": "67:9:12"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:12"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:12",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:12",
														"nodeType": "YulTypedName",
														"src": "40:6:12",
														"type": ""
													}
												],
												"src": "7:75:12"
											},
											{
												"body": {
													"nativeSrc": "177:28:12",
													"nodeType": "YulBlock",
													"src": "177:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:12",
																		"nodeType": "YulLiteral",
																		"src": "194:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:12",
																		"nodeType": "YulLiteral",
																		"src": "197:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:12"
																},
																"nativeSrc": "187:12:12",
																"nodeType": "YulFunctionCall",
																"src": "187:12:12"
															},
															"nativeSrc": "187:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:12"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:12"
											},
											{
												"body": {
													"nativeSrc": "300:28:12",
													"nodeType": "YulBlock",
													"src": "300:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:12",
																		"nodeType": "YulLiteral",
																		"src": "317:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:12",
																		"nodeType": "YulLiteral",
																		"src": "320:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:12"
																},
																"nativeSrc": "310:12:12",
																"nodeType": "YulFunctionCall",
																"src": "310:12:12"
															},
															"nativeSrc": "310:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:12"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:12"
											},
											{
												"body": {
													"nativeSrc": "378:105:12",
													"nodeType": "YulBlock",
													"src": "378:105:12",
													"statements": [
														{
															"nativeSrc": "388:89:12",
															"nodeType": "YulAssignment",
															"src": "388:89:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "403:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "410:66:12",
																		"nodeType": "YulLiteral",
																		"src": "410:66:12",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "399:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:12"
																},
																"nativeSrc": "399:78:12",
																"nodeType": "YulFunctionCall",
																"src": "399:78:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "388:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nativeSrc": "334:149:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "360:5:12",
														"nodeType": "YulTypedName",
														"src": "360:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "370:7:12",
														"nodeType": "YulTypedName",
														"src": "370:7:12",
														"type": ""
													}
												],
												"src": "334:149:12"
											},
											{
												"body": {
													"nativeSrc": "531:78:12",
													"nodeType": "YulBlock",
													"src": "531:78:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "587:16:12",
																"nodeType": "YulBlock",
																"src": "587:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "596:1:12",
																					"nodeType": "YulLiteral",
																					"src": "596:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "599:1:12",
																					"nodeType": "YulLiteral",
																					"src": "599:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "589:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:12"
																			},
																			"nativeSrc": "589:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:12"
																		},
																		"nativeSrc": "589:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "554:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "578:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nativeSrc": "561:16:12",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:12"
																				},
																				"nativeSrc": "561:23:12",
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "551:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:12"
																		},
																		"nativeSrc": "551:34:12",
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "544:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:12"
																},
																"nativeSrc": "544:42:12",
																"nodeType": "YulFunctionCall",
																"src": "544:42:12"
															},
															"nativeSrc": "541:62:12",
															"nodeType": "YulIf",
															"src": "541:62:12"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nativeSrc": "489:120:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "524:5:12",
														"nodeType": "YulTypedName",
														"src": "524:5:12",
														"type": ""
													}
												],
												"src": "489:120:12"
											},
											{
												"body": {
													"nativeSrc": "666:86:12",
													"nodeType": "YulBlock",
													"src": "666:86:12",
													"statements": [
														{
															"nativeSrc": "676:29:12",
															"nodeType": "YulAssignment",
															"src": "676:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "698:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "685:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:12"
																},
																"nativeSrc": "685:20:12",
																"nodeType": "YulFunctionCall",
																"src": "685:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "676:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "740:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "714:25:12",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:12"
																},
																"nativeSrc": "714:32:12",
																"nodeType": "YulFunctionCall",
																"src": "714:32:12"
															},
															"nativeSrc": "714:32:12",
															"nodeType": "YulExpressionStatement",
															"src": "714:32:12"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nativeSrc": "615:137:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "644:6:12",
														"nodeType": "YulTypedName",
														"src": "644:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "652:3:12",
														"nodeType": "YulTypedName",
														"src": "652:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "660:5:12",
														"nodeType": "YulTypedName",
														"src": "660:5:12",
														"type": ""
													}
												],
												"src": "615:137:12"
											},
											{
												"body": {
													"nativeSrc": "823:262:12",
													"nodeType": "YulBlock",
													"src": "823:262:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "869:83:12",
																"nodeType": "YulBlock",
																"src": "869:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "871:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:12"
																			},
																			"nativeSrc": "871:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:12"
																		},
																		"nativeSrc": "871:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "844:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "853:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "840:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:12"
																		},
																		"nativeSrc": "840:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "865:2:12",
																		"nodeType": "YulLiteral",
																		"src": "865:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "836:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:12"
																},
																"nativeSrc": "836:32:12",
																"nodeType": "YulFunctionCall",
																"src": "836:32:12"
															},
															"nativeSrc": "833:119:12",
															"nodeType": "YulIf",
															"src": "833:119:12"
														},
														{
															"nativeSrc": "962:116:12",
															"nodeType": "YulBlock",
															"src": "962:116:12",
															"statements": [
																{
																	"nativeSrc": "977:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "991:1:12",
																		"nodeType": "YulLiteral",
																		"src": "991:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "981:6:12",
																			"nodeType": "YulTypedName",
																			"src": "981:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1006:62:12",
																	"nodeType": "YulAssignment",
																	"src": "1006:62:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1040:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1051:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1036:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:12"
																				},
																				"nativeSrc": "1036:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1060:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nativeSrc": "1016:19:12",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:12"
																		},
																		"nativeSrc": "1016:52:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1006:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "758:327:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "793:9:12",
														"nodeType": "YulTypedName",
														"src": "793:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "804:7:12",
														"nodeType": "YulTypedName",
														"src": "804:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "816:6:12",
														"nodeType": "YulTypedName",
														"src": "816:6:12",
														"type": ""
													}
												],
												"src": "758:327:12"
											},
											{
												"body": {
													"nativeSrc": "1133:48:12",
													"nodeType": "YulBlock",
													"src": "1133:48:12",
													"statements": [
														{
															"nativeSrc": "1143:32:12",
															"nodeType": "YulAssignment",
															"src": "1143:32:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1168:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:12"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1161:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:12"
																		},
																		"nativeSrc": "1161:13:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1154:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:12"
																},
																"nativeSrc": "1154:21:12",
																"nodeType": "YulFunctionCall",
																"src": "1154:21:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1143:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1091:90:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1115:5:12",
														"nodeType": "YulTypedName",
														"src": "1115:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1125:7:12",
														"nodeType": "YulTypedName",
														"src": "1125:7:12",
														"type": ""
													}
												],
												"src": "1091:90:12"
											},
											{
												"body": {
													"nativeSrc": "1246:50:12",
													"nodeType": "YulBlock",
													"src": "1246:50:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1263:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1283:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1268:14:12",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:12"
																		},
																		"nativeSrc": "1268:21:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1256:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:12"
																},
																"nativeSrc": "1256:34:12",
																"nodeType": "YulFunctionCall",
																"src": "1256:34:12"
															},
															"nativeSrc": "1256:34:12",
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:12"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1187:109:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1234:5:12",
														"nodeType": "YulTypedName",
														"src": "1234:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1241:3:12",
														"nodeType": "YulTypedName",
														"src": "1241:3:12",
														"type": ""
													}
												],
												"src": "1187:109:12"
											},
											{
												"body": {
													"nativeSrc": "1394:118:12",
													"nodeType": "YulBlock",
													"src": "1394:118:12",
													"statements": [
														{
															"nativeSrc": "1404:26:12",
															"nodeType": "YulAssignment",
															"src": "1404:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1416:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1427:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1412:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:12"
																},
																"nativeSrc": "1412:18:12",
																"nodeType": "YulFunctionCall",
																"src": "1412:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1404:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1478:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1491:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1502:1:12",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1487:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:12"
																		},
																		"nativeSrc": "1487:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "1440:37:12",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:12"
																},
																"nativeSrc": "1440:65:12",
																"nodeType": "YulFunctionCall",
																"src": "1440:65:12"
															},
															"nativeSrc": "1440:65:12",
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1302:210:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1366:9:12",
														"nodeType": "YulTypedName",
														"src": "1366:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1378:6:12",
														"nodeType": "YulTypedName",
														"src": "1378:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1389:4:12",
														"nodeType": "YulTypedName",
														"src": "1389:4:12",
														"type": ""
													}
												],
												"src": "1302:210:12"
											},
											{
												"body": {
													"nativeSrc": "1577:40:12",
													"nodeType": "YulBlock",
													"src": "1577:40:12",
													"statements": [
														{
															"nativeSrc": "1588:22:12",
															"nodeType": "YulAssignment",
															"src": "1588:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1604:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "1604:5:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1598:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "1598:5:12"
																},
																"nativeSrc": "1598:12:12",
																"nodeType": "YulFunctionCall",
																"src": "1598:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1588:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1588:6:12"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1518:99:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1560:5:12",
														"nodeType": "YulTypedName",
														"src": "1560:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1570:6:12",
														"nodeType": "YulTypedName",
														"src": "1570:6:12",
														"type": ""
													}
												],
												"src": "1518:99:12"
											},
											{
												"body": {
													"nativeSrc": "1719:73:12",
													"nodeType": "YulBlock",
													"src": "1719:73:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1736:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "1736:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1741:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1741:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1729:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1729:6:12"
																},
																"nativeSrc": "1729:19:12",
																"nodeType": "YulFunctionCall",
																"src": "1729:19:12"
															},
															"nativeSrc": "1729:19:12",
															"nodeType": "YulExpressionStatement",
															"src": "1729:19:12"
														},
														{
															"nativeSrc": "1757:29:12",
															"nodeType": "YulAssignment",
															"src": "1757:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1776:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "1776:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1781:4:12",
																		"nodeType": "YulLiteral",
																		"src": "1781:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1772:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1772:3:12"
																},
																"nativeSrc": "1772:14:12",
																"nodeType": "YulFunctionCall",
																"src": "1772:14:12"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "1757:11:12",
																	"nodeType": "YulIdentifier",
																	"src": "1757:11:12"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "1623:169:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1691:3:12",
														"nodeType": "YulTypedName",
														"src": "1691:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1696:6:12",
														"nodeType": "YulTypedName",
														"src": "1696:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "1707:11:12",
														"nodeType": "YulTypedName",
														"src": "1707:11:12",
														"type": ""
													}
												],
												"src": "1623:169:12"
											},
											{
												"body": {
													"nativeSrc": "1860:77:12",
													"nodeType": "YulBlock",
													"src": "1860:77:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "1877:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "1877:3:12"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "1882:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "1882:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1887:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1887:6:12"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "1871:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "1871:5:12"
																},
																"nativeSrc": "1871:23:12",
																"nodeType": "YulFunctionCall",
																"src": "1871:23:12"
															},
															"nativeSrc": "1871:23:12",
															"nodeType": "YulExpressionStatement",
															"src": "1871:23:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "1914:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "1914:3:12"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "1919:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "1919:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1910:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1910:3:12"
																		},
																		"nativeSrc": "1910:16:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1910:16:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1928:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1928:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1903:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1903:6:12"
																},
																"nativeSrc": "1903:27:12",
																"nodeType": "YulFunctionCall",
																"src": "1903:27:12"
															},
															"nativeSrc": "1903:27:12",
															"nodeType": "YulExpressionStatement",
															"src": "1903:27:12"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1798:139:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1842:3:12",
														"nodeType": "YulTypedName",
														"src": "1842:3:12",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1847:3:12",
														"nodeType": "YulTypedName",
														"src": "1847:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1852:6:12",
														"nodeType": "YulTypedName",
														"src": "1852:6:12",
														"type": ""
													}
												],
												"src": "1798:139:12"
											},
											{
												"body": {
													"nativeSrc": "1991:54:12",
													"nodeType": "YulBlock",
													"src": "1991:54:12",
													"statements": [
														{
															"nativeSrc": "2001:38:12",
															"nodeType": "YulAssignment",
															"src": "2001:38:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2019:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "2019:5:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2026:2:12",
																				"nodeType": "YulLiteral",
																				"src": "2026:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2015:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2015:3:12"
																		},
																		"nativeSrc": "2015:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2015:14:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2035:2:12",
																				"nodeType": "YulLiteral",
																				"src": "2035:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2031:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2031:3:12"
																		},
																		"nativeSrc": "2031:7:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2031:7:12"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2011:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2011:3:12"
																},
																"nativeSrc": "2011:28:12",
																"nodeType": "YulFunctionCall",
																"src": "2011:28:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2001:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2001:6:12"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "1943:102:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1974:5:12",
														"nodeType": "YulTypedName",
														"src": "1974:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1984:6:12",
														"nodeType": "YulTypedName",
														"src": "1984:6:12",
														"type": ""
													}
												],
												"src": "1943:102:12"
											},
											{
												"body": {
													"nativeSrc": "2143:285:12",
													"nodeType": "YulBlock",
													"src": "2143:285:12",
													"statements": [
														{
															"nativeSrc": "2153:53:12",
															"nodeType": "YulVariableDeclaration",
															"src": "2153:53:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2200:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "2200:5:12"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "2167:32:12",
																	"nodeType": "YulIdentifier",
																	"src": "2167:32:12"
																},
																"nativeSrc": "2167:39:12",
																"nodeType": "YulFunctionCall",
																"src": "2167:39:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2157:6:12",
																	"nodeType": "YulTypedName",
																	"src": "2157:6:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2215:78:12",
															"nodeType": "YulAssignment",
															"src": "2215:78:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2281:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "2281:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2286:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2286:6:12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2222:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "2222:58:12"
																},
																"nativeSrc": "2222:71:12",
																"nodeType": "YulFunctionCall",
																"src": "2222:71:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2215:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2215:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2341:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "2341:5:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2348:4:12",
																				"nodeType": "YulLiteral",
																				"src": "2348:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2337:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2337:3:12"
																		},
																		"nativeSrc": "2337:16:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2337:16:12"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "2355:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "2355:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2360:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2360:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2302:34:12",
																	"nodeType": "YulIdentifier",
																	"src": "2302:34:12"
																},
																"nativeSrc": "2302:65:12",
																"nodeType": "YulFunctionCall",
																"src": "2302:65:12"
															},
															"nativeSrc": "2302:65:12",
															"nodeType": "YulExpressionStatement",
															"src": "2302:65:12"
														},
														{
															"nativeSrc": "2376:46:12",
															"nodeType": "YulAssignment",
															"src": "2376:46:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2387:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "2387:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2414:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "2414:6:12"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "2392:21:12",
																			"nodeType": "YulIdentifier",
																			"src": "2392:21:12"
																		},
																		"nativeSrc": "2392:29:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2392:29:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2383:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2383:3:12"
																},
																"nativeSrc": "2383:39:12",
																"nodeType": "YulFunctionCall",
																"src": "2383:39:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2376:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2376:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "2051:377:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2124:5:12",
														"nodeType": "YulTypedName",
														"src": "2124:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2131:3:12",
														"nodeType": "YulTypedName",
														"src": "2131:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2139:3:12",
														"nodeType": "YulTypedName",
														"src": "2139:3:12",
														"type": ""
													}
												],
												"src": "2051:377:12"
											},
											{
												"body": {
													"nativeSrc": "2552:195:12",
													"nodeType": "YulBlock",
													"src": "2552:195:12",
													"statements": [
														{
															"nativeSrc": "2562:26:12",
															"nodeType": "YulAssignment",
															"src": "2562:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2574:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "2574:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2585:2:12",
																		"nodeType": "YulLiteral",
																		"src": "2585:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2570:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2570:3:12"
																},
																"nativeSrc": "2570:18:12",
																"nodeType": "YulFunctionCall",
																"src": "2570:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2562:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "2562:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2609:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "2609:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2620:1:12",
																				"nodeType": "YulLiteral",
																				"src": "2620:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2605:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2605:3:12"
																		},
																		"nativeSrc": "2605:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2605:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2628:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "2628:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2634:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "2634:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2624:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2624:3:12"
																		},
																		"nativeSrc": "2624:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2624:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2598:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2598:6:12"
																},
																"nativeSrc": "2598:47:12",
																"nodeType": "YulFunctionCall",
																"src": "2598:47:12"
															},
															"nativeSrc": "2598:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "2598:47:12"
														},
														{
															"nativeSrc": "2654:86:12",
															"nodeType": "YulAssignment",
															"src": "2654:86:12",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2726:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2726:6:12"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "2735:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "2735:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2662:63:12",
																	"nodeType": "YulIdentifier",
																	"src": "2662:63:12"
																},
																"nativeSrc": "2662:78:12",
																"nodeType": "YulFunctionCall",
																"src": "2662:78:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2654:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "2654:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2434:313:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2524:9:12",
														"nodeType": "YulTypedName",
														"src": "2524:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2536:6:12",
														"nodeType": "YulTypedName",
														"src": "2536:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2547:4:12",
														"nodeType": "YulTypedName",
														"src": "2547:4:12",
														"type": ""
													}
												],
												"src": "2434:313:12"
											},
											{
												"body": {
													"nativeSrc": "2798:81:12",
													"nodeType": "YulBlock",
													"src": "2798:81:12",
													"statements": [
														{
															"nativeSrc": "2808:65:12",
															"nodeType": "YulAssignment",
															"src": "2808:65:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2823:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "2823:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2830:42:12",
																		"nodeType": "YulLiteral",
																		"src": "2830:42:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2819:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2819:3:12"
																},
																"nativeSrc": "2819:54:12",
																"nodeType": "YulFunctionCall",
																"src": "2819:54:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2808:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "2808:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "2753:126:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2780:5:12",
														"nodeType": "YulTypedName",
														"src": "2780:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2790:7:12",
														"nodeType": "YulTypedName",
														"src": "2790:7:12",
														"type": ""
													}
												],
												"src": "2753:126:12"
											},
											{
												"body": {
													"nativeSrc": "2930:51:12",
													"nodeType": "YulBlock",
													"src": "2930:51:12",
													"statements": [
														{
															"nativeSrc": "2940:35:12",
															"nodeType": "YulAssignment",
															"src": "2940:35:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2969:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "2969:5:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2951:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "2951:17:12"
																},
																"nativeSrc": "2951:24:12",
																"nodeType": "YulFunctionCall",
																"src": "2951:24:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2940:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "2940:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "2885:96:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2912:5:12",
														"nodeType": "YulTypedName",
														"src": "2912:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2922:7:12",
														"nodeType": "YulTypedName",
														"src": "2922:7:12",
														"type": ""
													}
												],
												"src": "2885:96:12"
											},
											{
												"body": {
													"nativeSrc": "3030:79:12",
													"nodeType": "YulBlock",
													"src": "3030:79:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "3087:16:12",
																"nodeType": "YulBlock",
																"src": "3087:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3096:1:12",
																					"nodeType": "YulLiteral",
																					"src": "3096:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3099:1:12",
																					"nodeType": "YulLiteral",
																					"src": "3099:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3089:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "3089:6:12"
																			},
																			"nativeSrc": "3089:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3089:12:12"
																		},
																		"nativeSrc": "3089:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "3089:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3053:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "3053:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3078:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "3078:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "3060:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "3060:17:12"
																				},
																				"nativeSrc": "3060:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3060:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3050:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "3050:2:12"
																		},
																		"nativeSrc": "3050:35:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3050:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3043:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3043:6:12"
																},
																"nativeSrc": "3043:43:12",
																"nodeType": "YulFunctionCall",
																"src": "3043:43:12"
															},
															"nativeSrc": "3040:63:12",
															"nodeType": "YulIf",
															"src": "3040:63:12"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "2987:122:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3023:5:12",
														"nodeType": "YulTypedName",
														"src": "3023:5:12",
														"type": ""
													}
												],
												"src": "2987:122:12"
											},
											{
												"body": {
													"nativeSrc": "3167:87:12",
													"nodeType": "YulBlock",
													"src": "3167:87:12",
													"statements": [
														{
															"nativeSrc": "3177:29:12",
															"nodeType": "YulAssignment",
															"src": "3177:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3199:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "3199:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3186:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "3186:12:12"
																},
																"nativeSrc": "3186:20:12",
																"nodeType": "YulFunctionCall",
																"src": "3186:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3177:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "3177:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3242:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "3242:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "3215:26:12",
																	"nodeType": "YulIdentifier",
																	"src": "3215:26:12"
																},
																"nativeSrc": "3215:33:12",
																"nodeType": "YulFunctionCall",
																"src": "3215:33:12"
															},
															"nativeSrc": "3215:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "3215:33:12"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "3115:139:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3145:6:12",
														"nodeType": "YulTypedName",
														"src": "3145:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3153:3:12",
														"nodeType": "YulTypedName",
														"src": "3153:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3161:5:12",
														"nodeType": "YulTypedName",
														"src": "3161:5:12",
														"type": ""
													}
												],
												"src": "3115:139:12"
											},
											{
												"body": {
													"nativeSrc": "3305:32:12",
													"nodeType": "YulBlock",
													"src": "3305:32:12",
													"statements": [
														{
															"nativeSrc": "3315:16:12",
															"nodeType": "YulAssignment",
															"src": "3315:16:12",
															"value": {
																"name": "value",
																"nativeSrc": "3326:5:12",
																"nodeType": "YulIdentifier",
																"src": "3326:5:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3315:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "3315:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "3260:77:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3287:5:12",
														"nodeType": "YulTypedName",
														"src": "3287:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3297:7:12",
														"nodeType": "YulTypedName",
														"src": "3297:7:12",
														"type": ""
													}
												],
												"src": "3260:77:12"
											},
											{
												"body": {
													"nativeSrc": "3386:79:12",
													"nodeType": "YulBlock",
													"src": "3386:79:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "3443:16:12",
																"nodeType": "YulBlock",
																"src": "3443:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3452:1:12",
																					"nodeType": "YulLiteral",
																					"src": "3452:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3455:1:12",
																					"nodeType": "YulLiteral",
																					"src": "3455:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3445:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "3445:6:12"
																			},
																			"nativeSrc": "3445:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3445:12:12"
																		},
																		"nativeSrc": "3445:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "3445:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3409:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "3409:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3434:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "3434:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3416:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "3416:17:12"
																				},
																				"nativeSrc": "3416:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3416:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3406:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "3406:2:12"
																		},
																		"nativeSrc": "3406:35:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3406:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3399:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3399:6:12"
																},
																"nativeSrc": "3399:43:12",
																"nodeType": "YulFunctionCall",
																"src": "3399:43:12"
															},
															"nativeSrc": "3396:63:12",
															"nodeType": "YulIf",
															"src": "3396:63:12"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "3343:122:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3379:5:12",
														"nodeType": "YulTypedName",
														"src": "3379:5:12",
														"type": ""
													}
												],
												"src": "3343:122:12"
											},
											{
												"body": {
													"nativeSrc": "3523:87:12",
													"nodeType": "YulBlock",
													"src": "3523:87:12",
													"statements": [
														{
															"nativeSrc": "3533:29:12",
															"nodeType": "YulAssignment",
															"src": "3533:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3555:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "3555:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3542:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "3542:12:12"
																},
																"nativeSrc": "3542:20:12",
																"nodeType": "YulFunctionCall",
																"src": "3542:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3533:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "3533:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3598:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "3598:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "3571:26:12",
																	"nodeType": "YulIdentifier",
																	"src": "3571:26:12"
																},
																"nativeSrc": "3571:33:12",
																"nodeType": "YulFunctionCall",
																"src": "3571:33:12"
															},
															"nativeSrc": "3571:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "3571:33:12"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "3471:139:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3501:6:12",
														"nodeType": "YulTypedName",
														"src": "3501:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3509:3:12",
														"nodeType": "YulTypedName",
														"src": "3509:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3517:5:12",
														"nodeType": "YulTypedName",
														"src": "3517:5:12",
														"type": ""
													}
												],
												"src": "3471:139:12"
											},
											{
												"body": {
													"nativeSrc": "3699:391:12",
													"nodeType": "YulBlock",
													"src": "3699:391:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "3745:83:12",
																"nodeType": "YulBlock",
																"src": "3745:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3747:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "3747:77:12"
																			},
																			"nativeSrc": "3747:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3747:79:12"
																		},
																		"nativeSrc": "3747:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "3747:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3720:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "3720:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3729:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "3729:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3716:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3716:3:12"
																		},
																		"nativeSrc": "3716:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3716:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3741:2:12",
																		"nodeType": "YulLiteral",
																		"src": "3741:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3712:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3712:3:12"
																},
																"nativeSrc": "3712:32:12",
																"nodeType": "YulFunctionCall",
																"src": "3712:32:12"
															},
															"nativeSrc": "3709:119:12",
															"nodeType": "YulIf",
															"src": "3709:119:12"
														},
														{
															"nativeSrc": "3838:117:12",
															"nodeType": "YulBlock",
															"src": "3838:117:12",
															"statements": [
																{
																	"nativeSrc": "3853:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3853:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3867:1:12",
																		"nodeType": "YulLiteral",
																		"src": "3867:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3857:6:12",
																			"nodeType": "YulTypedName",
																			"src": "3857:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3882:63:12",
																	"nodeType": "YulAssignment",
																	"src": "3882:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3917:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "3917:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3928:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "3928:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3913:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "3913:3:12"
																				},
																				"nativeSrc": "3913:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3913:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3937:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "3937:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3892:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "3892:20:12"
																		},
																		"nativeSrc": "3892:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3892:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3882:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "3882:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3965:118:12",
															"nodeType": "YulBlock",
															"src": "3965:118:12",
															"statements": [
																{
																	"nativeSrc": "3980:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3980:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3994:2:12",
																		"nodeType": "YulLiteral",
																		"src": "3994:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3984:6:12",
																			"nodeType": "YulTypedName",
																			"src": "3984:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4010:63:12",
																	"nodeType": "YulAssignment",
																	"src": "4010:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4045:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "4045:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4056:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "4056:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4041:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "4041:3:12"
																				},
																				"nativeSrc": "4041:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4041:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4065:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "4065:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4020:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "4020:20:12"
																		},
																		"nativeSrc": "4020:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4020:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4010:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "4010:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "3616:474:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3661:9:12",
														"nodeType": "YulTypedName",
														"src": "3661:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3672:7:12",
														"nodeType": "YulTypedName",
														"src": "3672:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3684:6:12",
														"nodeType": "YulTypedName",
														"src": "3684:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3692:6:12",
														"nodeType": "YulTypedName",
														"src": "3692:6:12",
														"type": ""
													}
												],
												"src": "3616:474:12"
											},
											{
												"body": {
													"nativeSrc": "4161:53:12",
													"nodeType": "YulBlock",
													"src": "4161:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4178:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "4178:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4201:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "4201:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "4183:17:12",
																			"nodeType": "YulIdentifier",
																			"src": "4183:17:12"
																		},
																		"nativeSrc": "4183:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4183:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4171:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4171:6:12"
																},
																"nativeSrc": "4171:37:12",
																"nodeType": "YulFunctionCall",
																"src": "4171:37:12"
															},
															"nativeSrc": "4171:37:12",
															"nodeType": "YulExpressionStatement",
															"src": "4171:37:12"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "4096:118:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4149:5:12",
														"nodeType": "YulTypedName",
														"src": "4149:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4156:3:12",
														"nodeType": "YulTypedName",
														"src": "4156:3:12",
														"type": ""
													}
												],
												"src": "4096:118:12"
											},
											{
												"body": {
													"nativeSrc": "4318:124:12",
													"nodeType": "YulBlock",
													"src": "4318:124:12",
													"statements": [
														{
															"nativeSrc": "4328:26:12",
															"nodeType": "YulAssignment",
															"src": "4328:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4340:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "4340:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4351:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4351:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4336:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4336:3:12"
																},
																"nativeSrc": "4336:18:12",
																"nodeType": "YulFunctionCall",
																"src": "4336:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4328:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "4328:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4408:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "4408:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4421:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "4421:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4432:1:12",
																				"nodeType": "YulLiteral",
																				"src": "4432:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4417:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4417:3:12"
																		},
																		"nativeSrc": "4417:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4417:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4364:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "4364:43:12"
																},
																"nativeSrc": "4364:71:12",
																"nodeType": "YulFunctionCall",
																"src": "4364:71:12"
															},
															"nativeSrc": "4364:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "4364:71:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "4220:222:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4290:9:12",
														"nodeType": "YulTypedName",
														"src": "4290:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4302:6:12",
														"nodeType": "YulTypedName",
														"src": "4302:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4313:4:12",
														"nodeType": "YulTypedName",
														"src": "4313:4:12",
														"type": ""
													}
												],
												"src": "4220:222:12"
											},
											{
												"body": {
													"nativeSrc": "4548:519:12",
													"nodeType": "YulBlock",
													"src": "4548:519:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "4594:83:12",
																"nodeType": "YulBlock",
																"src": "4594:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4596:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "4596:77:12"
																			},
																			"nativeSrc": "4596:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "4596:79:12"
																		},
																		"nativeSrc": "4596:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "4596:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4569:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "4569:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4578:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "4578:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4565:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4565:3:12"
																		},
																		"nativeSrc": "4565:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4565:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4590:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4590:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4561:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4561:3:12"
																},
																"nativeSrc": "4561:32:12",
																"nodeType": "YulFunctionCall",
																"src": "4561:32:12"
															},
															"nativeSrc": "4558:119:12",
															"nodeType": "YulIf",
															"src": "4558:119:12"
														},
														{
															"nativeSrc": "4687:117:12",
															"nodeType": "YulBlock",
															"src": "4687:117:12",
															"statements": [
																{
																	"nativeSrc": "4702:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4702:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4716:1:12",
																		"nodeType": "YulLiteral",
																		"src": "4716:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4706:6:12",
																			"nodeType": "YulTypedName",
																			"src": "4706:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4731:63:12",
																	"nodeType": "YulAssignment",
																	"src": "4731:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4766:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "4766:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4777:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "4777:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4762:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "4762:3:12"
																				},
																				"nativeSrc": "4762:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4762:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4786:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "4786:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4741:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "4741:20:12"
																		},
																		"nativeSrc": "4741:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4741:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4731:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "4731:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4814:118:12",
															"nodeType": "YulBlock",
															"src": "4814:118:12",
															"statements": [
																{
																	"nativeSrc": "4829:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4829:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4843:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4843:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4833:6:12",
																			"nodeType": "YulTypedName",
																			"src": "4833:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4859:63:12",
																	"nodeType": "YulAssignment",
																	"src": "4859:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4894:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "4894:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4905:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "4905:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4890:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "4890:3:12"
																				},
																				"nativeSrc": "4890:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4890:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4914:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "4914:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4869:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "4869:20:12"
																		},
																		"nativeSrc": "4869:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4869:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4859:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "4859:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4942:118:12",
															"nodeType": "YulBlock",
															"src": "4942:118:12",
															"statements": [
																{
																	"nativeSrc": "4957:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4957:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4971:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4971:2:12",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4961:6:12",
																			"nodeType": "YulTypedName",
																			"src": "4961:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4987:63:12",
																	"nodeType": "YulAssignment",
																	"src": "4987:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5022:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "5022:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5033:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "5033:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5018:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "5018:3:12"
																				},
																				"nativeSrc": "5018:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "5018:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5042:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "5042:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4997:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "4997:20:12"
																		},
																		"nativeSrc": "4997:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4997:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4987:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "4987:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "4448:619:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4502:9:12",
														"nodeType": "YulTypedName",
														"src": "4502:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4513:7:12",
														"nodeType": "YulTypedName",
														"src": "4513:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4525:6:12",
														"nodeType": "YulTypedName",
														"src": "4525:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4533:6:12",
														"nodeType": "YulTypedName",
														"src": "4533:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4541:6:12",
														"nodeType": "YulTypedName",
														"src": "4541:6:12",
														"type": ""
													}
												],
												"src": "4448:619:12"
											},
											{
												"body": {
													"nativeSrc": "5118:32:12",
													"nodeType": "YulBlock",
													"src": "5118:32:12",
													"statements": [
														{
															"nativeSrc": "5128:16:12",
															"nodeType": "YulAssignment",
															"src": "5128:16:12",
															"value": {
																"name": "value",
																"nativeSrc": "5139:5:12",
																"nodeType": "YulIdentifier",
																"src": "5139:5:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5128:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "5128:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nativeSrc": "5073:77:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5100:5:12",
														"nodeType": "YulTypedName",
														"src": "5100:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5110:7:12",
														"nodeType": "YulTypedName",
														"src": "5110:7:12",
														"type": ""
													}
												],
												"src": "5073:77:12"
											},
											{
												"body": {
													"nativeSrc": "5199:79:12",
													"nodeType": "YulBlock",
													"src": "5199:79:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "5256:16:12",
																"nodeType": "YulBlock",
																"src": "5256:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5265:1:12",
																					"nodeType": "YulLiteral",
																					"src": "5265:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5268:1:12",
																					"nodeType": "YulLiteral",
																					"src": "5268:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5258:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "5258:6:12"
																			},
																			"nativeSrc": "5258:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "5258:12:12"
																		},
																		"nativeSrc": "5258:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "5258:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5222:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "5222:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5247:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "5247:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nativeSrc": "5229:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "5229:17:12"
																				},
																				"nativeSrc": "5229:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "5229:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "5219:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "5219:2:12"
																		},
																		"nativeSrc": "5219:35:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5219:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5212:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5212:6:12"
																},
																"nativeSrc": "5212:43:12",
																"nodeType": "YulFunctionCall",
																"src": "5212:43:12"
															},
															"nativeSrc": "5209:63:12",
															"nodeType": "YulIf",
															"src": "5209:63:12"
														}
													]
												},
												"name": "validator_revert_t_bytes32",
												"nativeSrc": "5156:122:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5192:5:12",
														"nodeType": "YulTypedName",
														"src": "5192:5:12",
														"type": ""
													}
												],
												"src": "5156:122:12"
											},
											{
												"body": {
													"nativeSrc": "5336:87:12",
													"nodeType": "YulBlock",
													"src": "5336:87:12",
													"statements": [
														{
															"nativeSrc": "5346:29:12",
															"nodeType": "YulAssignment",
															"src": "5346:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5368:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "5368:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5355:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "5355:12:12"
																},
																"nativeSrc": "5355:20:12",
																"nodeType": "YulFunctionCall",
																"src": "5355:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5346:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "5346:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5411:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "5411:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nativeSrc": "5384:26:12",
																	"nodeType": "YulIdentifier",
																	"src": "5384:26:12"
																},
																"nativeSrc": "5384:33:12",
																"nodeType": "YulFunctionCall",
																"src": "5384:33:12"
															},
															"nativeSrc": "5384:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "5384:33:12"
														}
													]
												},
												"name": "abi_decode_t_bytes32",
												"nativeSrc": "5284:139:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "5314:6:12",
														"nodeType": "YulTypedName",
														"src": "5314:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5322:3:12",
														"nodeType": "YulTypedName",
														"src": "5322:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "5330:5:12",
														"nodeType": "YulTypedName",
														"src": "5330:5:12",
														"type": ""
													}
												],
												"src": "5284:139:12"
											},
											{
												"body": {
													"nativeSrc": "5495:263:12",
													"nodeType": "YulBlock",
													"src": "5495:263:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "5541:83:12",
																"nodeType": "YulBlock",
																"src": "5541:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5543:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "5543:77:12"
																			},
																			"nativeSrc": "5543:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "5543:79:12"
																		},
																		"nativeSrc": "5543:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "5543:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5516:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "5516:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5525:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "5525:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5512:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5512:3:12"
																		},
																		"nativeSrc": "5512:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5512:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5537:2:12",
																		"nodeType": "YulLiteral",
																		"src": "5537:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5508:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5508:3:12"
																},
																"nativeSrc": "5508:32:12",
																"nodeType": "YulFunctionCall",
																"src": "5508:32:12"
															},
															"nativeSrc": "5505:119:12",
															"nodeType": "YulIf",
															"src": "5505:119:12"
														},
														{
															"nativeSrc": "5634:117:12",
															"nodeType": "YulBlock",
															"src": "5634:117:12",
															"statements": [
																{
																	"nativeSrc": "5649:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5649:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5663:1:12",
																		"nodeType": "YulLiteral",
																		"src": "5663:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5653:6:12",
																			"nodeType": "YulTypedName",
																			"src": "5653:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5678:63:12",
																	"nodeType": "YulAssignment",
																	"src": "5678:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5713:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "5713:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5724:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "5724:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5709:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "5709:3:12"
																				},
																				"nativeSrc": "5709:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "5709:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5733:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "5733:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "5688:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "5688:20:12"
																		},
																		"nativeSrc": "5688:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5688:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5678:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "5678:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nativeSrc": "5429:329:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5465:9:12",
														"nodeType": "YulTypedName",
														"src": "5465:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5476:7:12",
														"nodeType": "YulTypedName",
														"src": "5476:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5488:6:12",
														"nodeType": "YulTypedName",
														"src": "5488:6:12",
														"type": ""
													}
												],
												"src": "5429:329:12"
											},
											{
												"body": {
													"nativeSrc": "5829:53:12",
													"nodeType": "YulBlock",
													"src": "5829:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5846:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "5846:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5869:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "5869:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nativeSrc": "5851:17:12",
																			"nodeType": "YulIdentifier",
																			"src": "5851:17:12"
																		},
																		"nativeSrc": "5851:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5851:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5839:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5839:6:12"
																},
																"nativeSrc": "5839:37:12",
																"nodeType": "YulFunctionCall",
																"src": "5839:37:12"
															},
															"nativeSrc": "5839:37:12",
															"nodeType": "YulExpressionStatement",
															"src": "5839:37:12"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nativeSrc": "5764:118:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5817:5:12",
														"nodeType": "YulTypedName",
														"src": "5817:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5824:3:12",
														"nodeType": "YulTypedName",
														"src": "5824:3:12",
														"type": ""
													}
												],
												"src": "5764:118:12"
											},
											{
												"body": {
													"nativeSrc": "5986:124:12",
													"nodeType": "YulBlock",
													"src": "5986:124:12",
													"statements": [
														{
															"nativeSrc": "5996:26:12",
															"nodeType": "YulAssignment",
															"src": "5996:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6008:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "6008:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6019:2:12",
																		"nodeType": "YulLiteral",
																		"src": "6019:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6004:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6004:3:12"
																},
																"nativeSrc": "6004:18:12",
																"nodeType": "YulFunctionCall",
																"src": "6004:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5996:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "5996:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6076:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "6076:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6089:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "6089:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6100:1:12",
																				"nodeType": "YulLiteral",
																				"src": "6100:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6085:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6085:3:12"
																		},
																		"nativeSrc": "6085:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6085:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "6032:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "6032:43:12"
																},
																"nativeSrc": "6032:71:12",
																"nodeType": "YulFunctionCall",
																"src": "6032:71:12"
															},
															"nativeSrc": "6032:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "6032:71:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nativeSrc": "5888:222:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5958:9:12",
														"nodeType": "YulTypedName",
														"src": "5958:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5970:6:12",
														"nodeType": "YulTypedName",
														"src": "5970:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5981:4:12",
														"nodeType": "YulTypedName",
														"src": "5981:4:12",
														"type": ""
													}
												],
												"src": "5888:222:12"
											},
											{
												"body": {
													"nativeSrc": "6199:391:12",
													"nodeType": "YulBlock",
													"src": "6199:391:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "6245:83:12",
																"nodeType": "YulBlock",
																"src": "6245:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6247:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "6247:77:12"
																			},
																			"nativeSrc": "6247:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "6247:79:12"
																		},
																		"nativeSrc": "6247:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "6247:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6220:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "6220:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6229:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "6229:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6216:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6216:3:12"
																		},
																		"nativeSrc": "6216:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6216:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6241:2:12",
																		"nodeType": "YulLiteral",
																		"src": "6241:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6212:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6212:3:12"
																},
																"nativeSrc": "6212:32:12",
																"nodeType": "YulFunctionCall",
																"src": "6212:32:12"
															},
															"nativeSrc": "6209:119:12",
															"nodeType": "YulIf",
															"src": "6209:119:12"
														},
														{
															"nativeSrc": "6338:117:12",
															"nodeType": "YulBlock",
															"src": "6338:117:12",
															"statements": [
																{
																	"nativeSrc": "6353:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6353:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6367:1:12",
																		"nodeType": "YulLiteral",
																		"src": "6367:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6357:6:12",
																			"nodeType": "YulTypedName",
																			"src": "6357:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6382:63:12",
																	"nodeType": "YulAssignment",
																	"src": "6382:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6417:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "6417:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6428:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "6428:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6413:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "6413:3:12"
																				},
																				"nativeSrc": "6413:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "6413:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6437:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "6437:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "6392:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "6392:20:12"
																		},
																		"nativeSrc": "6392:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6392:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6382:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "6382:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6465:118:12",
															"nodeType": "YulBlock",
															"src": "6465:118:12",
															"statements": [
																{
																	"nativeSrc": "6480:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6480:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6494:2:12",
																		"nodeType": "YulLiteral",
																		"src": "6494:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6484:6:12",
																			"nodeType": "YulTypedName",
																			"src": "6484:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6510:63:12",
																	"nodeType": "YulAssignment",
																	"src": "6510:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6545:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "6545:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6556:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "6556:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6541:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "6541:3:12"
																				},
																				"nativeSrc": "6541:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "6541:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6565:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "6565:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6520:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "6520:20:12"
																		},
																		"nativeSrc": "6520:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6520:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6510:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "6510:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_address",
												"nativeSrc": "6116:474:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6161:9:12",
														"nodeType": "YulTypedName",
														"src": "6161:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6172:7:12",
														"nodeType": "YulTypedName",
														"src": "6172:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6184:6:12",
														"nodeType": "YulTypedName",
														"src": "6184:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6192:6:12",
														"nodeType": "YulTypedName",
														"src": "6192:6:12",
														"type": ""
													}
												],
												"src": "6116:474:12"
											},
											{
												"body": {
													"nativeSrc": "6639:43:12",
													"nodeType": "YulBlock",
													"src": "6639:43:12",
													"statements": [
														{
															"nativeSrc": "6649:27:12",
															"nodeType": "YulAssignment",
															"src": "6649:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6664:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "6664:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6671:4:12",
																		"nodeType": "YulLiteral",
																		"src": "6671:4:12",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6660:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6660:3:12"
																},
																"nativeSrc": "6660:16:12",
																"nodeType": "YulFunctionCall",
																"src": "6660:16:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "6649:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "6649:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "6596:86:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6621:5:12",
														"nodeType": "YulTypedName",
														"src": "6621:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "6631:7:12",
														"nodeType": "YulTypedName",
														"src": "6631:7:12",
														"type": ""
													}
												],
												"src": "6596:86:12"
											},
											{
												"body": {
													"nativeSrc": "6749:51:12",
													"nodeType": "YulBlock",
													"src": "6749:51:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6766:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "6766:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6787:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "6787:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "6771:15:12",
																			"nodeType": "YulIdentifier",
																			"src": "6771:15:12"
																		},
																		"nativeSrc": "6771:22:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6771:22:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6759:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6759:6:12"
																},
																"nativeSrc": "6759:35:12",
																"nodeType": "YulFunctionCall",
																"src": "6759:35:12"
															},
															"nativeSrc": "6759:35:12",
															"nodeType": "YulExpressionStatement",
															"src": "6759:35:12"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "6688:112:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6737:5:12",
														"nodeType": "YulTypedName",
														"src": "6737:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6744:3:12",
														"nodeType": "YulTypedName",
														"src": "6744:3:12",
														"type": ""
													}
												],
												"src": "6688:112:12"
											},
											{
												"body": {
													"nativeSrc": "6900:120:12",
													"nodeType": "YulBlock",
													"src": "6900:120:12",
													"statements": [
														{
															"nativeSrc": "6910:26:12",
															"nodeType": "YulAssignment",
															"src": "6910:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6922:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "6922:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6933:2:12",
																		"nodeType": "YulLiteral",
																		"src": "6933:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6918:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6918:3:12"
																},
																"nativeSrc": "6918:18:12",
																"nodeType": "YulFunctionCall",
																"src": "6918:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6910:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "6910:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6986:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "6986:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6999:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "6999:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7010:1:12",
																				"nodeType": "YulLiteral",
																				"src": "7010:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6995:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6995:3:12"
																		},
																		"nativeSrc": "6995:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6995:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "6946:39:12",
																	"nodeType": "YulIdentifier",
																	"src": "6946:39:12"
																},
																"nativeSrc": "6946:67:12",
																"nodeType": "YulFunctionCall",
																"src": "6946:67:12"
															},
															"nativeSrc": "6946:67:12",
															"nodeType": "YulExpressionStatement",
															"src": "6946:67:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "6806:214:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6872:9:12",
														"nodeType": "YulTypedName",
														"src": "6872:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6884:6:12",
														"nodeType": "YulTypedName",
														"src": "6884:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6895:4:12",
														"nodeType": "YulTypedName",
														"src": "6895:4:12",
														"type": ""
													}
												],
												"src": "6806:214:12"
											},
											{
												"body": {
													"nativeSrc": "7092:263:12",
													"nodeType": "YulBlock",
													"src": "7092:263:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "7138:83:12",
																"nodeType": "YulBlock",
																"src": "7138:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7140:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "7140:77:12"
																			},
																			"nativeSrc": "7140:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "7140:79:12"
																		},
																		"nativeSrc": "7140:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "7140:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7113:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "7113:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7122:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "7122:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7109:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7109:3:12"
																		},
																		"nativeSrc": "7109:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7109:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7134:2:12",
																		"nodeType": "YulLiteral",
																		"src": "7134:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7105:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7105:3:12"
																},
																"nativeSrc": "7105:32:12",
																"nodeType": "YulFunctionCall",
																"src": "7105:32:12"
															},
															"nativeSrc": "7102:119:12",
															"nodeType": "YulIf",
															"src": "7102:119:12"
														},
														{
															"nativeSrc": "7231:117:12",
															"nodeType": "YulBlock",
															"src": "7231:117:12",
															"statements": [
																{
																	"nativeSrc": "7246:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7246:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7260:1:12",
																		"nodeType": "YulLiteral",
																		"src": "7260:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7250:6:12",
																			"nodeType": "YulTypedName",
																			"src": "7250:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7275:63:12",
																	"nodeType": "YulAssignment",
																	"src": "7275:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7310:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "7310:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7321:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "7321:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7306:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "7306:3:12"
																				},
																				"nativeSrc": "7306:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "7306:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7330:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "7330:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7285:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "7285:20:12"
																		},
																		"nativeSrc": "7285:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7285:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7275:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "7275:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "7026:329:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7062:9:12",
														"nodeType": "YulTypedName",
														"src": "7062:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7073:7:12",
														"nodeType": "YulTypedName",
														"src": "7073:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7085:6:12",
														"nodeType": "YulTypedName",
														"src": "7085:6:12",
														"type": ""
													}
												],
												"src": "7026:329:12"
											},
											{
												"body": {
													"nativeSrc": "7444:391:12",
													"nodeType": "YulBlock",
													"src": "7444:391:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "7490:83:12",
																"nodeType": "YulBlock",
																"src": "7490:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7492:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "7492:77:12"
																			},
																			"nativeSrc": "7492:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "7492:79:12"
																		},
																		"nativeSrc": "7492:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "7492:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7465:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "7465:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7474:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "7474:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7461:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7461:3:12"
																		},
																		"nativeSrc": "7461:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7461:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7486:2:12",
																		"nodeType": "YulLiteral",
																		"src": "7486:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7457:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7457:3:12"
																},
																"nativeSrc": "7457:32:12",
																"nodeType": "YulFunctionCall",
																"src": "7457:32:12"
															},
															"nativeSrc": "7454:119:12",
															"nodeType": "YulIf",
															"src": "7454:119:12"
														},
														{
															"nativeSrc": "7583:117:12",
															"nodeType": "YulBlock",
															"src": "7583:117:12",
															"statements": [
																{
																	"nativeSrc": "7598:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7598:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7612:1:12",
																		"nodeType": "YulLiteral",
																		"src": "7612:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7602:6:12",
																			"nodeType": "YulTypedName",
																			"src": "7602:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7627:63:12",
																	"nodeType": "YulAssignment",
																	"src": "7627:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7662:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "7662:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7673:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "7673:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7658:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "7658:3:12"
																				},
																				"nativeSrc": "7658:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "7658:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7682:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "7682:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7637:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "7637:20:12"
																		},
																		"nativeSrc": "7637:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7637:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7627:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "7627:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7710:118:12",
															"nodeType": "YulBlock",
															"src": "7710:118:12",
															"statements": [
																{
																	"nativeSrc": "7725:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7725:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7739:2:12",
																		"nodeType": "YulLiteral",
																		"src": "7739:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7729:6:12",
																			"nodeType": "YulTypedName",
																			"src": "7729:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7755:63:12",
																	"nodeType": "YulAssignment",
																	"src": "7755:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7790:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "7790:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7801:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "7801:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7786:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "7786:3:12"
																				},
																				"nativeSrc": "7786:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "7786:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7810:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "7810:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7765:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "7765:20:12"
																		},
																		"nativeSrc": "7765:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7765:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "7755:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "7755:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "7361:474:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7406:9:12",
														"nodeType": "YulTypedName",
														"src": "7406:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7417:7:12",
														"nodeType": "YulTypedName",
														"src": "7417:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7429:6:12",
														"nodeType": "YulTypedName",
														"src": "7429:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7437:6:12",
														"nodeType": "YulTypedName",
														"src": "7437:6:12",
														"type": ""
													}
												],
												"src": "7361:474:12"
											},
											{
												"body": {
													"nativeSrc": "7873:28:12",
													"nodeType": "YulBlock",
													"src": "7873:28:12",
													"statements": [
														{
															"nativeSrc": "7883:12:12",
															"nodeType": "YulAssignment",
															"src": "7883:12:12",
															"value": {
																"name": "value",
																"nativeSrc": "7890:5:12",
																"nodeType": "YulIdentifier",
																"src": "7890:5:12"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "7883:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7883:3:12"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "7841:60:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7859:5:12",
														"nodeType": "YulTypedName",
														"src": "7859:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "7869:3:12",
														"nodeType": "YulTypedName",
														"src": "7869:3:12",
														"type": ""
													}
												],
												"src": "7841:60:12"
											},
											{
												"body": {
													"nativeSrc": "7967:82:12",
													"nodeType": "YulBlock",
													"src": "7967:82:12",
													"statements": [
														{
															"nativeSrc": "7977:66:12",
															"nodeType": "YulAssignment",
															"src": "7977:66:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "8035:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "8035:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "8017:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "8017:17:12"
																				},
																				"nativeSrc": "8017:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "8017:24:12"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "8008:8:12",
																			"nodeType": "YulIdentifier",
																			"src": "8008:8:12"
																		},
																		"nativeSrc": "8008:34:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8008:34:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "7990:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "7990:17:12"
																},
																"nativeSrc": "7990:53:12",
																"nodeType": "YulFunctionCall",
																"src": "7990:53:12"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "7977:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "7977:9:12"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "7907:142:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7947:5:12",
														"nodeType": "YulTypedName",
														"src": "7947:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "7957:9:12",
														"nodeType": "YulTypedName",
														"src": "7957:9:12",
														"type": ""
													}
												],
												"src": "7907:142:12"
											},
											{
												"body": {
													"nativeSrc": "8115:66:12",
													"nodeType": "YulBlock",
													"src": "8115:66:12",
													"statements": [
														{
															"nativeSrc": "8125:50:12",
															"nodeType": "YulAssignment",
															"src": "8125:50:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8169:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "8169:5:12"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "8138:30:12",
																	"nodeType": "YulIdentifier",
																	"src": "8138:30:12"
																},
																"nativeSrc": "8138:37:12",
																"nodeType": "YulFunctionCall",
																"src": "8138:37:12"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "8125:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "8125:9:12"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "8055:126:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8095:5:12",
														"nodeType": "YulTypedName",
														"src": "8095:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "8105:9:12",
														"nodeType": "YulTypedName",
														"src": "8105:9:12",
														"type": ""
													}
												],
												"src": "8055:126:12"
											},
											{
												"body": {
													"nativeSrc": "8269:66:12",
													"nodeType": "YulBlock",
													"src": "8269:66:12",
													"statements": [
														{
															"nativeSrc": "8279:50:12",
															"nodeType": "YulAssignment",
															"src": "8279:50:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8323:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "8323:5:12"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "8292:30:12",
																	"nodeType": "YulIdentifier",
																	"src": "8292:30:12"
																},
																"nativeSrc": "8292:37:12",
																"nodeType": "YulFunctionCall",
																"src": "8292:37:12"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "8279:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "8279:9:12"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IVaultManager_$1368_to_t_address",
												"nativeSrc": "8187:148:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8249:5:12",
														"nodeType": "YulTypedName",
														"src": "8249:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "8259:9:12",
														"nodeType": "YulTypedName",
														"src": "8259:9:12",
														"type": ""
													}
												],
												"src": "8187:148:12"
											},
											{
												"body": {
													"nativeSrc": "8428:88:12",
													"nodeType": "YulBlock",
													"src": "8428:88:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8445:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "8445:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8503:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "8503:5:12"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IVaultManager_$1368_to_t_address",
																			"nativeSrc": "8450:52:12",
																			"nodeType": "YulIdentifier",
																			"src": "8450:52:12"
																		},
																		"nativeSrc": "8450:59:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8450:59:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8438:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8438:6:12"
																},
																"nativeSrc": "8438:72:12",
																"nodeType": "YulFunctionCall",
																"src": "8438:72:12"
															},
															"nativeSrc": "8438:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "8438:72:12"
														}
													]
												},
												"name": "abi_encode_t_contract$_IVaultManager_$1368_to_t_address_fromStack",
												"nativeSrc": "8341:175:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8416:5:12",
														"nodeType": "YulTypedName",
														"src": "8416:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8423:3:12",
														"nodeType": "YulTypedName",
														"src": "8423:3:12",
														"type": ""
													}
												],
												"src": "8341:175:12"
											},
											{
												"body": {
													"nativeSrc": "8642:146:12",
													"nodeType": "YulBlock",
													"src": "8642:146:12",
													"statements": [
														{
															"nativeSrc": "8652:26:12",
															"nodeType": "YulAssignment",
															"src": "8652:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8664:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "8664:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8675:2:12",
																		"nodeType": "YulLiteral",
																		"src": "8675:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8660:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8660:3:12"
																},
																"nativeSrc": "8660:18:12",
																"nodeType": "YulFunctionCall",
																"src": "8660:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8652:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "8652:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8754:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "8754:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8767:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "8767:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8778:1:12",
																				"nodeType": "YulLiteral",
																				"src": "8778:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8763:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8763:3:12"
																		},
																		"nativeSrc": "8763:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8763:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IVaultManager_$1368_to_t_address_fromStack",
																	"nativeSrc": "8688:65:12",
																	"nodeType": "YulIdentifier",
																	"src": "8688:65:12"
																},
																"nativeSrc": "8688:93:12",
																"nodeType": "YulFunctionCall",
																"src": "8688:93:12"
															},
															"nativeSrc": "8688:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "8688:93:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IVaultManager_$1368__to_t_address__fromStack_reversed",
												"nativeSrc": "8522:266:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8614:9:12",
														"nodeType": "YulTypedName",
														"src": "8614:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8626:6:12",
														"nodeType": "YulTypedName",
														"src": "8626:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8637:4:12",
														"nodeType": "YulTypedName",
														"src": "8637:4:12",
														"type": ""
													}
												],
												"src": "8522:266:12"
											},
											{
												"body": {
													"nativeSrc": "8822:152:12",
													"nodeType": "YulBlock",
													"src": "8822:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8839:1:12",
																		"nodeType": "YulLiteral",
																		"src": "8839:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8842:77:12",
																		"nodeType": "YulLiteral",
																		"src": "8842:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8832:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8832:6:12"
																},
																"nativeSrc": "8832:88:12",
																"nodeType": "YulFunctionCall",
																"src": "8832:88:12"
															},
															"nativeSrc": "8832:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "8832:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8936:1:12",
																		"nodeType": "YulLiteral",
																		"src": "8936:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8939:4:12",
																		"nodeType": "YulLiteral",
																		"src": "8939:4:12",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8929:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8929:6:12"
																},
																"nativeSrc": "8929:15:12",
																"nodeType": "YulFunctionCall",
																"src": "8929:15:12"
															},
															"nativeSrc": "8929:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "8929:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8960:1:12",
																		"nodeType": "YulLiteral",
																		"src": "8960:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8963:4:12",
																		"nodeType": "YulLiteral",
																		"src": "8963:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8953:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8953:6:12"
																},
																"nativeSrc": "8953:15:12",
																"nodeType": "YulFunctionCall",
																"src": "8953:15:12"
															},
															"nativeSrc": "8953:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "8953:15:12"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "8794:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "8794:180:12"
											},
											{
												"body": {
													"nativeSrc": "9031:269:12",
													"nodeType": "YulBlock",
													"src": "9031:269:12",
													"statements": [
														{
															"nativeSrc": "9041:22:12",
															"nodeType": "YulAssignment",
															"src": "9041:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "9055:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "9055:4:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9061:1:12",
																		"nodeType": "YulLiteral",
																		"src": "9061:1:12",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "9051:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9051:3:12"
																},
																"nativeSrc": "9051:12:12",
																"nodeType": "YulFunctionCall",
																"src": "9051:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "9041:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9041:6:12"
																}
															]
														},
														{
															"nativeSrc": "9072:38:12",
															"nodeType": "YulVariableDeclaration",
															"src": "9072:38:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "9102:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "9102:4:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9108:1:12",
																		"nodeType": "YulLiteral",
																		"src": "9108:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "9098:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9098:3:12"
																},
																"nativeSrc": "9098:12:12",
																"nodeType": "YulFunctionCall",
																"src": "9098:12:12"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "9076:18:12",
																	"nodeType": "YulTypedName",
																	"src": "9076:18:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9149:51:12",
																"nodeType": "YulBlock",
																"src": "9149:51:12",
																"statements": [
																	{
																		"nativeSrc": "9163:27:12",
																		"nodeType": "YulAssignment",
																		"src": "9163:27:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "9177:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "9177:6:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9185:4:12",
																					"nodeType": "YulLiteral",
																					"src": "9185:4:12",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "9173:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "9173:3:12"
																			},
																			"nativeSrc": "9173:17:12",
																			"nodeType": "YulFunctionCall",
																			"src": "9173:17:12"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "9163:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "9163:6:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "9129:18:12",
																		"nodeType": "YulIdentifier",
																		"src": "9129:18:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9122:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9122:6:12"
																},
																"nativeSrc": "9122:26:12",
																"nodeType": "YulFunctionCall",
																"src": "9122:26:12"
															},
															"nativeSrc": "9119:81:12",
															"nodeType": "YulIf",
															"src": "9119:81:12"
														},
														{
															"body": {
																"nativeSrc": "9252:42:12",
																"nodeType": "YulBlock",
																"src": "9252:42:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "9266:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "9266:16:12"
																			},
																			"nativeSrc": "9266:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "9266:18:12"
																		},
																		"nativeSrc": "9266:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "9266:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "9216:18:12",
																		"nodeType": "YulIdentifier",
																		"src": "9216:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "9239:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "9239:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9247:2:12",
																				"nodeType": "YulLiteral",
																				"src": "9247:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "9236:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "9236:2:12"
																		},
																		"nativeSrc": "9236:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9236:14:12"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "9213:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "9213:2:12"
																},
																"nativeSrc": "9213:38:12",
																"nodeType": "YulFunctionCall",
																"src": "9213:38:12"
															},
															"nativeSrc": "9210:84:12",
															"nodeType": "YulIf",
															"src": "9210:84:12"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "8980:320:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "9015:4:12",
														"nodeType": "YulTypedName",
														"src": "9015:4:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "9024:6:12",
														"nodeType": "YulTypedName",
														"src": "9024:6:12",
														"type": ""
													}
												],
												"src": "8980:320:12"
											},
											{
												"body": {
													"nativeSrc": "9412:59:12",
													"nodeType": "YulBlock",
													"src": "9412:59:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9434:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "9434:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9442:1:12",
																				"nodeType": "YulLiteral",
																				"src": "9442:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9430:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9430:3:12"
																		},
																		"nativeSrc": "9430:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9430:14:12"
																	},
																	{
																		"hexValue": "496e76616c69642061646472657373",
																		"kind": "string",
																		"nativeSrc": "9446:17:12",
																		"nodeType": "YulLiteral",
																		"src": "9446:17:12",
																		"type": "",
																		"value": "Invalid address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9423:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9423:6:12"
																},
																"nativeSrc": "9423:41:12",
																"nodeType": "YulFunctionCall",
																"src": "9423:41:12"
															},
															"nativeSrc": "9423:41:12",
															"nodeType": "YulExpressionStatement",
															"src": "9423:41:12"
														}
													]
												},
												"name": "store_literal_in_memory_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
												"nativeSrc": "9306:165:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9404:6:12",
														"nodeType": "YulTypedName",
														"src": "9404:6:12",
														"type": ""
													}
												],
												"src": "9306:165:12"
											},
											{
												"body": {
													"nativeSrc": "9623:220:12",
													"nodeType": "YulBlock",
													"src": "9623:220:12",
													"statements": [
														{
															"nativeSrc": "9633:74:12",
															"nodeType": "YulAssignment",
															"src": "9633:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9699:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "9699:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9704:2:12",
																		"nodeType": "YulLiteral",
																		"src": "9704:2:12",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9640:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "9640:58:12"
																},
																"nativeSrc": "9640:67:12",
																"nodeType": "YulFunctionCall",
																"src": "9640:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9633:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9633:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9805:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "9805:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
																	"nativeSrc": "9716:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "9716:88:12"
																},
																"nativeSrc": "9716:93:12",
																"nodeType": "YulFunctionCall",
																"src": "9716:93:12"
															},
															"nativeSrc": "9716:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "9716:93:12"
														},
														{
															"nativeSrc": "9818:19:12",
															"nodeType": "YulAssignment",
															"src": "9818:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9829:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "9829:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9834:2:12",
																		"nodeType": "YulLiteral",
																		"src": "9834:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9825:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9825:3:12"
																},
																"nativeSrc": "9825:12:12",
																"nodeType": "YulFunctionCall",
																"src": "9825:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9818:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9818:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9477:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9611:3:12",
														"nodeType": "YulTypedName",
														"src": "9611:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9619:3:12",
														"nodeType": "YulTypedName",
														"src": "9619:3:12",
														"type": ""
													}
												],
												"src": "9477:366:12"
											},
											{
												"body": {
													"nativeSrc": "10020:248:12",
													"nodeType": "YulBlock",
													"src": "10020:248:12",
													"statements": [
														{
															"nativeSrc": "10030:26:12",
															"nodeType": "YulAssignment",
															"src": "10030:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10042:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "10042:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10053:2:12",
																		"nodeType": "YulLiteral",
																		"src": "10053:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10038:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "10038:3:12"
																},
																"nativeSrc": "10038:18:12",
																"nodeType": "YulFunctionCall",
																"src": "10038:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10030:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "10030:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10077:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "10077:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10088:1:12",
																				"nodeType": "YulLiteral",
																				"src": "10088:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10073:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10073:3:12"
																		},
																		"nativeSrc": "10073:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10073:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10096:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "10096:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10102:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "10102:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10092:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10092:3:12"
																		},
																		"nativeSrc": "10092:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10092:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10066:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "10066:6:12"
																},
																"nativeSrc": "10066:47:12",
																"nodeType": "YulFunctionCall",
																"src": "10066:47:12"
															},
															"nativeSrc": "10066:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "10066:47:12"
														},
														{
															"nativeSrc": "10122:139:12",
															"nodeType": "YulAssignment",
															"src": "10122:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10256:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "10256:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10130:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "10130:124:12"
																},
																"nativeSrc": "10130:131:12",
																"nodeType": "YulFunctionCall",
																"src": "10130:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10122:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "10122:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9849:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10000:9:12",
														"nodeType": "YulTypedName",
														"src": "10000:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10015:4:12",
														"nodeType": "YulTypedName",
														"src": "10015:4:12",
														"type": ""
													}
												],
												"src": "9849:419:12"
											},
											{
												"body": {
													"nativeSrc": "10380:64:12",
													"nodeType": "YulBlock",
													"src": "10380:64:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10402:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "10402:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10410:1:12",
																				"nodeType": "YulLiteral",
																				"src": "10410:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10398:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10398:3:12"
																		},
																		"nativeSrc": "10398:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10398:14:12"
																	},
																	{
																		"hexValue": "496e73756666696369656e742062616c616e6365",
																		"kind": "string",
																		"nativeSrc": "10414:22:12",
																		"nodeType": "YulLiteral",
																		"src": "10414:22:12",
																		"type": "",
																		"value": "Insufficient balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10391:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "10391:6:12"
																},
																"nativeSrc": "10391:46:12",
																"nodeType": "YulFunctionCall",
																"src": "10391:46:12"
															},
															"nativeSrc": "10391:46:12",
															"nodeType": "YulExpressionStatement",
															"src": "10391:46:12"
														}
													]
												},
												"name": "store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
												"nativeSrc": "10274:170:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10372:6:12",
														"nodeType": "YulTypedName",
														"src": "10372:6:12",
														"type": ""
													}
												],
												"src": "10274:170:12"
											},
											{
												"body": {
													"nativeSrc": "10596:220:12",
													"nodeType": "YulBlock",
													"src": "10596:220:12",
													"statements": [
														{
															"nativeSrc": "10606:74:12",
															"nodeType": "YulAssignment",
															"src": "10606:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10672:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "10672:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10677:2:12",
																		"nodeType": "YulLiteral",
																		"src": "10677:2:12",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10613:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "10613:58:12"
																},
																"nativeSrc": "10613:67:12",
																"nodeType": "YulFunctionCall",
																"src": "10613:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10606:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "10606:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10778:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "10778:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																	"nativeSrc": "10689:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "10689:88:12"
																},
																"nativeSrc": "10689:93:12",
																"nodeType": "YulFunctionCall",
																"src": "10689:93:12"
															},
															"nativeSrc": "10689:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "10689:93:12"
														},
														{
															"nativeSrc": "10791:19:12",
															"nodeType": "YulAssignment",
															"src": "10791:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10802:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "10802:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10807:2:12",
																		"nodeType": "YulLiteral",
																		"src": "10807:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10798:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "10798:3:12"
																},
																"nativeSrc": "10798:12:12",
																"nodeType": "YulFunctionCall",
																"src": "10798:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10791:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "10791:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10450:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10584:3:12",
														"nodeType": "YulTypedName",
														"src": "10584:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10592:3:12",
														"nodeType": "YulTypedName",
														"src": "10592:3:12",
														"type": ""
													}
												],
												"src": "10450:366:12"
											},
											{
												"body": {
													"nativeSrc": "10993:248:12",
													"nodeType": "YulBlock",
													"src": "10993:248:12",
													"statements": [
														{
															"nativeSrc": "11003:26:12",
															"nodeType": "YulAssignment",
															"src": "11003:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11015:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "11015:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11026:2:12",
																		"nodeType": "YulLiteral",
																		"src": "11026:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11011:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "11011:3:12"
																},
																"nativeSrc": "11011:18:12",
																"nodeType": "YulFunctionCall",
																"src": "11011:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11003:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "11003:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11050:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "11050:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11061:1:12",
																				"nodeType": "YulLiteral",
																				"src": "11061:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11046:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "11046:3:12"
																		},
																		"nativeSrc": "11046:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11046:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11069:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "11069:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11075:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "11075:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11065:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "11065:3:12"
																		},
																		"nativeSrc": "11065:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11065:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11039:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "11039:6:12"
																},
																"nativeSrc": "11039:47:12",
																"nodeType": "YulFunctionCall",
																"src": "11039:47:12"
															},
															"nativeSrc": "11039:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "11039:47:12"
														},
														{
															"nativeSrc": "11095:139:12",
															"nodeType": "YulAssignment",
															"src": "11095:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11229:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "11229:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11103:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "11103:124:12"
																},
																"nativeSrc": "11103:131:12",
																"nodeType": "YulFunctionCall",
																"src": "11103:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11095:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "11095:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10822:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10973:9:12",
														"nodeType": "YulTypedName",
														"src": "10973:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10988:4:12",
														"nodeType": "YulTypedName",
														"src": "10988:4:12",
														"type": ""
													}
												],
												"src": "10822:419:12"
											},
											{
												"body": {
													"nativeSrc": "11353:61:12",
													"nodeType": "YulBlock",
													"src": "11353:61:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11375:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "11375:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11383:1:12",
																				"nodeType": "YulLiteral",
																				"src": "11383:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11371:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "11371:3:12"
																		},
																		"nativeSrc": "11371:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11371:14:12"
																	},
																	{
																		"hexValue": "496e76616c696420726563697069656e74",
																		"kind": "string",
																		"nativeSrc": "11387:19:12",
																		"nodeType": "YulLiteral",
																		"src": "11387:19:12",
																		"type": "",
																		"value": "Invalid recipient"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11364:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "11364:6:12"
																},
																"nativeSrc": "11364:43:12",
																"nodeType": "YulFunctionCall",
																"src": "11364:43:12"
															},
															"nativeSrc": "11364:43:12",
															"nodeType": "YulExpressionStatement",
															"src": "11364:43:12"
														}
													]
												},
												"name": "store_literal_in_memory_a6664b97aef19c137d44ec81dfc0c0cc28a2c3470357b125208345a2c048425d",
												"nativeSrc": "11247:167:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11345:6:12",
														"nodeType": "YulTypedName",
														"src": "11345:6:12",
														"type": ""
													}
												],
												"src": "11247:167:12"
											},
											{
												"body": {
													"nativeSrc": "11566:220:12",
													"nodeType": "YulBlock",
													"src": "11566:220:12",
													"statements": [
														{
															"nativeSrc": "11576:74:12",
															"nodeType": "YulAssignment",
															"src": "11576:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11642:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "11642:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11647:2:12",
																		"nodeType": "YulLiteral",
																		"src": "11647:2:12",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11583:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "11583:58:12"
																},
																"nativeSrc": "11583:67:12",
																"nodeType": "YulFunctionCall",
																"src": "11583:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11576:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "11576:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11748:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "11748:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_a6664b97aef19c137d44ec81dfc0c0cc28a2c3470357b125208345a2c048425d",
																	"nativeSrc": "11659:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "11659:88:12"
																},
																"nativeSrc": "11659:93:12",
																"nodeType": "YulFunctionCall",
																"src": "11659:93:12"
															},
															"nativeSrc": "11659:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "11659:93:12"
														},
														{
															"nativeSrc": "11761:19:12",
															"nodeType": "YulAssignment",
															"src": "11761:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11772:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "11772:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11777:2:12",
																		"nodeType": "YulLiteral",
																		"src": "11777:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11768:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "11768:3:12"
																},
																"nativeSrc": "11768:12:12",
																"nodeType": "YulFunctionCall",
																"src": "11768:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11761:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "11761:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_a6664b97aef19c137d44ec81dfc0c0cc28a2c3470357b125208345a2c048425d_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11420:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11554:3:12",
														"nodeType": "YulTypedName",
														"src": "11554:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11562:3:12",
														"nodeType": "YulTypedName",
														"src": "11562:3:12",
														"type": ""
													}
												],
												"src": "11420:366:12"
											},
											{
												"body": {
													"nativeSrc": "11963:248:12",
													"nodeType": "YulBlock",
													"src": "11963:248:12",
													"statements": [
														{
															"nativeSrc": "11973:26:12",
															"nodeType": "YulAssignment",
															"src": "11973:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11985:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "11985:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11996:2:12",
																		"nodeType": "YulLiteral",
																		"src": "11996:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11981:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "11981:3:12"
																},
																"nativeSrc": "11981:18:12",
																"nodeType": "YulFunctionCall",
																"src": "11981:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11973:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "11973:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12020:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "12020:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12031:1:12",
																				"nodeType": "YulLiteral",
																				"src": "12031:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12016:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "12016:3:12"
																		},
																		"nativeSrc": "12016:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12016:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12039:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "12039:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12045:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "12045:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12035:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "12035:3:12"
																		},
																		"nativeSrc": "12035:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12035:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12009:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "12009:6:12"
																},
																"nativeSrc": "12009:47:12",
																"nodeType": "YulFunctionCall",
																"src": "12009:47:12"
															},
															"nativeSrc": "12009:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "12009:47:12"
														},
														{
															"nativeSrc": "12065:139:12",
															"nodeType": "YulAssignment",
															"src": "12065:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12199:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "12199:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_a6664b97aef19c137d44ec81dfc0c0cc28a2c3470357b125208345a2c048425d_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12073:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "12073:124:12"
																},
																"nativeSrc": "12073:131:12",
																"nodeType": "YulFunctionCall",
																"src": "12073:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12065:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "12065:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a6664b97aef19c137d44ec81dfc0c0cc28a2c3470357b125208345a2c048425d__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11792:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11943:9:12",
														"nodeType": "YulTypedName",
														"src": "11943:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11958:4:12",
														"nodeType": "YulTypedName",
														"src": "11958:4:12",
														"type": ""
													}
												],
												"src": "11792:419:12"
											},
											{
												"body": {
													"nativeSrc": "12323:62:12",
													"nodeType": "YulBlock",
													"src": "12323:62:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12345:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "12345:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12353:1:12",
																				"nodeType": "YulLiteral",
																				"src": "12353:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12341:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "12341:3:12"
																		},
																		"nativeSrc": "12341:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12341:14:12"
																	},
																	{
																		"hexValue": "416d6f756e74206d757374206265203e2030",
																		"kind": "string",
																		"nativeSrc": "12357:20:12",
																		"nodeType": "YulLiteral",
																		"src": "12357:20:12",
																		"type": "",
																		"value": "Amount must be > 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12334:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "12334:6:12"
																},
																"nativeSrc": "12334:44:12",
																"nodeType": "YulFunctionCall",
																"src": "12334:44:12"
															},
															"nativeSrc": "12334:44:12",
															"nodeType": "YulExpressionStatement",
															"src": "12334:44:12"
														}
													]
												},
												"name": "store_literal_in_memory_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb",
												"nativeSrc": "12217:168:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "12315:6:12",
														"nodeType": "YulTypedName",
														"src": "12315:6:12",
														"type": ""
													}
												],
												"src": "12217:168:12"
											},
											{
												"body": {
													"nativeSrc": "12537:220:12",
													"nodeType": "YulBlock",
													"src": "12537:220:12",
													"statements": [
														{
															"nativeSrc": "12547:74:12",
															"nodeType": "YulAssignment",
															"src": "12547:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12613:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "12613:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12618:2:12",
																		"nodeType": "YulLiteral",
																		"src": "12618:2:12",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12554:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "12554:58:12"
																},
																"nativeSrc": "12554:67:12",
																"nodeType": "YulFunctionCall",
																"src": "12554:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12547:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "12547:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12719:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "12719:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb",
																	"nativeSrc": "12630:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "12630:88:12"
																},
																"nativeSrc": "12630:93:12",
																"nodeType": "YulFunctionCall",
																"src": "12630:93:12"
															},
															"nativeSrc": "12630:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "12630:93:12"
														},
														{
															"nativeSrc": "12732:19:12",
															"nodeType": "YulAssignment",
															"src": "12732:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12743:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "12743:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12748:2:12",
																		"nodeType": "YulLiteral",
																		"src": "12748:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12739:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "12739:3:12"
																},
																"nativeSrc": "12739:12:12",
																"nodeType": "YulFunctionCall",
																"src": "12739:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12732:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "12732:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12391:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12525:3:12",
														"nodeType": "YulTypedName",
														"src": "12525:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12533:3:12",
														"nodeType": "YulTypedName",
														"src": "12533:3:12",
														"type": ""
													}
												],
												"src": "12391:366:12"
											},
											{
												"body": {
													"nativeSrc": "12934:248:12",
													"nodeType": "YulBlock",
													"src": "12934:248:12",
													"statements": [
														{
															"nativeSrc": "12944:26:12",
															"nodeType": "YulAssignment",
															"src": "12944:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12956:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "12956:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12967:2:12",
																		"nodeType": "YulLiteral",
																		"src": "12967:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12952:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "12952:3:12"
																},
																"nativeSrc": "12952:18:12",
																"nodeType": "YulFunctionCall",
																"src": "12952:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12944:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "12944:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12991:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "12991:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13002:1:12",
																				"nodeType": "YulLiteral",
																				"src": "13002:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12987:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "12987:3:12"
																		},
																		"nativeSrc": "12987:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12987:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13010:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "13010:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13016:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "13016:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13006:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "13006:3:12"
																		},
																		"nativeSrc": "13006:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "13006:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12980:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "12980:6:12"
																},
																"nativeSrc": "12980:47:12",
																"nodeType": "YulFunctionCall",
																"src": "12980:47:12"
															},
															"nativeSrc": "12980:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "12980:47:12"
														},
														{
															"nativeSrc": "13036:139:12",
															"nodeType": "YulAssignment",
															"src": "13036:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "13170:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "13170:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13044:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "13044:124:12"
																},
																"nativeSrc": "13044:131:12",
																"nodeType": "YulFunctionCall",
																"src": "13044:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13036:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "13036:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12763:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12914:9:12",
														"nodeType": "YulTypedName",
														"src": "12914:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12929:4:12",
														"nodeType": "YulTypedName",
														"src": "12929:4:12",
														"type": ""
													}
												],
												"src": "12763:419:12"
											},
											{
												"body": {
													"nativeSrc": "13251:80:12",
													"nodeType": "YulBlock",
													"src": "13251:80:12",
													"statements": [
														{
															"nativeSrc": "13261:22:12",
															"nodeType": "YulAssignment",
															"src": "13261:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "13276:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "13276:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "13270:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "13270:5:12"
																},
																"nativeSrc": "13270:13:12",
																"nodeType": "YulFunctionCall",
																"src": "13270:13:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "13261:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "13261:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "13319:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "13319:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "13292:26:12",
																	"nodeType": "YulIdentifier",
																	"src": "13292:26:12"
																},
																"nativeSrc": "13292:33:12",
																"nodeType": "YulFunctionCall",
																"src": "13292:33:12"
															},
															"nativeSrc": "13292:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "13292:33:12"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "13188:143:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "13229:6:12",
														"nodeType": "YulTypedName",
														"src": "13229:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "13237:3:12",
														"nodeType": "YulTypedName",
														"src": "13237:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "13245:5:12",
														"nodeType": "YulTypedName",
														"src": "13245:5:12",
														"type": ""
													}
												],
												"src": "13188:143:12"
											},
											{
												"body": {
													"nativeSrc": "13414:274:12",
													"nodeType": "YulBlock",
													"src": "13414:274:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "13460:83:12",
																"nodeType": "YulBlock",
																"src": "13460:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "13462:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "13462:77:12"
																			},
																			"nativeSrc": "13462:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "13462:79:12"
																		},
																		"nativeSrc": "13462:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "13462:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13435:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "13435:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13444:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "13444:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13431:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "13431:3:12"
																		},
																		"nativeSrc": "13431:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "13431:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13456:2:12",
																		"nodeType": "YulLiteral",
																		"src": "13456:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "13427:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "13427:3:12"
																},
																"nativeSrc": "13427:32:12",
																"nodeType": "YulFunctionCall",
																"src": "13427:32:12"
															},
															"nativeSrc": "13424:119:12",
															"nodeType": "YulIf",
															"src": "13424:119:12"
														},
														{
															"nativeSrc": "13553:128:12",
															"nodeType": "YulBlock",
															"src": "13553:128:12",
															"statements": [
																{
																	"nativeSrc": "13568:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "13568:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "13582:1:12",
																		"nodeType": "YulLiteral",
																		"src": "13582:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "13572:6:12",
																			"nodeType": "YulTypedName",
																			"src": "13572:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "13597:74:12",
																	"nodeType": "YulAssignment",
																	"src": "13597:74:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "13643:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "13643:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "13654:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "13654:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13639:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "13639:3:12"
																				},
																				"nativeSrc": "13639:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "13639:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13663:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "13663:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "13607:31:12",
																			"nodeType": "YulIdentifier",
																			"src": "13607:31:12"
																		},
																		"nativeSrc": "13607:64:12",
																		"nodeType": "YulFunctionCall",
																		"src": "13607:64:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "13597:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "13597:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "13337:351:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13384:9:12",
														"nodeType": "YulTypedName",
														"src": "13384:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "13395:7:12",
														"nodeType": "YulTypedName",
														"src": "13395:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "13407:6:12",
														"nodeType": "YulTypedName",
														"src": "13407:6:12",
														"type": ""
													}
												],
												"src": "13337:351:12"
											},
											{
												"body": {
													"nativeSrc": "13800:59:12",
													"nodeType": "YulBlock",
													"src": "13800:59:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13822:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "13822:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13830:1:12",
																				"nodeType": "YulLiteral",
																				"src": "13830:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13818:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "13818:3:12"
																		},
																		"nativeSrc": "13818:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "13818:14:12"
																	},
																	{
																		"hexValue": "4e6f7420656e6f75676820676f6c64",
																		"kind": "string",
																		"nativeSrc": "13834:17:12",
																		"nodeType": "YulLiteral",
																		"src": "13834:17:12",
																		"type": "",
																		"value": "Not enough gold"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13811:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "13811:6:12"
																},
																"nativeSrc": "13811:41:12",
																"nodeType": "YulFunctionCall",
																"src": "13811:41:12"
															},
															"nativeSrc": "13811:41:12",
															"nodeType": "YulExpressionStatement",
															"src": "13811:41:12"
														}
													]
												},
												"name": "store_literal_in_memory_7d5f8b7a385facf19389f22978f36cd75aee6d5cec328741ff39c84acdfadfaa",
												"nativeSrc": "13694:165:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "13792:6:12",
														"nodeType": "YulTypedName",
														"src": "13792:6:12",
														"type": ""
													}
												],
												"src": "13694:165:12"
											},
											{
												"body": {
													"nativeSrc": "14011:220:12",
													"nodeType": "YulBlock",
													"src": "14011:220:12",
													"statements": [
														{
															"nativeSrc": "14021:74:12",
															"nodeType": "YulAssignment",
															"src": "14021:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14087:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "14087:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14092:2:12",
																		"nodeType": "YulLiteral",
																		"src": "14092:2:12",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14028:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "14028:58:12"
																},
																"nativeSrc": "14028:67:12",
																"nodeType": "YulFunctionCall",
																"src": "14028:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14021:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "14021:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14193:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "14193:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_7d5f8b7a385facf19389f22978f36cd75aee6d5cec328741ff39c84acdfadfaa",
																	"nativeSrc": "14104:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "14104:88:12"
																},
																"nativeSrc": "14104:93:12",
																"nodeType": "YulFunctionCall",
																"src": "14104:93:12"
															},
															"nativeSrc": "14104:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "14104:93:12"
														},
														{
															"nativeSrc": "14206:19:12",
															"nodeType": "YulAssignment",
															"src": "14206:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14217:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "14217:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14222:2:12",
																		"nodeType": "YulLiteral",
																		"src": "14222:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14213:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "14213:3:12"
																},
																"nativeSrc": "14213:12:12",
																"nodeType": "YulFunctionCall",
																"src": "14213:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14206:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "14206:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_7d5f8b7a385facf19389f22978f36cd75aee6d5cec328741ff39c84acdfadfaa_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "13865:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13999:3:12",
														"nodeType": "YulTypedName",
														"src": "13999:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14007:3:12",
														"nodeType": "YulTypedName",
														"src": "14007:3:12",
														"type": ""
													}
												],
												"src": "13865:366:12"
											},
											{
												"body": {
													"nativeSrc": "14408:248:12",
													"nodeType": "YulBlock",
													"src": "14408:248:12",
													"statements": [
														{
															"nativeSrc": "14418:26:12",
															"nodeType": "YulAssignment",
															"src": "14418:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14430:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "14430:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14441:2:12",
																		"nodeType": "YulLiteral",
																		"src": "14441:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14426:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "14426:3:12"
																},
																"nativeSrc": "14426:18:12",
																"nodeType": "YulFunctionCall",
																"src": "14426:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14418:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "14418:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14465:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "14465:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14476:1:12",
																				"nodeType": "YulLiteral",
																				"src": "14476:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14461:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "14461:3:12"
																		},
																		"nativeSrc": "14461:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "14461:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14484:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "14484:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14490:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "14490:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14480:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "14480:3:12"
																		},
																		"nativeSrc": "14480:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "14480:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14454:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "14454:6:12"
																},
																"nativeSrc": "14454:47:12",
																"nodeType": "YulFunctionCall",
																"src": "14454:47:12"
															},
															"nativeSrc": "14454:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "14454:47:12"
														},
														{
															"nativeSrc": "14510:139:12",
															"nodeType": "YulAssignment",
															"src": "14510:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "14644:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "14644:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_7d5f8b7a385facf19389f22978f36cd75aee6d5cec328741ff39c84acdfadfaa_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14518:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "14518:124:12"
																},
																"nativeSrc": "14518:131:12",
																"nodeType": "YulFunctionCall",
																"src": "14518:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14510:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "14510:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7d5f8b7a385facf19389f22978f36cd75aee6d5cec328741ff39c84acdfadfaa__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14237:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14388:9:12",
														"nodeType": "YulTypedName",
														"src": "14388:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14403:4:12",
														"nodeType": "YulTypedName",
														"src": "14403:4:12",
														"type": ""
													}
												],
												"src": "14237:419:12"
											},
											{
												"body": {
													"nativeSrc": "14727:53:12",
													"nodeType": "YulBlock",
													"src": "14727:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14744:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "14744:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "14767:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "14767:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "14749:17:12",
																			"nodeType": "YulIdentifier",
																			"src": "14749:17:12"
																		},
																		"nativeSrc": "14749:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "14749:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14737:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "14737:6:12"
																},
																"nativeSrc": "14737:37:12",
																"nodeType": "YulFunctionCall",
																"src": "14737:37:12"
															},
															"nativeSrc": "14737:37:12",
															"nodeType": "YulExpressionStatement",
															"src": "14737:37:12"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "14662:118:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14715:5:12",
														"nodeType": "YulTypedName",
														"src": "14715:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "14722:3:12",
														"nodeType": "YulTypedName",
														"src": "14722:3:12",
														"type": ""
													}
												],
												"src": "14662:118:12"
											},
											{
												"body": {
													"nativeSrc": "14884:124:12",
													"nodeType": "YulBlock",
													"src": "14884:124:12",
													"statements": [
														{
															"nativeSrc": "14894:26:12",
															"nodeType": "YulAssignment",
															"src": "14894:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14906:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "14906:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14917:2:12",
																		"nodeType": "YulLiteral",
																		"src": "14917:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14902:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "14902:3:12"
																},
																"nativeSrc": "14902:18:12",
																"nodeType": "YulFunctionCall",
																"src": "14902:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14894:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "14894:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "14974:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "14974:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14987:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "14987:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14998:1:12",
																				"nodeType": "YulLiteral",
																				"src": "14998:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14983:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "14983:3:12"
																		},
																		"nativeSrc": "14983:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "14983:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "14930:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "14930:43:12"
																},
																"nativeSrc": "14930:71:12",
																"nodeType": "YulFunctionCall",
																"src": "14930:71:12"
															},
															"nativeSrc": "14930:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "14930:71:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "14786:222:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14856:9:12",
														"nodeType": "YulTypedName",
														"src": "14856:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "14868:6:12",
														"nodeType": "YulTypedName",
														"src": "14868:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14879:4:12",
														"nodeType": "YulTypedName",
														"src": "14879:4:12",
														"type": ""
													}
												],
												"src": "14786:222:12"
											},
											{
												"body": {
													"nativeSrc": "15168:288:12",
													"nodeType": "YulBlock",
													"src": "15168:288:12",
													"statements": [
														{
															"nativeSrc": "15178:26:12",
															"nodeType": "YulAssignment",
															"src": "15178:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15190:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "15190:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15201:2:12",
																		"nodeType": "YulLiteral",
																		"src": "15201:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15186:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "15186:3:12"
																},
																"nativeSrc": "15186:18:12",
																"nodeType": "YulFunctionCall",
																"src": "15186:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15178:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "15178:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "15258:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "15258:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15271:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "15271:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15282:1:12",
																				"nodeType": "YulLiteral",
																				"src": "15282:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15267:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "15267:3:12"
																		},
																		"nativeSrc": "15267:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "15267:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "15214:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "15214:43:12"
																},
																"nativeSrc": "15214:71:12",
																"nodeType": "YulFunctionCall",
																"src": "15214:71:12"
															},
															"nativeSrc": "15214:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "15214:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "15339:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "15339:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15352:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "15352:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15363:2:12",
																				"nodeType": "YulLiteral",
																				"src": "15363:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15348:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "15348:3:12"
																		},
																		"nativeSrc": "15348:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "15348:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "15295:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "15295:43:12"
																},
																"nativeSrc": "15295:72:12",
																"nodeType": "YulFunctionCall",
																"src": "15295:72:12"
															},
															"nativeSrc": "15295:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "15295:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "15421:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "15421:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15434:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "15434:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15445:2:12",
																				"nodeType": "YulLiteral",
																				"src": "15445:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15430:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "15430:3:12"
																		},
																		"nativeSrc": "15430:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "15430:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "15377:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "15377:43:12"
																},
																"nativeSrc": "15377:72:12",
																"nodeType": "YulFunctionCall",
																"src": "15377:72:12"
															},
															"nativeSrc": "15377:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "15377:72:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "15014:442:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15124:9:12",
														"nodeType": "YulTypedName",
														"src": "15124:9:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "15136:6:12",
														"nodeType": "YulTypedName",
														"src": "15136:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "15144:6:12",
														"nodeType": "YulTypedName",
														"src": "15144:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "15152:6:12",
														"nodeType": "YulTypedName",
														"src": "15152:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15163:4:12",
														"nodeType": "YulTypedName",
														"src": "15163:4:12",
														"type": ""
													}
												],
												"src": "15014:442:12"
											},
											{
												"body": {
													"nativeSrc": "15588:206:12",
													"nodeType": "YulBlock",
													"src": "15588:206:12",
													"statements": [
														{
															"nativeSrc": "15598:26:12",
															"nodeType": "YulAssignment",
															"src": "15598:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15610:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "15610:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15621:2:12",
																		"nodeType": "YulLiteral",
																		"src": "15621:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15606:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "15606:3:12"
																},
																"nativeSrc": "15606:18:12",
																"nodeType": "YulFunctionCall",
																"src": "15606:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15598:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "15598:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "15678:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "15678:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15691:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "15691:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15702:1:12",
																				"nodeType": "YulLiteral",
																				"src": "15702:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15687:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "15687:3:12"
																		},
																		"nativeSrc": "15687:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "15687:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "15634:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "15634:43:12"
																},
																"nativeSrc": "15634:71:12",
																"nodeType": "YulFunctionCall",
																"src": "15634:71:12"
															},
															"nativeSrc": "15634:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "15634:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "15759:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "15759:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15772:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "15772:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15783:2:12",
																				"nodeType": "YulLiteral",
																				"src": "15783:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15768:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "15768:3:12"
																		},
																		"nativeSrc": "15768:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "15768:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "15715:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "15715:43:12"
																},
																"nativeSrc": "15715:72:12",
																"nodeType": "YulFunctionCall",
																"src": "15715:72:12"
															},
															"nativeSrc": "15715:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "15715:72:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed",
												"nativeSrc": "15462:332:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15552:9:12",
														"nodeType": "YulTypedName",
														"src": "15552:9:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "15564:6:12",
														"nodeType": "YulTypedName",
														"src": "15564:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "15572:6:12",
														"nodeType": "YulTypedName",
														"src": "15572:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15583:4:12",
														"nodeType": "YulTypedName",
														"src": "15583:4:12",
														"type": ""
													}
												],
												"src": "15462:332:12"
											},
											{
												"body": {
													"nativeSrc": "15828:152:12",
													"nodeType": "YulBlock",
													"src": "15828:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15845:1:12",
																		"nodeType": "YulLiteral",
																		"src": "15845:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15848:77:12",
																		"nodeType": "YulLiteral",
																		"src": "15848:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15838:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "15838:6:12"
																},
																"nativeSrc": "15838:88:12",
																"nodeType": "YulFunctionCall",
																"src": "15838:88:12"
															},
															"nativeSrc": "15838:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "15838:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15942:1:12",
																		"nodeType": "YulLiteral",
																		"src": "15942:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15945:4:12",
																		"nodeType": "YulLiteral",
																		"src": "15945:4:12",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15935:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "15935:6:12"
																},
																"nativeSrc": "15935:15:12",
																"nodeType": "YulFunctionCall",
																"src": "15935:15:12"
															},
															"nativeSrc": "15935:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "15935:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15966:1:12",
																		"nodeType": "YulLiteral",
																		"src": "15966:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15969:4:12",
																		"nodeType": "YulLiteral",
																		"src": "15969:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "15959:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "15959:6:12"
																},
																"nativeSrc": "15959:15:12",
																"nodeType": "YulFunctionCall",
																"src": "15959:15:12"
															},
															"nativeSrc": "15959:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "15959:15:12"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "15800:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "15800:180:12"
											},
											{
												"body": {
													"nativeSrc": "16030:147:12",
													"nodeType": "YulBlock",
													"src": "16030:147:12",
													"statements": [
														{
															"nativeSrc": "16040:25:12",
															"nodeType": "YulAssignment",
															"src": "16040:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "16063:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "16063:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "16045:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "16045:17:12"
																},
																"nativeSrc": "16045:20:12",
																"nodeType": "YulFunctionCall",
																"src": "16045:20:12"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "16040:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "16040:1:12"
																}
															]
														},
														{
															"nativeSrc": "16074:25:12",
															"nodeType": "YulAssignment",
															"src": "16074:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "16097:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "16097:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "16079:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "16079:17:12"
																},
																"nativeSrc": "16079:20:12",
																"nodeType": "YulFunctionCall",
																"src": "16079:20:12"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "16074:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "16074:1:12"
																}
															]
														},
														{
															"nativeSrc": "16108:16:12",
															"nodeType": "YulAssignment",
															"src": "16108:16:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "16119:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "16119:1:12"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "16122:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "16122:1:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16115:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "16115:3:12"
																},
																"nativeSrc": "16115:9:12",
																"nodeType": "YulFunctionCall",
																"src": "16115:9:12"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "16108:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "16108:3:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "16148:22:12",
																"nodeType": "YulBlock",
																"src": "16148:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "16150:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "16150:16:12"
																			},
																			"nativeSrc": "16150:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "16150:18:12"
																		},
																		"nativeSrc": "16150:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "16150:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "16140:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "16140:1:12"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "16143:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "16143:3:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "16137:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "16137:2:12"
																},
																"nativeSrc": "16137:10:12",
																"nodeType": "YulFunctionCall",
																"src": "16137:10:12"
															},
															"nativeSrc": "16134:36:12",
															"nodeType": "YulIf",
															"src": "16134:36:12"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "15986:191:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "16017:1:12",
														"nodeType": "YulTypedName",
														"src": "16017:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "16020:1:12",
														"nodeType": "YulTypedName",
														"src": "16020:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "16026:3:12",
														"nodeType": "YulTypedName",
														"src": "16026:3:12",
														"type": ""
													}
												],
												"src": "15986:191:12"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IVaultManager_$1368_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IVaultManager_$1368_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IVaultManager_$1368_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IVaultManager_$1368__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IVaultManager_$1368_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid address\")\n\n    }\n\n    function abi_encode_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient balance\")\n\n    }\n\n    function abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_a6664b97aef19c137d44ec81dfc0c0cc28a2c3470357b125208345a2c048425d(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid recipient\")\n\n    }\n\n    function abi_encode_t_stringliteral_a6664b97aef19c137d44ec81dfc0c0cc28a2c3470357b125208345a2c048425d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_a6664b97aef19c137d44ec81dfc0c0cc28a2c3470357b125208345a2c048425d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a6664b97aef19c137d44ec81dfc0c0cc28a2c3470357b125208345a2c048425d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a6664b97aef19c137d44ec81dfc0c0cc28a2c3470357b125208345a2c048425d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb(memPtr) {\n\n        mstore(add(memPtr, 0), \"Amount must be > 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_7d5f8b7a385facf19389f22978f36cd75aee6d5cec328741ff39c84acdfadfaa(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not enough gold\")\n\n    }\n\n    function abi_encode_t_stringliteral_7d5f8b7a385facf19389f22978f36cd75aee6d5cec328741ff39c84acdfadfaa_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_7d5f8b7a385facf19389f22978f36cd75aee6d5cec328741ff39c84acdfadfaa(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7d5f8b7a385facf19389f22978f36cd75aee6d5cec328741ff39c84acdfadfaa__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7d5f8b7a385facf19389f22978f36cd75aee6d5cec328741ff39c84acdfadfaa_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b5060043610610156575f3560e01c80635c975abb116100c1578063a9059cbb1161007a578063a9059cbb146103b2578063d5391393146103e2578063d547741f14610400578063dd62ed3e1461041c578063e63ab1e91461044c578063fbfa77cf1461046a57610156565b80635c975abb146102ee57806370a082311461030c5780638456cb591461033c57806391d148541461034657806395d89b4114610376578063a217fddf1461039457610156565b8063248a9ca311610113578063248a9ca3146102425780632f2ff15d14610272578063313ce5671461028e57806336568abe146102ac5780633f4ba83a146102c857806340c10f19146102d257610156565b806301ffc9a71461015a57806306fdde031461018a578063095ea7b3146101a857806318160ddd146101d85780631c83ba4a146101f657806323b872dd14610212575b5f5ffd5b610174600480360381019061016f919061183f565b610488565b6040516101819190611884565b60405180910390f35b610192610501565b60405161019f919061190d565b60405180910390f35b6101c260048036038101906101bd91906119ba565b610591565b6040516101cf9190611884565b60405180910390f35b6101e06105b3565b6040516101ed9190611a07565b60405180910390f35b610210600480360381019061020b91906119ba565b6105bc565b005b61022c60048036038101906102279190611a20565b61073d565b6040516102399190611884565b60405180910390f35b61025c60048036038101906102579190611aa3565b61076b565b6040516102699190611add565b60405180910390f35b61028c60048036038101906102879190611af6565b610788565b005b6102966107aa565b6040516102a39190611b4f565b60405180910390f35b6102c660048036038101906102c19190611af6565b6107b2565b005b6102d061082d565b005b6102ec60048036038101906102e791906119ba565b610862565b005b6102f6610aaa565b6040516103039190611884565b60405180910390f35b61032660048036038101906103219190611b68565b610abf565b6040516103339190611a07565b60405180910390f35b610344610b04565b005b610360600480360381019061035b9190611af6565b610b39565b60405161036d9190611884565b60405180910390f35b61037e610b9d565b60405161038b919061190d565b60405180910390f35b61039c610c2d565b6040516103a99190611add565b60405180910390f35b6103cc60048036038101906103c791906119ba565b610c33565b6040516103d99190611884565b60405180910390f35b6103ea610c55565b6040516103f79190611add565b60405180910390f35b61041a60048036038101906104159190611af6565b610c79565b005b61043660048036038101906104319190611b93565b610c9b565b6040516104439190611a07565b60405180910390f35b610454610d1d565b6040516104619190611add565b60405180910390f35b610472610d41565b60405161047f9190611c2c565b60405180910390f35b5f7f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806104fa57506104f982610d66565b5b9050919050565b60606003805461051090611c72565b80601f016020809104026020016040519081016040528092919081815260200182805461053c90611c72565b80156105875780601f1061055e57610100808354040283529160200191610587565b820191905f5260205f20905b81548152906001019060200180831161056a57829003601f168201915b5050505050905090565b5f5f61059b610dcf565b90506105a8818585610dd6565b600191505092915050565b5f600254905090565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a66105e681610de8565b6105ee610dfc565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361065c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161065390611cec565b60405180910390fd5b8161066684610abf565b10156106a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161069e90611d54565b60405180910390fd5b60075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ecad4f68836040518263ffffffff1660e01b81526004016107019190611a07565b5f604051808303815f87803b158015610718575f5ffd5b505af115801561072a573d5f5f3e3d5ffd5b505050506107388383610e3d565b505050565b5f5f610747610dcf565b9050610754858285610ebc565b61075f858585610f4f565b60019150509392505050565b5f60065f8381526020019081526020015f20600101549050919050565b6107918261076b565b61079a81610de8565b6107a4838361103f565b50505050565b5f6012905090565b6107ba610dcf565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461081e576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6108288282611129565b505050565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a61085781610de8565b61085f611213565b50565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a661088c81610de8565b610894610dfc565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610902576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108f990611dbc565b60405180910390fd5b5f8211610944576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161093b90611e24565b60405180910390fd5b8160075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ff9b1b116040518163ffffffff1660e01b8152600401602060405180830381865afa1580156109af573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906109d39190611e56565b1015610a14576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a0b90611ecb565b60405180910390fd5b60075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633dd0104e836040518263ffffffff1660e01b8152600401610a6e9190611a07565b5f604051808303815f87803b158015610a85575f5ffd5b505af1158015610a97573d5f5f3e3d5ffd5b50505050610aa58383611274565b505050565b5f60055f9054906101000a900460ff16905090565b5f5f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a610b2e81610de8565b610b366112f3565b50565b5f60065f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b606060048054610bac90611c72565b80601f0160208091040260200160405190810160405280929190818152602001828054610bd890611c72565b8015610c235780601f10610bfa57610100808354040283529160200191610c23565b820191905f5260205f20905b815481529060010190602001808311610c0657829003601f168201915b5050505050905090565b5f5f1b81565b5f5f610c3d610dcf565b9050610c4a818585610f4f565b600191505092915050565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b610c828261076b565b610c8b81610de8565b610c958383611129565b50505050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a81565b60075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f33905090565b610de38383836001611355565b505050565b610df981610df4610dcf565b611524565b50565b610e04610aaa565b15610e3b576040517fd93c066500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610ead575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610ea49190611ef8565b60405180910390fd5b610eb8825f83611575565b5050565b5f610ec78484610c9b565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811015610f495781811015610f3a578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610f3193929190611f11565b60405180910390fd5b610f4884848484035f611355565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610fbf575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610fb69190611ef8565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361102f575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016110269190611ef8565b60405180910390fd5b61103a838383611575565b505050565b5f61104a8383610b39565b61111f57600160065f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055506110bc610dcf565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a460019050611123565b5f90505b92915050565b5f6111348383610b39565b15611209575f60065f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055506111a6610dcf565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a46001905061120d565b5f90505b92915050565b61121b61158d565b5f60055f6101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa61125d610dcf565b60405161126a9190611ef8565b60405180910390a1565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036112e4575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016112db9190611ef8565b60405180910390fd5b6112ef5f8383611575565b5050565b6112fb610dfc565b600160055f6101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25861133e610dcf565b60405161134b9190611ef8565b60405180910390a1565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036113c5575f6040517fe602df050000000000000000000000000000000000000000000000000000000081526004016113bc9190611ef8565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611435575f6040517f94280d6200000000000000000000000000000000000000000000000000000000815260040161142c9190611ef8565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550801561151e578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516115159190611a07565b60405180910390a35b50505050565b61152e8282610b39565b6115715780826040517fe2517d3f000000000000000000000000000000000000000000000000000000008152600401611568929190611f46565b60405180910390fd5b5050565b61157d610dfc565b6115888383836115cd565b505050565b611595610aaa565b6115cb576040517f8dfc202b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361161d578060025f8282546116119190611f9a565b925050819055506116eb565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050818110156116a6578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161169d93929190611f11565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611732578060025f828254039250508190555061177c565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516117d99190611a07565b60405180910390a3505050565b5f5ffd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61181e816117ea565b8114611828575f5ffd5b50565b5f8135905061183981611815565b92915050565b5f60208284031215611854576118536117e6565b5b5f6118618482850161182b565b91505092915050565b5f8115159050919050565b61187e8161186a565b82525050565b5f6020820190506118975f830184611875565b92915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f6118df8261189d565b6118e981856118a7565b93506118f98185602086016118b7565b611902816118c5565b840191505092915050565b5f6020820190508181035f83015261192581846118d5565b905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6119568261192d565b9050919050565b6119668161194c565b8114611970575f5ffd5b50565b5f813590506119818161195d565b92915050565b5f819050919050565b61199981611987565b81146119a3575f5ffd5b50565b5f813590506119b481611990565b92915050565b5f5f604083850312156119d0576119cf6117e6565b5b5f6119dd85828601611973565b92505060206119ee858286016119a6565b9150509250929050565b611a0181611987565b82525050565b5f602082019050611a1a5f8301846119f8565b92915050565b5f5f5f60608486031215611a3757611a366117e6565b5b5f611a4486828701611973565b9350506020611a5586828701611973565b9250506040611a66868287016119a6565b9150509250925092565b5f819050919050565b611a8281611a70565b8114611a8c575f5ffd5b50565b5f81359050611a9d81611a79565b92915050565b5f60208284031215611ab857611ab76117e6565b5b5f611ac584828501611a8f565b91505092915050565b611ad781611a70565b82525050565b5f602082019050611af05f830184611ace565b92915050565b5f5f60408385031215611b0c57611b0b6117e6565b5b5f611b1985828601611a8f565b9250506020611b2a85828601611973565b9150509250929050565b5f60ff82169050919050565b611b4981611b34565b82525050565b5f602082019050611b625f830184611b40565b92915050565b5f60208284031215611b7d57611b7c6117e6565b5b5f611b8a84828501611973565b91505092915050565b5f5f60408385031215611ba957611ba86117e6565b5b5f611bb685828601611973565b9250506020611bc785828601611973565b9150509250929050565b5f819050919050565b5f611bf4611bef611bea8461192d565b611bd1565b61192d565b9050919050565b5f611c0582611bda565b9050919050565b5f611c1682611bfb565b9050919050565b611c2681611c0c565b82525050565b5f602082019050611c3f5f830184611c1d565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680611c8957607f821691505b602082108103611c9c57611c9b611c45565b5b50919050565b7f496e76616c6964206164647265737300000000000000000000000000000000005f82015250565b5f611cd6600f836118a7565b9150611ce182611ca2565b602082019050919050565b5f6020820190508181035f830152611d0381611cca565b9050919050565b7f496e73756666696369656e742062616c616e63650000000000000000000000005f82015250565b5f611d3e6014836118a7565b9150611d4982611d0a565b602082019050919050565b5f6020820190508181035f830152611d6b81611d32565b9050919050565b7f496e76616c696420726563697069656e740000000000000000000000000000005f82015250565b5f611da66011836118a7565b9150611db182611d72565b602082019050919050565b5f6020820190508181035f830152611dd381611d9a565b9050919050565b7f416d6f756e74206d757374206265203e203000000000000000000000000000005f82015250565b5f611e0e6012836118a7565b9150611e1982611dda565b602082019050919050565b5f6020820190508181035f830152611e3b81611e02565b9050919050565b5f81519050611e5081611990565b92915050565b5f60208284031215611e6b57611e6a6117e6565b5b5f611e7884828501611e42565b91505092915050565b7f4e6f7420656e6f75676820676f6c6400000000000000000000000000000000005f82015250565b5f611eb5600f836118a7565b9150611ec082611e81565b602082019050919050565b5f6020820190508181035f830152611ee281611ea9565b9050919050565b611ef28161194c565b82525050565b5f602082019050611f0b5f830184611ee9565b92915050565b5f606082019050611f245f830186611ee9565b611f3160208301856119f8565b611f3e60408301846119f8565b949350505050565b5f604082019050611f595f830185611ee9565b611f666020830184611ace565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611fa482611987565b9150611faf83611987565b9250828201905080821115611fc757611fc6611f6d565b5b9291505056fea2646970667358221220a9bedc9257f7682c654ed3c122af6a5bc293ee837f06c504b5928a73e32699fe64736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x156 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5C975ABB GT PUSH2 0xC1 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x3B2 JUMPI DUP1 PUSH4 0xD5391393 EQ PUSH2 0x3E2 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x400 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x41C JUMPI DUP1 PUSH4 0xE63AB1E9 EQ PUSH2 0x44C JUMPI DUP1 PUSH4 0xFBFA77CF EQ PUSH2 0x46A JUMPI PUSH2 0x156 JUMP JUMPDEST DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x2EE JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x30C JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x33C JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x346 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x376 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x394 JUMPI PUSH2 0x156 JUMP JUMPDEST DUP1 PUSH4 0x248A9CA3 GT PUSH2 0x113 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x242 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x272 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x28E JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x2AC JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x2C8 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x2D2 JUMPI PUSH2 0x156 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x18A JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1A8 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1D8 JUMPI DUP1 PUSH4 0x1C83BA4A EQ PUSH2 0x1F6 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x212 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x174 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16F SWAP2 SWAP1 PUSH2 0x183F JUMP JUMPDEST PUSH2 0x488 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x181 SWAP2 SWAP1 PUSH2 0x1884 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x192 PUSH2 0x501 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19F SWAP2 SWAP1 PUSH2 0x190D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BD SWAP2 SWAP1 PUSH2 0x19BA JUMP JUMPDEST PUSH2 0x591 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CF SWAP2 SWAP1 PUSH2 0x1884 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E0 PUSH2 0x5B3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1ED SWAP2 SWAP1 PUSH2 0x1A07 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x210 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20B SWAP2 SWAP1 PUSH2 0x19BA JUMP JUMPDEST PUSH2 0x5BC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x22C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x227 SWAP2 SWAP1 PUSH2 0x1A20 JUMP JUMPDEST PUSH2 0x73D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x239 SWAP2 SWAP1 PUSH2 0x1884 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x25C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x257 SWAP2 SWAP1 PUSH2 0x1AA3 JUMP JUMPDEST PUSH2 0x76B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x269 SWAP2 SWAP1 PUSH2 0x1ADD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x28C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x287 SWAP2 SWAP1 PUSH2 0x1AF6 JUMP JUMPDEST PUSH2 0x788 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x296 PUSH2 0x7AA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A3 SWAP2 SWAP1 PUSH2 0x1B4F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C1 SWAP2 SWAP1 PUSH2 0x1AF6 JUMP JUMPDEST PUSH2 0x7B2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2D0 PUSH2 0x82D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2EC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E7 SWAP2 SWAP1 PUSH2 0x19BA JUMP JUMPDEST PUSH2 0x862 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2F6 PUSH2 0xAAA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x303 SWAP2 SWAP1 PUSH2 0x1884 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x326 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x321 SWAP2 SWAP1 PUSH2 0x1B68 JUMP JUMPDEST PUSH2 0xABF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x333 SWAP2 SWAP1 PUSH2 0x1A07 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x344 PUSH2 0xB04 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x360 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x35B SWAP2 SWAP1 PUSH2 0x1AF6 JUMP JUMPDEST PUSH2 0xB39 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x36D SWAP2 SWAP1 PUSH2 0x1884 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x37E PUSH2 0xB9D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x38B SWAP2 SWAP1 PUSH2 0x190D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x39C PUSH2 0xC2D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A9 SWAP2 SWAP1 PUSH2 0x1ADD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3CC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3C7 SWAP2 SWAP1 PUSH2 0x19BA JUMP JUMPDEST PUSH2 0xC33 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D9 SWAP2 SWAP1 PUSH2 0x1884 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3EA PUSH2 0xC55 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F7 SWAP2 SWAP1 PUSH2 0x1ADD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x41A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x415 SWAP2 SWAP1 PUSH2 0x1AF6 JUMP JUMPDEST PUSH2 0xC79 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x436 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x431 SWAP2 SWAP1 PUSH2 0x1B93 JUMP JUMPDEST PUSH2 0xC9B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x443 SWAP2 SWAP1 PUSH2 0x1A07 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x454 PUSH2 0xD1D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x461 SWAP2 SWAP1 PUSH2 0x1ADD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x472 PUSH2 0xD41 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x47F SWAP2 SWAP1 PUSH2 0x1C2C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x4FA JUMPI POP PUSH2 0x4F9 DUP3 PUSH2 0xD66 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x510 SWAP1 PUSH2 0x1C72 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x53C SWAP1 PUSH2 0x1C72 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x587 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x55E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x587 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x56A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x59B PUSH2 0xDCF JUMP JUMPDEST SWAP1 POP PUSH2 0x5A8 DUP2 DUP6 DUP6 PUSH2 0xDD6 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH2 0x5E6 DUP2 PUSH2 0xDE8 JUMP JUMPDEST PUSH2 0x5EE PUSH2 0xDFC JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x65C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x653 SWAP1 PUSH2 0x1CEC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH2 0x666 DUP5 PUSH2 0xABF JUMP JUMPDEST LT ISZERO PUSH2 0x6A7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x69E SWAP1 PUSH2 0x1D54 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xECAD4F68 DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x701 SWAP2 SWAP1 PUSH2 0x1A07 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x718 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x72A JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH2 0x738 DUP4 DUP4 PUSH2 0xE3D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x747 PUSH2 0xDCF JUMP JUMPDEST SWAP1 POP PUSH2 0x754 DUP6 DUP3 DUP6 PUSH2 0xEBC JUMP JUMPDEST PUSH2 0x75F DUP6 DUP6 DUP6 PUSH2 0xF4F JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x791 DUP3 PUSH2 0x76B JUMP JUMPDEST PUSH2 0x79A DUP2 PUSH2 0xDE8 JUMP JUMPDEST PUSH2 0x7A4 DUP4 DUP4 PUSH2 0x103F JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x7BA PUSH2 0xDCF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x81E JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x828 DUP3 DUP3 PUSH2 0x1129 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A PUSH2 0x857 DUP2 PUSH2 0xDE8 JUMP JUMPDEST PUSH2 0x85F PUSH2 0x1213 JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH2 0x88C DUP2 PUSH2 0xDE8 JUMP JUMPDEST PUSH2 0x894 PUSH2 0xDFC JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x902 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8F9 SWAP1 PUSH2 0x1DBC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 GT PUSH2 0x944 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x93B SWAP1 PUSH2 0x1E24 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFF9B1B11 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9AF JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9D3 SWAP2 SWAP1 PUSH2 0x1E56 JUMP JUMPDEST LT ISZERO PUSH2 0xA14 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA0B SWAP1 PUSH2 0x1ECB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x3DD0104E DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA6E SWAP2 SWAP1 PUSH2 0x1A07 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA85 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA97 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH2 0xAA5 DUP4 DUP4 PUSH2 0x1274 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A PUSH2 0xB2E DUP2 PUSH2 0xDE8 JUMP JUMPDEST PUSH2 0xB36 PUSH2 0x12F3 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0xBAC SWAP1 PUSH2 0x1C72 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xBD8 SWAP1 PUSH2 0x1C72 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xC23 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xBFA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xC23 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xC06 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 SHL DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0xC3D PUSH2 0xDCF JUMP JUMPDEST SWAP1 POP PUSH2 0xC4A DUP2 DUP6 DUP6 PUSH2 0xF4F JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP2 JUMP JUMPDEST PUSH2 0xC82 DUP3 PUSH2 0x76B JUMP JUMPDEST PUSH2 0xC8B DUP2 PUSH2 0xDE8 JUMP JUMPDEST PUSH2 0xC95 DUP4 DUP4 PUSH2 0x1129 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A DUP2 JUMP JUMPDEST PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xDE3 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1355 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xDF9 DUP2 PUSH2 0xDF4 PUSH2 0xDCF JUMP JUMPDEST PUSH2 0x1524 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xE04 PUSH2 0xAAA JUMP JUMPDEST ISZERO PUSH2 0xE3B JUMPI PUSH1 0x40 MLOAD PUSH32 0xD93C066500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xEAD JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEA4 SWAP2 SWAP1 PUSH2 0x1EF8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xEB8 DUP3 PUSH0 DUP4 PUSH2 0x1575 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0xEC7 DUP5 DUP5 PUSH2 0xC9B JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0xF49 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xF3A JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF31 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1F11 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF48 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x1355 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xFBF JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFB6 SWAP2 SWAP1 PUSH2 0x1EF8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x102F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1026 SWAP2 SWAP1 PUSH2 0x1EF8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x103A DUP4 DUP4 DUP4 PUSH2 0x1575 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x104A DUP4 DUP4 PUSH2 0xB39 JUMP JUMPDEST PUSH2 0x111F JUMPI PUSH1 0x1 PUSH1 0x6 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x10BC PUSH2 0xDCF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x1123 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1134 DUP4 DUP4 PUSH2 0xB39 JUMP JUMPDEST ISZERO PUSH2 0x1209 JUMPI PUSH0 PUSH1 0x6 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x11A6 PUSH2 0xDCF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x120D JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x121B PUSH2 0x158D JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x125D PUSH2 0xDCF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x126A SWAP2 SWAP1 PUSH2 0x1EF8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x12E4 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12DB SWAP2 SWAP1 PUSH2 0x1EF8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x12EF PUSH0 DUP4 DUP4 PUSH2 0x1575 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x12FB PUSH2 0xDFC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x133E PUSH2 0xDCF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x134B SWAP2 SWAP1 PUSH2 0x1EF8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x13C5 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13BC SWAP2 SWAP1 PUSH2 0x1EF8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1435 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x142C SWAP2 SWAP1 PUSH2 0x1EF8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x151E JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1515 SWAP2 SWAP1 PUSH2 0x1A07 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x152E DUP3 DUP3 PUSH2 0xB39 JUMP JUMPDEST PUSH2 0x1571 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1568 SWAP3 SWAP2 SWAP1 PUSH2 0x1F46 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x157D PUSH2 0xDFC JUMP JUMPDEST PUSH2 0x1588 DUP4 DUP4 DUP4 PUSH2 0x15CD JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1595 PUSH2 0xAAA JUMP JUMPDEST PUSH2 0x15CB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8DFC202B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x161D JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1611 SWAP2 SWAP1 PUSH2 0x1F9A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x16EB JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x16A6 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x169D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1F11 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1732 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x177C JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x17D9 SWAP2 SWAP1 PUSH2 0x1A07 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x181E DUP2 PUSH2 0x17EA JUMP JUMPDEST DUP2 EQ PUSH2 0x1828 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1839 DUP2 PUSH2 0x1815 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1854 JUMPI PUSH2 0x1853 PUSH2 0x17E6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1861 DUP5 DUP3 DUP6 ADD PUSH2 0x182B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x187E DUP2 PUSH2 0x186A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1897 PUSH0 DUP4 ADD DUP5 PUSH2 0x1875 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x18DF DUP3 PUSH2 0x189D JUMP JUMPDEST PUSH2 0x18E9 DUP2 DUP6 PUSH2 0x18A7 JUMP JUMPDEST SWAP4 POP PUSH2 0x18F9 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x18B7 JUMP JUMPDEST PUSH2 0x1902 DUP2 PUSH2 0x18C5 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1925 DUP2 DUP5 PUSH2 0x18D5 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1956 DUP3 PUSH2 0x192D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1966 DUP2 PUSH2 0x194C JUMP JUMPDEST DUP2 EQ PUSH2 0x1970 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1981 DUP2 PUSH2 0x195D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1999 DUP2 PUSH2 0x1987 JUMP JUMPDEST DUP2 EQ PUSH2 0x19A3 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x19B4 DUP2 PUSH2 0x1990 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x19D0 JUMPI PUSH2 0x19CF PUSH2 0x17E6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x19DD DUP6 DUP3 DUP7 ADD PUSH2 0x1973 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x19EE DUP6 DUP3 DUP7 ADD PUSH2 0x19A6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A01 DUP2 PUSH2 0x1987 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A1A PUSH0 DUP4 ADD DUP5 PUSH2 0x19F8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1A37 JUMPI PUSH2 0x1A36 PUSH2 0x17E6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A44 DUP7 DUP3 DUP8 ADD PUSH2 0x1973 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1A55 DUP7 DUP3 DUP8 ADD PUSH2 0x1973 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1A66 DUP7 DUP3 DUP8 ADD PUSH2 0x19A6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A82 DUP2 PUSH2 0x1A70 JUMP JUMPDEST DUP2 EQ PUSH2 0x1A8C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A9D DUP2 PUSH2 0x1A79 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1AB8 JUMPI PUSH2 0x1AB7 PUSH2 0x17E6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1AC5 DUP5 DUP3 DUP6 ADD PUSH2 0x1A8F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1AD7 DUP2 PUSH2 0x1A70 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1AF0 PUSH0 DUP4 ADD DUP5 PUSH2 0x1ACE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B0C JUMPI PUSH2 0x1B0B PUSH2 0x17E6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B19 DUP6 DUP3 DUP7 ADD PUSH2 0x1A8F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1B2A DUP6 DUP3 DUP7 ADD PUSH2 0x1973 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B49 DUP2 PUSH2 0x1B34 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B62 PUSH0 DUP4 ADD DUP5 PUSH2 0x1B40 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B7D JUMPI PUSH2 0x1B7C PUSH2 0x17E6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B8A DUP5 DUP3 DUP6 ADD PUSH2 0x1973 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1BA9 JUMPI PUSH2 0x1BA8 PUSH2 0x17E6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1BB6 DUP6 DUP3 DUP7 ADD PUSH2 0x1973 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1BC7 DUP6 DUP3 DUP7 ADD PUSH2 0x1973 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1BF4 PUSH2 0x1BEF PUSH2 0x1BEA DUP5 PUSH2 0x192D JUMP JUMPDEST PUSH2 0x1BD1 JUMP JUMPDEST PUSH2 0x192D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1C05 DUP3 PUSH2 0x1BDA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1C16 DUP3 PUSH2 0x1BFB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C26 DUP2 PUSH2 0x1C0C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C3F PUSH0 DUP4 ADD DUP5 PUSH2 0x1C1D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1C89 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1C9C JUMPI PUSH2 0x1C9B PUSH2 0x1C45 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420616464726573730000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1CD6 PUSH1 0xF DUP4 PUSH2 0x18A7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CE1 DUP3 PUSH2 0x1CA2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1D03 DUP2 PUSH2 0x1CCA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742062616C616E6365000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1D3E PUSH1 0x14 DUP4 PUSH2 0x18A7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D49 DUP3 PUSH2 0x1D0A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1D6B DUP2 PUSH2 0x1D32 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420726563697069656E74000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1DA6 PUSH1 0x11 DUP4 PUSH2 0x18A7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DB1 DUP3 PUSH2 0x1D72 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1DD3 DUP2 PUSH2 0x1D9A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416D6F756E74206D757374206265203E20300000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1E0E PUSH1 0x12 DUP4 PUSH2 0x18A7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E19 DUP3 PUSH2 0x1DDA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1E3B DUP2 PUSH2 0x1E02 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1E50 DUP2 PUSH2 0x1990 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E6B JUMPI PUSH2 0x1E6A PUSH2 0x17E6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1E78 DUP5 DUP3 DUP6 ADD PUSH2 0x1E42 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F7420656E6F75676820676F6C640000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1EB5 PUSH1 0xF DUP4 PUSH2 0x18A7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EC0 DUP3 PUSH2 0x1E81 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1EE2 DUP2 PUSH2 0x1EA9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1EF2 DUP2 PUSH2 0x194C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F0B PUSH0 DUP4 ADD DUP5 PUSH2 0x1EE9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1F24 PUSH0 DUP4 ADD DUP7 PUSH2 0x1EE9 JUMP JUMPDEST PUSH2 0x1F31 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x19F8 JUMP JUMPDEST PUSH2 0x1F3E PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x19F8 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1F59 PUSH0 DUP4 ADD DUP6 PUSH2 0x1EE9 JUMP JUMPDEST PUSH2 0x1F66 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1ACE JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1FA4 DUP3 PUSH2 0x1987 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FAF DUP4 PUSH2 0x1987 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1FC7 JUMPI PUSH2 0x1FC6 PUSH2 0x1F6D JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA9 0xBE 0xDC SWAP3 JUMPI 0xF7 PUSH9 0x2C654ED3C122AF6A5B 0xC2 SWAP4 RETURNCONTRACT 0x83 PUSH32 0x6C504B5928A73E32699FE64736F6C634300081E003300000000000000000000 ",
							"sourceMap": "725:2193:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2565:202:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1760:89:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3979:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2830:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:328:11;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4757:244:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3810:120:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4226:136;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2688:82:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5328:245:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2839:77:11;;;:::i;:::-;;1786:365;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1726:84:8;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2985:116:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2711:73:11;;;:::i;:::-;;2854:136:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1962:93:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2187:49:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3296:178:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;806:62:11;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4642:138:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3532:140:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;874:62:11;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;984:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2565:202:0;2650:4;2688:32;2673:47;;;:11;:47;;;;:87;;;;2724:36;2748:11;2724:23;:36::i;:::-;2673:87;2666:94;;2565:202;;;:::o;1760:89:3:-;1805:13;1837:5;1830:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1760:89;:::o;3979:186::-;4052:4;4068:13;4084:12;:10;:12::i;:::-;4068:28;;4106:31;4115:5;4122:7;4131:5;4106:8;:31::i;:::-;4154:4;4147:11;;;3979:186;;;;:::o;2830:97::-;2882:7;2908:12;;2901:19;;2830:97;:::o;2293:328:11:-;844:24;2464:16:0;2475:4;2464:10;:16::i;:::-;1350:19:8::1;:17;:19::i;:::-;2453:1:11::2;2437:18;;:4;:18;;::::0;2429:46:::2;;;;;;;;;;;;:::i;:::-;;;;;;;;;2512:6;2493:15;2503:4;2493:9;:15::i;:::-;:25;;2485:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;2554:5;;;;;;;;;;;:23;;;2578:6;2554:31;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2595:19;2601:4;2607:6;2595:5;:19::i;:::-;2293:328:::0;;;:::o;4757:244:3:-;4844:4;4860:15;4878:12;:10;:12::i;:::-;4860:30;;4900:37;4916:4;4922:7;4931:5;4900:15;:37::i;:::-;4947:26;4957:4;4963:2;4967:5;4947:9;:26::i;:::-;4990:4;4983:11;;;4757:244;;;;;:::o;3810:120:0:-;3875:7;3901:6;:12;3908:4;3901:12;;;;;;;;;;;:22;;;3894:29;;3810:120;;;:::o;4226:136::-;4300:18;4313:4;4300:12;:18::i;:::-;2464:16;2475:4;2464:10;:16::i;:::-;4330:25:::1;4341:4;4347:7;4330:10;:25::i;:::-;;4226:136:::0;;;:::o;2688:82:3:-;2737:5;2761:2;2754:9;;2688:82;:::o;5328:245:0:-;5443:12;:10;:12::i;:::-;5421:34;;:18;:34;;;5417:102;;5478:30;;;;;;;;;;;;;;5417:102;5529:37;5541:4;5547:18;5529:11;:37::i;:::-;;5328:245;;:::o;2839:77:11:-;912:24;2464:16:0;2475:4;2464:10;:16::i;:::-;2899:10:11::1;:8;:10::i;:::-;2839:77:::0;:::o;1786:365::-;844:24;2464:16:0;2475:4;2464:10;:16::i;:::-;1350:19:8::1;:17;:19::i;:::-;1933:1:11::2;1919:16;;:2;:16;;::::0;1911:46:::2;;;;;;;;;;;;:::i;:::-;;;;;;;;;1984:1;1975:6;:10;1967:41;;;;;;;;;;;;:::i;:::-;;;;;;;;;2052:6;2026:5;;;;;;;;;;;:20;;;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:32;;2018:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;2089:5;;;;;;;;;;;:20;;;2110:6;2089:28;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2127:17;2133:2;2137:6;2127:5;:17::i;:::-;1786:365:::0;;;:::o;1726:84:8:-;1773:4;1796:7;;;;;;;;;;;1789:14;;1726:84;:::o;2985:116:3:-;3050:7;3076:9;:18;3086:7;3076:18;;;;;;;;;;;;;;;;3069:25;;2985:116;;;:::o;2711:73:11:-;912:24;2464:16:0;2475:4;2464:10;:16::i;:::-;2769:8:11::1;:6;:8::i;:::-;2711:73:::0;:::o;2854:136:0:-;2931:4;2954:6;:12;2961:4;2954:12;;;;;;;;;;;:20;;:29;2975:7;2954:29;;;;;;;;;;;;;;;;;;;;;;;;;2947:36;;2854:136;;;;:::o;1962:93:3:-;2009:13;2041:7;2034:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1962:93;:::o;2187:49:0:-;2232:4;2187:49;;;:::o;3296:178:3:-;3365:4;3381:13;3397:12;:10;:12::i;:::-;3381:28;;3419:27;3429:5;3436:2;3440:5;3419:9;:27::i;:::-;3463:4;3456:11;;;3296:178;;;;:::o;806:62:11:-;844:24;806:62;:::o;4642:138:0:-;4717:18;4730:4;4717:12;:18::i;:::-;2464:16;2475:4;2464:10;:16::i;:::-;4747:26:::1;4759:4;4765:7;4747:11;:26::i;:::-;;4642:138:::0;;;:::o;3532:140:3:-;3612:7;3638:11;:18;3650:5;3638:18;;;;;;;;;;;;;;;:27;3657:7;3638:27;;;;;;;;;;;;;;;;3631:34;;3532:140;;;;:::o;874:62:11:-;912:24;874:62;:::o;984:26::-;;;;;;;;;;;;;:::o;763:146:9:-;839:4;877:25;862:40;;;:11;:40;;;;855:47;;763:146;;;:::o;656:96:7:-;709:7;735:10;728:17;;656:96;:::o;8707:128:3:-;8791:37;8800:5;8807:7;8816:5;8823:4;8791:8;:37::i;:::-;8707:128;;;:::o;3199:103:0:-;3265:30;3276:4;3282:12;:10;:12::i;:::-;3265:10;:30::i;:::-;3199:103;:::o;1878:128:8:-;1943:8;:6;:8::i;:::-;1939:61;;;1974:15;;;;;;;;;;;;;;1939:61;1878:128::o;7965:206:3:-;8054:1;8035:21;;:7;:21;;;8031:89;;8106:1;8079:30;;;;;;;;;;;:::i;:::-;;;;;;;;8031:89;8129:35;8137:7;8154:1;8158:5;8129:7;:35::i;:::-;7965:206;;:::o;10396:476::-;10495:24;10522:25;10532:5;10539:7;10522:9;:25::i;:::-;10495:52;;10580:17;10561:16;:36;10557:309;;;10636:5;10617:16;:24;10613:130;;;10695:7;10704:16;10722:5;10668:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10613:130;10784:57;10793:5;10800:7;10828:5;10809:16;:24;10835:5;10784:8;:57::i;:::-;10557:309;10485:387;10396:476;;;:::o;5374:300::-;5473:1;5457:18;;:4;:18;;;5453:86;;5525:1;5498:30;;;;;;;;;;;:::i;:::-;;;;;;;;5453:86;5566:1;5552:16;;:2;:16;;;5548:86;;5620:1;5591:32;;;;;;;;;;;:::i;:::-;;;;;;;;5548:86;5643:24;5651:4;5657:2;5661:5;5643:7;:24::i;:::-;5374:300;;;:::o;6179:316:0:-;6256:4;6277:22;6285:4;6291:7;6277;:22::i;:::-;6272:217;;6347:4;6315:6;:12;6322:4;6315:12;;;;;;;;;;;:20;;:29;6336:7;6315:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;6397:12;:10;:12::i;:::-;6370:40;;6388:7;6370:40;;6382:4;6370:40;;;;;;;;;;6431:4;6424:11;;;;6272:217;6473:5;6466:12;;6179:316;;;;;:::o;6732:317::-;6810:4;6830:22;6838:4;6844:7;6830;:22::i;:::-;6826:217;;;6900:5;6868:6;:12;6875:4;6868:12;;;;;;;;;;;:20;;:29;6889:7;6868:29;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;6951:12;:10;:12::i;:::-;6924:40;;6942:7;6924:40;;6936:4;6924:40;;;;;;;;;;6985:4;6978:11;;;;6826:217;7027:5;7020:12;;6732:317;;;;;:::o;2586:117:8:-;1597:16;:14;:16::i;:::-;2654:5:::1;2644:7;;:15;;;;;;;;;;;;;;;;;;2674:22;2683:12;:10;:12::i;:::-;2674:22;;;;;;:::i;:::-;;;;;;;;2586:117::o:0;7439:208:3:-;7528:1;7509:21;;:7;:21;;;7505:91;;7582:1;7553:32;;;;;;;;;;;:::i;:::-;;;;;;;;7505:91;7605:35;7621:1;7625:7;7634:5;7605:7;:35::i;:::-;7439:208;;:::o;2339:115:8:-;1350:19;:17;:19::i;:::-;2408:4:::1;2398:7;;:14;;;;;;;;;;;;;;;;;;2427:20;2434:12;:10;:12::i;:::-;2427:20;;;;;;:::i;:::-;;;;;;;;2339:115::o:0;9682:432:3:-;9811:1;9794:19;;:5;:19;;;9790:89;;9865:1;9836:32;;;;;;;;;;;:::i;:::-;;;;;;;;9790:89;9911:1;9892:21;;:7;:21;;;9888:90;;9964:1;9936:31;;;;;;;;;;;:::i;:::-;;;;;;;;9888:90;10017:5;9987:11;:18;9999:5;9987:18;;;;;;;;;;;;;;;:27;10006:7;9987:27;;;;;;;;;;;;;;;:35;;;;10036:9;10032:76;;;10082:7;10066:31;;10075:5;10066:31;;;10091:5;10066:31;;;;;;:::i;:::-;;;;;;;;10032:76;9682:432;;;;:::o;3432:197:0:-;3520:22;3528:4;3534:7;3520;:22::i;:::-;3515:108;;3598:7;3607:4;3565:47;;;;;;;;;;;;:::i;:::-;;;;;;;;3515:108;3432:197;;:::o;1113:145:5:-;1350:19:8;:17;:19::i;:::-;1221:30:5::1;1235:4;1241:2;1245:5;1221:13;:30::i;:::-;1113:145:::0;;;:::o;2078:126:8:-;2141:8;:6;:8::i;:::-;2136:62;;2172:15;;;;;;;;;;;;;;2136:62;2078:126::o;5989:1107:3:-;6094:1;6078:18;;:4;:18;;;6074:540;;6230:5;6214:12;;:21;;;;;;;:::i;:::-;;;;;;;;6074:540;;;6266:19;6288:9;:15;6298:4;6288:15;;;;;;;;;;;;;;;;6266:37;;6335:5;6321:11;:19;6317:115;;;6392:4;6398:11;6411:5;6367:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6317:115;6584:5;6570:11;:19;6552:9;:15;6562:4;6552:15;;;;;;;;;;;;;;;:37;;;;6252:362;6074:540;6642:1;6628:16;;:2;:16;;;6624:425;;6807:5;6791:12;;:21;;;;;;;;;;;6624:425;;;7019:5;7002:9;:13;7012:2;7002:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6624:425;7079:2;7064:25;;7073:4;7064:25;;;7083:5;7064:25;;;;;;:::i;:::-;;;;;;;;5989:1107;;;:::o;88:117:12:-;197:1;194;187:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:139::-;1887:6;1882:3;1877;1871:23;1928:1;1919:6;1914:3;1910:16;1903:27;1798:139;;;:::o;1943:102::-;1984:6;2035:2;2031:7;2026:2;2019:5;2015:14;2011:28;2001:38;;1943:102;;;:::o;2051:377::-;2139:3;2167:39;2200:5;2167:39;:::i;:::-;2222:71;2286:6;2281:3;2222:71;:::i;:::-;2215:78;;2302:65;2360:6;2355:3;2348:4;2341:5;2337:16;2302:65;:::i;:::-;2392:29;2414:6;2392:29;:::i;:::-;2387:3;2383:39;2376:46;;2143:285;2051:377;;;;:::o;2434:313::-;2547:4;2585:2;2574:9;2570:18;2562:26;;2634:9;2628:4;2624:20;2620:1;2609:9;2605:17;2598:47;2662:78;2735:4;2726:6;2662:78;:::i;:::-;2654:86;;2434:313;;;;:::o;2753:126::-;2790:7;2830:42;2823:5;2819:54;2808:65;;2753:126;;;:::o;2885:96::-;2922:7;2951:24;2969:5;2951:24;:::i;:::-;2940:35;;2885:96;;;:::o;2987:122::-;3060:24;3078:5;3060:24;:::i;:::-;3053:5;3050:35;3040:63;;3099:1;3096;3089:12;3040:63;2987:122;:::o;3115:139::-;3161:5;3199:6;3186:20;3177:29;;3215:33;3242:5;3215:33;:::i;:::-;3115:139;;;;:::o;3260:77::-;3297:7;3326:5;3315:16;;3260:77;;;:::o;3343:122::-;3416:24;3434:5;3416:24;:::i;:::-;3409:5;3406:35;3396:63;;3455:1;3452;3445:12;3396:63;3343:122;:::o;3471:139::-;3517:5;3555:6;3542:20;3533:29;;3571:33;3598:5;3571:33;:::i;:::-;3471:139;;;;:::o;3616:474::-;3684:6;3692;3741:2;3729:9;3720:7;3716:23;3712:32;3709:119;;;3747:79;;:::i;:::-;3709:119;3867:1;3892:53;3937:7;3928:6;3917:9;3913:22;3892:53;:::i;:::-;3882:63;;3838:117;3994:2;4020:53;4065:7;4056:6;4045:9;4041:22;4020:53;:::i;:::-;4010:63;;3965:118;3616:474;;;;;:::o;4096:118::-;4183:24;4201:5;4183:24;:::i;:::-;4178:3;4171:37;4096:118;;:::o;4220:222::-;4313:4;4351:2;4340:9;4336:18;4328:26;;4364:71;4432:1;4421:9;4417:17;4408:6;4364:71;:::i;:::-;4220:222;;;;:::o;4448:619::-;4525:6;4533;4541;4590:2;4578:9;4569:7;4565:23;4561:32;4558:119;;;4596:79;;:::i;:::-;4558:119;4716:1;4741:53;4786:7;4777:6;4766:9;4762:22;4741:53;:::i;:::-;4731:63;;4687:117;4843:2;4869:53;4914:7;4905:6;4894:9;4890:22;4869:53;:::i;:::-;4859:63;;4814:118;4971:2;4997:53;5042:7;5033:6;5022:9;5018:22;4997:53;:::i;:::-;4987:63;;4942:118;4448:619;;;;;:::o;5073:77::-;5110:7;5139:5;5128:16;;5073:77;;;:::o;5156:122::-;5229:24;5247:5;5229:24;:::i;:::-;5222:5;5219:35;5209:63;;5268:1;5265;5258:12;5209:63;5156:122;:::o;5284:139::-;5330:5;5368:6;5355:20;5346:29;;5384:33;5411:5;5384:33;:::i;:::-;5284:139;;;;:::o;5429:329::-;5488:6;5537:2;5525:9;5516:7;5512:23;5508:32;5505:119;;;5543:79;;:::i;:::-;5505:119;5663:1;5688:53;5733:7;5724:6;5713:9;5709:22;5688:53;:::i;:::-;5678:63;;5634:117;5429:329;;;;:::o;5764:118::-;5851:24;5869:5;5851:24;:::i;:::-;5846:3;5839:37;5764:118;;:::o;5888:222::-;5981:4;6019:2;6008:9;6004:18;5996:26;;6032:71;6100:1;6089:9;6085:17;6076:6;6032:71;:::i;:::-;5888:222;;;;:::o;6116:474::-;6184:6;6192;6241:2;6229:9;6220:7;6216:23;6212:32;6209:119;;;6247:79;;:::i;:::-;6209:119;6367:1;6392:53;6437:7;6428:6;6417:9;6413:22;6392:53;:::i;:::-;6382:63;;6338:117;6494:2;6520:53;6565:7;6556:6;6545:9;6541:22;6520:53;:::i;:::-;6510:63;;6465:118;6116:474;;;;;:::o;6596:86::-;6631:7;6671:4;6664:5;6660:16;6649:27;;6596:86;;;:::o;6688:112::-;6771:22;6787:5;6771:22;:::i;:::-;6766:3;6759:35;6688:112;;:::o;6806:214::-;6895:4;6933:2;6922:9;6918:18;6910:26;;6946:67;7010:1;6999:9;6995:17;6986:6;6946:67;:::i;:::-;6806:214;;;;:::o;7026:329::-;7085:6;7134:2;7122:9;7113:7;7109:23;7105:32;7102:119;;;7140:79;;:::i;:::-;7102:119;7260:1;7285:53;7330:7;7321:6;7310:9;7306:22;7285:53;:::i;:::-;7275:63;;7231:117;7026:329;;;;:::o;7361:474::-;7429:6;7437;7486:2;7474:9;7465:7;7461:23;7457:32;7454:119;;;7492:79;;:::i;:::-;7454:119;7612:1;7637:53;7682:7;7673:6;7662:9;7658:22;7637:53;:::i;:::-;7627:63;;7583:117;7739:2;7765:53;7810:7;7801:6;7790:9;7786:22;7765:53;:::i;:::-;7755:63;;7710:118;7361:474;;;;;:::o;7841:60::-;7869:3;7890:5;7883:12;;7841:60;;;:::o;7907:142::-;7957:9;7990:53;8008:34;8017:24;8035:5;8017:24;:::i;:::-;8008:34;:::i;:::-;7990:53;:::i;:::-;7977:66;;7907:142;;;:::o;8055:126::-;8105:9;8138:37;8169:5;8138:37;:::i;:::-;8125:50;;8055:126;;;:::o;8187:148::-;8259:9;8292:37;8323:5;8292:37;:::i;:::-;8279:50;;8187:148;;;:::o;8341:175::-;8450:59;8503:5;8450:59;:::i;:::-;8445:3;8438:72;8341:175;;:::o;8522:266::-;8637:4;8675:2;8664:9;8660:18;8652:26;;8688:93;8778:1;8767:9;8763:17;8754:6;8688:93;:::i;:::-;8522:266;;;;:::o;8794:180::-;8842:77;8839:1;8832:88;8939:4;8936:1;8929:15;8963:4;8960:1;8953:15;8980:320;9024:6;9061:1;9055:4;9051:12;9041:22;;9108:1;9102:4;9098:12;9129:18;9119:81;;9185:4;9177:6;9173:17;9163:27;;9119:81;9247:2;9239:6;9236:14;9216:18;9213:38;9210:84;;9266:18;;:::i;:::-;9210:84;9031:269;8980:320;;;:::o;9306:165::-;9446:17;9442:1;9434:6;9430:14;9423:41;9306:165;:::o;9477:366::-;9619:3;9640:67;9704:2;9699:3;9640:67;:::i;:::-;9633:74;;9716:93;9805:3;9716:93;:::i;:::-;9834:2;9829:3;9825:12;9818:19;;9477:366;;;:::o;9849:419::-;10015:4;10053:2;10042:9;10038:18;10030:26;;10102:9;10096:4;10092:20;10088:1;10077:9;10073:17;10066:47;10130:131;10256:4;10130:131;:::i;:::-;10122:139;;9849:419;;;:::o;10274:170::-;10414:22;10410:1;10402:6;10398:14;10391:46;10274:170;:::o;10450:366::-;10592:3;10613:67;10677:2;10672:3;10613:67;:::i;:::-;10606:74;;10689:93;10778:3;10689:93;:::i;:::-;10807:2;10802:3;10798:12;10791:19;;10450:366;;;:::o;10822:419::-;10988:4;11026:2;11015:9;11011:18;11003:26;;11075:9;11069:4;11065:20;11061:1;11050:9;11046:17;11039:47;11103:131;11229:4;11103:131;:::i;:::-;11095:139;;10822:419;;;:::o;11247:167::-;11387:19;11383:1;11375:6;11371:14;11364:43;11247:167;:::o;11420:366::-;11562:3;11583:67;11647:2;11642:3;11583:67;:::i;:::-;11576:74;;11659:93;11748:3;11659:93;:::i;:::-;11777:2;11772:3;11768:12;11761:19;;11420:366;;;:::o;11792:419::-;11958:4;11996:2;11985:9;11981:18;11973:26;;12045:9;12039:4;12035:20;12031:1;12020:9;12016:17;12009:47;12073:131;12199:4;12073:131;:::i;:::-;12065:139;;11792:419;;;:::o;12217:168::-;12357:20;12353:1;12345:6;12341:14;12334:44;12217:168;:::o;12391:366::-;12533:3;12554:67;12618:2;12613:3;12554:67;:::i;:::-;12547:74;;12630:93;12719:3;12630:93;:::i;:::-;12748:2;12743:3;12739:12;12732:19;;12391:366;;;:::o;12763:419::-;12929:4;12967:2;12956:9;12952:18;12944:26;;13016:9;13010:4;13006:20;13002:1;12991:9;12987:17;12980:47;13044:131;13170:4;13044:131;:::i;:::-;13036:139;;12763:419;;;:::o;13188:143::-;13245:5;13276:6;13270:13;13261:22;;13292:33;13319:5;13292:33;:::i;:::-;13188:143;;;;:::o;13337:351::-;13407:6;13456:2;13444:9;13435:7;13431:23;13427:32;13424:119;;;13462:79;;:::i;:::-;13424:119;13582:1;13607:64;13663:7;13654:6;13643:9;13639:22;13607:64;:::i;:::-;13597:74;;13553:128;13337:351;;;;:::o;13694:165::-;13834:17;13830:1;13822:6;13818:14;13811:41;13694:165;:::o;13865:366::-;14007:3;14028:67;14092:2;14087:3;14028:67;:::i;:::-;14021:74;;14104:93;14193:3;14104:93;:::i;:::-;14222:2;14217:3;14213:12;14206:19;;13865:366;;;:::o;14237:419::-;14403:4;14441:2;14430:9;14426:18;14418:26;;14490:9;14484:4;14480:20;14476:1;14465:9;14461:17;14454:47;14518:131;14644:4;14518:131;:::i;:::-;14510:139;;14237:419;;;:::o;14662:118::-;14749:24;14767:5;14749:24;:::i;:::-;14744:3;14737:37;14662:118;;:::o;14786:222::-;14879:4;14917:2;14906:9;14902:18;14894:26;;14930:71;14998:1;14987:9;14983:17;14974:6;14930:71;:::i;:::-;14786:222;;;;:::o;15014:442::-;15163:4;15201:2;15190:9;15186:18;15178:26;;15214:71;15282:1;15271:9;15267:17;15258:6;15214:71;:::i;:::-;15295:72;15363:2;15352:9;15348:18;15339:6;15295:72;:::i;:::-;15377;15445:2;15434:9;15430:18;15421:6;15377:72;:::i;:::-;15014:442;;;;;;:::o;15462:332::-;15583:4;15621:2;15610:9;15606:18;15598:26;;15634:71;15702:1;15691:9;15687:17;15678:6;15634:71;:::i;:::-;15715:72;15783:2;15772:9;15768:18;15759:6;15715:72;:::i;:::-;15462:332;;;;;:::o;15800:180::-;15848:77;15845:1;15838:88;15945:4;15942:1;15935:15;15969:4;15966:1;15959:15;15986:191;16026:3;16045:20;16063:1;16045:20;:::i;:::-;16040:25;;16079:20;16097:1;16079:20;:::i;:::-;16074:25;;16122:1;16119;16115:9;16108:16;;16143:3;16140:1;16137:10;16134:36;;;16150:18;;:::i;:::-;16134:36;15986:191;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1639000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DEFAULT_ADMIN_ROLE()": "462",
								"MINTER_ROLE()": "369",
								"PAUSER_ROLE()": "435",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2873",
								"burnFromVault(address,uint256)": "infinite",
								"decimals()": "405",
								"getRoleAdmin(bytes32)": "infinite",
								"grantRole(bytes32,address)": "infinite",
								"hasRole(bytes32,address)": "3210",
								"mint(address,uint256)": "infinite",
								"name()": "infinite",
								"pause()": "infinite",
								"paused()": "2496",
								"renounceRole(bytes32,address)": "infinite",
								"revokeRole(bytes32,address)": "infinite",
								"supportsInterface(bytes4)": "741",
								"symbol()": "infinite",
								"totalSupply()": "2522",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"unpause()": "infinite",
								"vault()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 725,
									"end": 2918,
									"name": "PUSH",
									"source": 11,
									"value": "80"
								},
								{
									"begin": 725,
									"end": 2918,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 725,
									"end": 2918,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1187,
									"end": 1636,
									"name": "CALLVALUE",
									"source": 11
								},
								{
									"begin": 1187,
									"end": 1636,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1187,
									"end": 1636,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 1187,
									"end": 1636,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 1187,
									"end": 1636,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 1187,
									"end": 1636,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1187,
									"end": 1636,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1187,
									"end": 1636,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 1187,
									"end": 1636,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 1187,
									"end": 1636,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1187,
									"end": 1636,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1187,
									"end": 1636,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 1187,
									"end": 1636,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 1187,
									"end": 1636,
									"name": "PUSHSIZE",
									"source": 11
								},
								{
									"begin": 1187,
									"end": 1636,
									"name": "CODESIZE",
									"source": 11
								},
								{
									"begin": 1187,
									"end": 1636,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 1187,
									"end": 1636,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1187,
									"end": 1636,
									"name": "PUSHSIZE",
									"source": 11
								},
								{
									"begin": 1187,
									"end": 1636,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 1187,
									"end": 1636,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 1187,
									"end": 1636,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1187,
									"end": 1636,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1187,
									"end": 1636,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1187,
									"end": 1636,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 1187,
									"end": 1636,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1187,
									"end": 1636,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1187,
									"end": 1636,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1187,
									"end": 1636,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1187,
									"end": 1636,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 1187,
									"end": 1636,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1187,
									"end": 1636,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1187,
									"end": 1636,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "3"
								},
								{
									"begin": 1187,
									"end": 1636,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1187,
									"end": 1636,
									"name": "tag",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 1187,
									"end": 1636,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 3,
									"value": "417572697820476F6C6420546F6B656E00000000000000000000000000000000"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 3,
									"value": "474F4C4400000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1656,
									"end": 1661,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1648,
									"end": 1653,
									"name": "PUSH",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 1648,
									"end": 1661,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "tag",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1681,
									"end": 1688,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1671,
									"end": 1678,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 1671,
									"end": 1688,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "tag",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1338,
									"end": 1339,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1307,
									"end": 1340,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1307,
									"end": 1340,
									"modifierDepth": 1,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 1307,
									"end": 1326,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1307,
									"end": 1340,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1307,
									"end": 1340,
									"modifierDepth": 1,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 1307,
									"end": 1340,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 1299,
									"end": 1366,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "11"
								},
								{
									"begin": 1299,
									"end": 1366,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 1299,
									"end": 1366,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 1299,
									"end": 1366,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 1299,
									"end": 1366,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1299,
									"end": 1366,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1299,
									"end": 1366,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1299,
									"end": 1366,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 1299,
									"end": 1366,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1299,
									"end": 1366,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "12"
								},
								{
									"begin": 1299,
									"end": 1366,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1299,
									"end": 1366,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "13"
								},
								{
									"begin": 1299,
									"end": 1366,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1299,
									"end": 1366,
									"modifierDepth": 1,
									"name": "tag",
									"source": 11,
									"value": "12"
								},
								{
									"begin": 1299,
									"end": 1366,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1299,
									"end": 1366,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 1299,
									"end": 1366,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 1299,
									"end": 1366,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1299,
									"end": 1366,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1299,
									"end": 1366,
									"modifierDepth": 1,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 1299,
									"end": 1366,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1299,
									"end": 1366,
									"modifierDepth": 1,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 1299,
									"end": 1366,
									"modifierDepth": 1,
									"name": "tag",
									"source": 11,
									"value": "11"
								},
								{
									"begin": 1299,
									"end": 1366,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1401,
									"end": 1402,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1384,
									"end": 1403,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1384,
									"end": 1403,
									"modifierDepth": 1,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 1384,
									"end": 1389,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1384,
									"end": 1403,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1384,
									"end": 1403,
									"modifierDepth": 1,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 1384,
									"end": 1403,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 1376,
									"end": 1421,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "14"
								},
								{
									"begin": 1376,
									"end": 1421,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 1376,
									"end": 1421,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 1376,
									"end": 1421,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 1376,
									"end": 1421,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1376,
									"end": 1421,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1376,
									"end": 1421,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1376,
									"end": 1421,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 1376,
									"end": 1421,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1376,
									"end": 1421,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "15"
								},
								{
									"begin": 1376,
									"end": 1421,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1376,
									"end": 1421,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "16"
								},
								{
									"begin": 1376,
									"end": 1421,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1376,
									"end": 1421,
									"modifierDepth": 1,
									"name": "tag",
									"source": 11,
									"value": "15"
								},
								{
									"begin": 1376,
									"end": 1421,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1376,
									"end": 1421,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 1376,
									"end": 1421,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 1376,
									"end": 1421,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1376,
									"end": 1421,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1376,
									"end": 1421,
									"modifierDepth": 1,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 1376,
									"end": 1421,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1376,
									"end": 1421,
									"modifierDepth": 1,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 1376,
									"end": 1421,
									"modifierDepth": 1,
									"name": "tag",
									"source": 11,
									"value": "14"
								},
								{
									"begin": 1376,
									"end": 1421,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1454,
									"end": 1473,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1432,
									"end": 1437,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "7"
								},
								{
									"begin": 1432,
									"end": 1437,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1432,
									"end": 1474,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "100"
								},
								{
									"begin": 1432,
									"end": 1474,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 11
								},
								{
									"begin": 1432,
									"end": 1474,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1432,
									"end": 1474,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 11
								},
								{
									"begin": 1432,
									"end": 1474,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1432,
									"end": 1474,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1432,
									"end": 1474,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 1432,
									"end": 1474,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 11
								},
								{
									"begin": 1432,
									"end": 1474,
									"modifierDepth": 1,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 1432,
									"end": 1474,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1432,
									"end": 1474,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 1432,
									"end": 1474,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1432,
									"end": 1474,
									"modifierDepth": 1,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 1432,
									"end": 1474,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 1432,
									"end": 1474,
									"modifierDepth": 1,
									"name": "OR",
									"source": 11
								},
								{
									"begin": 1432,
									"end": 1474,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1432,
									"end": 1474,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 1432,
									"end": 1474,
									"modifierDepth": 1,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1512,
									"end": 1549,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "17"
								},
								{
									"begin": 2232,
									"end": 2236,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1523,
									"end": 1541,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1523,
									"end": 1541,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 11
								},
								{
									"begin": 1543,
									"end": 1548,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1512,
									"end": 1522,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "18"
								},
								{
									"begin": 1512,
									"end": 1522,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1512,
									"end": 1522,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 11
								},
								{
									"begin": 1512,
									"end": 1549,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1512,
									"end": 1549,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 11
								},
								{
									"begin": 1512,
									"end": 1549,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1512,
									"end": 1549,
									"modifierDepth": 1,
									"name": "tag",
									"source": 11,
									"value": "17"
								},
								{
									"begin": 1512,
									"end": 1549,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1512,
									"end": 1549,
									"modifierDepth": 1,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1559,
									"end": 1589,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "19"
								},
								{
									"begin": 844,
									"end": 868,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6"
								},
								{
									"begin": 1583,
									"end": 1588,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1559,
									"end": 1569,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "18"
								},
								{
									"begin": 1559,
									"end": 1569,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1559,
									"end": 1569,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 11
								},
								{
									"begin": 1559,
									"end": 1589,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1559,
									"end": 1589,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 11
								},
								{
									"begin": 1559,
									"end": 1589,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1559,
									"end": 1589,
									"modifierDepth": 1,
									"name": "tag",
									"source": 11,
									"value": "19"
								},
								{
									"begin": 1559,
									"end": 1589,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1559,
									"end": 1589,
									"modifierDepth": 1,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1599,
									"end": 1629,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 912,
									"end": 936,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A"
								},
								{
									"begin": 1623,
									"end": 1628,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1599,
									"end": 1609,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "18"
								},
								{
									"begin": 1599,
									"end": 1609,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1599,
									"end": 1609,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 11
								},
								{
									"begin": 1599,
									"end": 1629,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1599,
									"end": 1629,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 11
								},
								{
									"begin": 1599,
									"end": 1629,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1599,
									"end": 1629,
									"modifierDepth": 1,
									"name": "tag",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1599,
									"end": 1629,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1599,
									"end": 1629,
									"modifierDepth": 1,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1187,
									"end": 1636,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1187,
									"end": 1636,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 725,
									"end": 2918,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "21"
								},
								{
									"begin": 725,
									"end": 2918,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6256,
									"end": 6260,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 6285,
									"end": 6289,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6298,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6277,
									"end": 6284,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 6277,
									"end": 6284,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6277,
									"end": 6284,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 6277,
									"end": 6299,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "tag",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 6347,
									"end": 6351,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6315,
									"end": 6321,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6322,
									"end": 6326,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6335,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6335,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6336,
									"end": 6343,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 6397,
									"end": 6407,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 6397,
									"end": 6407,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6397,
									"end": 6407,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 6397,
									"end": 6409,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "tag",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6388,
									"end": 6395,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6382,
									"end": 6386,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "LOG4",
									"source": 0
								},
								{
									"begin": 6431,
									"end": 6435,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "tag",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6473,
									"end": 6478,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6466,
									"end": 6478,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6466,
									"end": 6478,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "tag",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "tag",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2931,
									"end": 2935,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2960,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2961,
									"end": 2965,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2974,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2974,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2975,
									"end": 2982,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2947,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2947,
									"end": 2983,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 656,
									"end": 752,
									"name": "tag",
									"source": 7,
									"value": "27"
								},
								{
									"begin": 656,
									"end": 752,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 709,
									"end": 716,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 735,
									"end": 745,
									"name": "CALLER",
									"source": 7
								},
								{
									"begin": 728,
									"end": 745,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 728,
									"end": 745,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 656,
									"end": 752,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 656,
									"end": 752,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 12,
									"value": "32"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 12,
									"value": "34"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 12,
									"value": "35"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "69"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "34"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 12,
									"value": "69"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 12,
									"value": "36"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "71"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "35"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 12,
									"value": "71"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "72"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 12,
									"value": "72"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 12,
									"value": "37"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "74"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "36"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 12,
									"value": "74"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "tag",
									"source": 12,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 924,
									"end": 930,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 932,
									"end": 938,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 981,
									"end": 983,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 969,
									"end": 978,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 960,
									"end": 967,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 956,
									"end": 979,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 952,
									"end": 984,
									"name": "SLT",
									"source": 12
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "76"
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "77"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "32"
								},
								{
									"begin": 987,
									"end": 1066,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "tag",
									"source": 12,
									"value": "77"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "tag",
									"source": 12,
									"value": "76"
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1107,
									"end": 1108,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "78"
								},
								{
									"begin": 1188,
									"end": 1195,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 1179,
									"end": 1185,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1168,
									"end": 1177,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 1164,
									"end": 1186,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "37"
								},
								{
									"begin": 1132,
									"end": 1196,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "tag",
									"source": 12,
									"value": "78"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1122,
									"end": 1196,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 1122,
									"end": 1196,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1078,
									"end": 1206,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1245,
									"end": 1247,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "79"
								},
								{
									"begin": 1327,
									"end": 1334,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 1318,
									"end": 1324,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1307,
									"end": 1316,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 1303,
									"end": 1325,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "37"
								},
								{
									"begin": 1271,
									"end": 1335,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "tag",
									"source": 12,
									"value": "79"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1261,
									"end": 1335,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1261,
									"end": 1335,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1216,
									"end": 1345,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 845,
									"end": 1352,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1358,
									"end": 1457,
									"name": "tag",
									"source": 12,
									"value": "38"
								},
								{
									"begin": 1358,
									"end": 1457,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1410,
									"end": 1416,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1444,
									"end": 1449,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1438,
									"end": 1450,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 1428,
									"end": 1450,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1428,
									"end": 1450,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1358,
									"end": 1457,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1358,
									"end": 1457,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1358,
									"end": 1457,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1358,
									"end": 1457,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1463,
									"end": 1643,
									"name": "tag",
									"source": 12,
									"value": "39"
								},
								{
									"begin": 1463,
									"end": 1643,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1511,
									"end": 1588,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1508,
									"end": 1509,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1501,
									"end": 1589,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1608,
									"end": 1612,
									"name": "PUSH",
									"source": 12,
									"value": "41"
								},
								{
									"begin": 1605,
									"end": 1606,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 1598,
									"end": 1613,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1632,
									"end": 1636,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 1629,
									"end": 1630,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1622,
									"end": 1637,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 1649,
									"end": 1829,
									"name": "tag",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 1649,
									"end": 1829,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1697,
									"end": 1774,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1694,
									"end": 1695,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1687,
									"end": 1775,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1794,
									"end": 1798,
									"name": "PUSH",
									"source": 12,
									"value": "22"
								},
								{
									"begin": 1791,
									"end": 1792,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 1784,
									"end": 1799,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1818,
									"end": 1822,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 1815,
									"end": 1816,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1808,
									"end": 1823,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 1835,
									"end": 2155,
									"name": "tag",
									"source": 12,
									"value": "41"
								},
								{
									"begin": 1835,
									"end": 2155,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1879,
									"end": 1885,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1916,
									"end": 1917,
									"name": "PUSH",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 1910,
									"end": 1914,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1906,
									"end": 1918,
									"name": "DIV",
									"source": 12
								},
								{
									"begin": 1896,
									"end": 1918,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1896,
									"end": 1918,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1963,
									"end": 1964,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 1957,
									"end": 1961,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1953,
									"end": 1965,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 1984,
									"end": 2002,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1974,
									"end": 2055,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "84"
								},
								{
									"begin": 1974,
									"end": 2055,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 2040,
									"end": 2044,
									"name": "PUSH",
									"source": 12,
									"value": "7F"
								},
								{
									"begin": 2032,
									"end": 2038,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2028,
									"end": 2045,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 2018,
									"end": 2045,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 2018,
									"end": 2045,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1974,
									"end": 2055,
									"name": "tag",
									"source": 12,
									"value": "84"
								},
								{
									"begin": 1974,
									"end": 2055,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2102,
									"end": 2104,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 2094,
									"end": 2100,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2091,
									"end": 2105,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 2071,
									"end": 2089,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2068,
									"end": 2106,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 2065,
									"end": 2149,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "85"
								},
								{
									"begin": 2065,
									"end": 2149,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 2121,
									"end": 2139,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "86"
								},
								{
									"begin": 2121,
									"end": 2139,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 2121,
									"end": 2139,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2121,
									"end": 2139,
									"name": "tag",
									"source": 12,
									"value": "86"
								},
								{
									"begin": 2121,
									"end": 2139,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2065,
									"end": 2149,
									"name": "tag",
									"source": 12,
									"value": "85"
								},
								{
									"begin": 2065,
									"end": 2149,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1886,
									"end": 2155,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1835,
									"end": 2155,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1835,
									"end": 2155,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1835,
									"end": 2155,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1835,
									"end": 2155,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2161,
									"end": 2302,
									"name": "tag",
									"source": 12,
									"value": "42"
								},
								{
									"begin": 2161,
									"end": 2302,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2210,
									"end": 2214,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2233,
									"end": 2236,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2225,
									"end": 2236,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2225,
									"end": 2236,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2256,
									"end": 2259,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2253,
									"end": 2254,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2246,
									"end": 2260,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 2290,
									"end": 2294,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 2287,
									"end": 2288,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2277,
									"end": 2295,
									"name": "KECCAK256",
									"source": 12
								},
								{
									"begin": 2269,
									"end": 2295,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2269,
									"end": 2295,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2161,
									"end": 2302,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 2161,
									"end": 2302,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2161,
									"end": 2302,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2161,
									"end": 2302,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2308,
									"end": 2401,
									"name": "tag",
									"source": 12,
									"value": "43"
								},
								{
									"begin": 2308,
									"end": 2401,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2345,
									"end": 2351,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2392,
									"end": 2394,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 2387,
									"end": 2389,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 2380,
									"end": 2385,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 2376,
									"end": 2390,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2372,
									"end": 2395,
									"name": "DIV",
									"source": 12
								},
								{
									"begin": 2362,
									"end": 2395,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2362,
									"end": 2395,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2308,
									"end": 2401,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 2308,
									"end": 2401,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2308,
									"end": 2401,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2308,
									"end": 2401,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2407,
									"end": 2514,
									"name": "tag",
									"source": 12,
									"value": "44"
								},
								{
									"begin": 2407,
									"end": 2514,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2451,
									"end": 2459,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2501,
									"end": 2506,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2495,
									"end": 2499,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2491,
									"end": 2507,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 2470,
									"end": 2507,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2470,
									"end": 2507,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2407,
									"end": 2514,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 2407,
									"end": 2514,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 2407,
									"end": 2514,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2407,
									"end": 2514,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2407,
									"end": 2514,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2520,
									"end": 2913,
									"name": "tag",
									"source": 12,
									"value": "45"
								},
								{
									"begin": 2520,
									"end": 2913,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2589,
									"end": 2595,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2639,
									"end": 2640,
									"name": "PUSH",
									"source": 12,
									"value": "8"
								},
								{
									"begin": 2627,
									"end": 2637,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 2623,
									"end": 2641,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 2662,
									"end": 2759,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "91"
								},
								{
									"begin": 2692,
									"end": 2758,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2681,
									"end": 2690,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2662,
									"end": 2759,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "44"
								},
								{
									"begin": 2662,
									"end": 2759,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2662,
									"end": 2759,
									"name": "tag",
									"source": 12,
									"value": "91"
								},
								{
									"begin": 2662,
									"end": 2759,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2780,
									"end": 2819,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "92"
								},
								{
									"begin": 2810,
									"end": 2818,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 2799,
									"end": 2808,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 2780,
									"end": 2819,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "44"
								},
								{
									"begin": 2780,
									"end": 2819,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2780,
									"end": 2819,
									"name": "tag",
									"source": 12,
									"value": "92"
								},
								{
									"begin": 2780,
									"end": 2819,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2768,
									"end": 2819,
									"name": "SWAP6",
									"source": 12
								},
								{
									"begin": 2768,
									"end": 2819,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2852,
									"end": 2856,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 2848,
									"end": 2857,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 2841,
									"end": 2846,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2837,
									"end": 2858,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 2828,
									"end": 2858,
									"name": "SWAP4",
									"source": 12
								},
								{
									"begin": 2828,
									"end": 2858,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2901,
									"end": 2905,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 2891,
									"end": 2899,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 2887,
									"end": 2906,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 2880,
									"end": 2885,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2877,
									"end": 2907,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 2867,
									"end": 2907,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 2867,
									"end": 2907,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2596,
									"end": 2913,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2596,
									"end": 2913,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2520,
									"end": 2913,
									"name": "SWAP4",
									"source": 12
								},
								{
									"begin": 2520,
									"end": 2913,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 2520,
									"end": 2913,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2520,
									"end": 2913,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2520,
									"end": 2913,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2520,
									"end": 2913,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2919,
									"end": 2996,
									"name": "tag",
									"source": 12,
									"value": "46"
								},
								{
									"begin": 2919,
									"end": 2996,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2956,
									"end": 2963,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2985,
									"end": 2990,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2974,
									"end": 2990,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2974,
									"end": 2990,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2919,
									"end": 2996,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 2919,
									"end": 2996,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2919,
									"end": 2996,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2919,
									"end": 2996,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3002,
									"end": 3062,
									"name": "tag",
									"source": 12,
									"value": "47"
								},
								{
									"begin": 3002,
									"end": 3062,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3030,
									"end": 3033,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3051,
									"end": 3056,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3044,
									"end": 3056,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3044,
									"end": 3056,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3002,
									"end": 3062,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 3002,
									"end": 3062,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3002,
									"end": 3062,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3002,
									"end": 3062,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3068,
									"end": 3210,
									"name": "tag",
									"source": 12,
									"value": "48"
								},
								{
									"begin": 3068,
									"end": 3210,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3118,
									"end": 3127,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3151,
									"end": 3204,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "96"
								},
								{
									"begin": 3169,
									"end": 3203,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "97"
								},
								{
									"begin": 3178,
									"end": 3202,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "98"
								},
								{
									"begin": 3196,
									"end": 3201,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 3178,
									"end": 3202,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "46"
								},
								{
									"begin": 3178,
									"end": 3202,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3178,
									"end": 3202,
									"name": "tag",
									"source": 12,
									"value": "98"
								},
								{
									"begin": 3178,
									"end": 3202,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3169,
									"end": 3203,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "47"
								},
								{
									"begin": 3169,
									"end": 3203,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3169,
									"end": 3203,
									"name": "tag",
									"source": 12,
									"value": "97"
								},
								{
									"begin": 3169,
									"end": 3203,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3151,
									"end": 3204,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "46"
								},
								{
									"begin": 3151,
									"end": 3204,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3151,
									"end": 3204,
									"name": "tag",
									"source": 12,
									"value": "96"
								},
								{
									"begin": 3151,
									"end": 3204,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3138,
									"end": 3204,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3138,
									"end": 3204,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3068,
									"end": 3210,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 3068,
									"end": 3210,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3068,
									"end": 3210,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3068,
									"end": 3210,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3216,
									"end": 3291,
									"name": "tag",
									"source": 12,
									"value": "49"
								},
								{
									"begin": 3216,
									"end": 3291,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3259,
									"end": 3262,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3280,
									"end": 3285,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3273,
									"end": 3285,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3273,
									"end": 3285,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3216,
									"end": 3291,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 3216,
									"end": 3291,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3216,
									"end": 3291,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3216,
									"end": 3291,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3297,
									"end": 3566,
									"name": "tag",
									"source": 12,
									"value": "50"
								},
								{
									"begin": 3297,
									"end": 3566,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3407,
									"end": 3446,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "101"
								},
								{
									"begin": 3438,
									"end": 3445,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 3407,
									"end": 3446,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "48"
								},
								{
									"begin": 3407,
									"end": 3446,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3407,
									"end": 3446,
									"name": "tag",
									"source": 12,
									"value": "101"
								},
								{
									"begin": 3407,
									"end": 3446,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3468,
									"end": 3559,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "102"
								},
								{
									"begin": 3517,
									"end": 3558,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "103"
								},
								{
									"begin": 3541,
									"end": 3557,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3517,
									"end": 3558,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "49"
								},
								{
									"begin": 3517,
									"end": 3558,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3517,
									"end": 3558,
									"name": "tag",
									"source": 12,
									"value": "103"
								},
								{
									"begin": 3517,
									"end": 3558,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3509,
									"end": 3515,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 3502,
									"end": 3506,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 3496,
									"end": 3507,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 3468,
									"end": 3559,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "45"
								},
								{
									"begin": 3468,
									"end": 3559,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3468,
									"end": 3559,
									"name": "tag",
									"source": 12,
									"value": "102"
								},
								{
									"begin": 3468,
									"end": 3559,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3462,
									"end": 3466,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3455,
									"end": 3560,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 3373,
									"end": 3566,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3297,
									"end": 3566,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3297,
									"end": 3566,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3297,
									"end": 3566,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3297,
									"end": 3566,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3572,
									"end": 3645,
									"name": "tag",
									"source": 12,
									"value": "51"
								},
								{
									"begin": 3572,
									"end": 3645,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3617,
									"end": 3620,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3638,
									"end": 3639,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3631,
									"end": 3639,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3631,
									"end": 3639,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3572,
									"end": 3645,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3572,
									"end": 3645,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3651,
									"end": 3840,
									"name": "tag",
									"source": 12,
									"value": "52"
								},
								{
									"begin": 3651,
									"end": 3840,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3728,
									"end": 3760,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "106"
								},
								{
									"begin": 3728,
									"end": 3760,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "51"
								},
								{
									"begin": 3728,
									"end": 3760,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3728,
									"end": 3760,
									"name": "tag",
									"source": 12,
									"value": "106"
								},
								{
									"begin": 3728,
									"end": 3760,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3769,
									"end": 3834,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "107"
								},
								{
									"begin": 3827,
									"end": 3833,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3819,
									"end": 3825,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 3813,
									"end": 3817,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 3769,
									"end": 3834,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "50"
								},
								{
									"begin": 3769,
									"end": 3834,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3769,
									"end": 3834,
									"name": "tag",
									"source": 12,
									"value": "107"
								},
								{
									"begin": 3769,
									"end": 3834,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3704,
									"end": 3840,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3651,
									"end": 3840,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3651,
									"end": 3840,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3651,
									"end": 3840,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3846,
									"end": 4032,
									"name": "tag",
									"source": 12,
									"value": "53"
								},
								{
									"begin": 3846,
									"end": 4032,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3906,
									"end": 4026,
									"name": "tag",
									"source": 12,
									"value": "109"
								},
								{
									"begin": 3906,
									"end": 4026,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3923,
									"end": 3926,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3916,
									"end": 3921,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3913,
									"end": 3927,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 3906,
									"end": 4026,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 3906,
									"end": 4026,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "111"
								},
								{
									"begin": 3906,
									"end": 4026,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 3977,
									"end": 4016,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "112"
								},
								{
									"begin": 4014,
									"end": 4015,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 4007,
									"end": 4012,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3977,
									"end": 4016,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "52"
								},
								{
									"begin": 3977,
									"end": 4016,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3977,
									"end": 4016,
									"name": "tag",
									"source": 12,
									"value": "112"
								},
								{
									"begin": 3977,
									"end": 4016,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3950,
									"end": 3951,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 3943,
									"end": 3948,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3939,
									"end": 3952,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3930,
									"end": 3952,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3930,
									"end": 3952,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3906,
									"end": 4026,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "109"
								},
								{
									"begin": 3906,
									"end": 4026,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3906,
									"end": 4026,
									"name": "tag",
									"source": 12,
									"value": "111"
								},
								{
									"begin": 3906,
									"end": 4026,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3846,
									"end": 4032,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3846,
									"end": 4032,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3846,
									"end": 4032,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4038,
									"end": 4581,
									"name": "tag",
									"source": 12,
									"value": "54"
								},
								{
									"begin": 4038,
									"end": 4581,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4139,
									"end": 4141,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 4134,
									"end": 4137,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4131,
									"end": 4142,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 4128,
									"end": 4574,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 4128,
									"end": 4574,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "114"
								},
								{
									"begin": 4128,
									"end": 4574,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 4173,
									"end": 4211,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "115"
								},
								{
									"begin": 4205,
									"end": 4210,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 4173,
									"end": 4211,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "42"
								},
								{
									"begin": 4173,
									"end": 4211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4173,
									"end": 4211,
									"name": "tag",
									"source": 12,
									"value": "115"
								},
								{
									"begin": 4173,
									"end": 4211,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4257,
									"end": 4286,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "116"
								},
								{
									"begin": 4275,
									"end": 4285,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 4257,
									"end": 4286,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "43"
								},
								{
									"begin": 4257,
									"end": 4286,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4257,
									"end": 4286,
									"name": "tag",
									"source": 12,
									"value": "116"
								},
								{
									"begin": 4257,
									"end": 4286,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4247,
									"end": 4255,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 4243,
									"end": 4287,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 4440,
									"end": 4442,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 4428,
									"end": 4438,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 4425,
									"end": 4443,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 4422,
									"end": 4471,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 4422,
									"end": 4471,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "117"
								},
								{
									"begin": 4422,
									"end": 4471,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 4461,
									"end": 4469,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 4446,
									"end": 4469,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4446,
									"end": 4469,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4422,
									"end": 4471,
									"name": "tag",
									"source": 12,
									"value": "117"
								},
								{
									"begin": 4422,
									"end": 4471,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4484,
									"end": 4564,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "118"
								},
								{
									"begin": 4540,
									"end": 4562,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "119"
								},
								{
									"begin": 4558,
									"end": 4561,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 4540,
									"end": 4562,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "43"
								},
								{
									"begin": 4540,
									"end": 4562,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4540,
									"end": 4562,
									"name": "tag",
									"source": 12,
									"value": "119"
								},
								{
									"begin": 4540,
									"end": 4562,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4530,
									"end": 4538,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 4526,
									"end": 4563,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 4513,
									"end": 4524,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4484,
									"end": 4564,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "53"
								},
								{
									"begin": 4484,
									"end": 4564,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4484,
									"end": 4564,
									"name": "tag",
									"source": 12,
									"value": "118"
								},
								{
									"begin": 4484,
									"end": 4564,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4143,
									"end": 4574,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4143,
									"end": 4574,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4128,
									"end": 4574,
									"name": "tag",
									"source": 12,
									"value": "114"
								},
								{
									"begin": 4128,
									"end": 4574,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4038,
									"end": 4581,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4038,
									"end": 4581,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4038,
									"end": 4581,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4038,
									"end": 4581,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4587,
									"end": 4704,
									"name": "tag",
									"source": 12,
									"value": "55"
								},
								{
									"begin": 4587,
									"end": 4704,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4641,
									"end": 4649,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 4691,
									"end": 4696,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4685,
									"end": 4689,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4681,
									"end": 4697,
									"name": "SHR",
									"source": 12
								},
								{
									"begin": 4660,
									"end": 4697,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4660,
									"end": 4697,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4587,
									"end": 4704,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 4587,
									"end": 4704,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 4587,
									"end": 4704,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4587,
									"end": 4704,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4587,
									"end": 4704,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4710,
									"end": 4879,
									"name": "tag",
									"source": 12,
									"value": "56"
								},
								{
									"begin": 4710,
									"end": 4879,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4754,
									"end": 4760,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 4787,
									"end": 4838,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "122"
								},
								{
									"begin": 4835,
									"end": 4836,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 4831,
									"end": 4837,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 4823,
									"end": 4828,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 4820,
									"end": 4821,
									"name": "PUSH",
									"source": 12,
									"value": "8"
								},
								{
									"begin": 4816,
									"end": 4829,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 4787,
									"end": 4838,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "55"
								},
								{
									"begin": 4787,
									"end": 4838,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4787,
									"end": 4838,
									"name": "tag",
									"source": 12,
									"value": "122"
								},
								{
									"begin": 4787,
									"end": 4838,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4783,
									"end": 4839,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 4868,
									"end": 4872,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 4862,
									"end": 4866,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 4858,
									"end": 4873,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 4848,
									"end": 4873,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 4848,
									"end": 4873,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4761,
									"end": 4879,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4710,
									"end": 4879,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 4710,
									"end": 4879,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 4710,
									"end": 4879,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4710,
									"end": 4879,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4710,
									"end": 4879,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4884,
									"end": 5179,
									"name": "tag",
									"source": 12,
									"value": "57"
								},
								{
									"begin": 4884,
									"end": 5179,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4960,
									"end": 4964,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 5106,
									"end": 5135,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "124"
								},
								{
									"begin": 5131,
									"end": 5134,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 5125,
									"end": 5129,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 5106,
									"end": 5135,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "56"
								},
								{
									"begin": 5106,
									"end": 5135,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5106,
									"end": 5135,
									"name": "tag",
									"source": 12,
									"value": "124"
								},
								{
									"begin": 5106,
									"end": 5135,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5098,
									"end": 5135,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 5098,
									"end": 5135,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5168,
									"end": 5171,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 5165,
									"end": 5166,
									"name": "PUSH",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 5161,
									"end": 5172,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 5155,
									"end": 5159,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 5152,
									"end": 5173,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 5144,
									"end": 5173,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5144,
									"end": 5173,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4884,
									"end": 5179,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 4884,
									"end": 5179,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 4884,
									"end": 5179,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4884,
									"end": 5179,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4884,
									"end": 5179,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5184,
									"end": 6579,
									"name": "tag",
									"source": 12,
									"value": "8"
								},
								{
									"begin": 5184,
									"end": 6579,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5301,
									"end": 5338,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "126"
								},
								{
									"begin": 5334,
									"end": 5337,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 5301,
									"end": 5338,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "38"
								},
								{
									"begin": 5301,
									"end": 5338,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5301,
									"end": 5338,
									"name": "tag",
									"source": 12,
									"value": "126"
								},
								{
									"begin": 5301,
									"end": 5338,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5403,
									"end": 5421,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5395,
									"end": 5401,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 5392,
									"end": 5422,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 5389,
									"end": 5445,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 5389,
									"end": 5445,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "127"
								},
								{
									"begin": 5389,
									"end": 5445,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 5425,
									"end": 5443,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "128"
								},
								{
									"begin": 5425,
									"end": 5443,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "39"
								},
								{
									"begin": 5425,
									"end": 5443,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5425,
									"end": 5443,
									"name": "tag",
									"source": 12,
									"value": "128"
								},
								{
									"begin": 5425,
									"end": 5443,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5389,
									"end": 5445,
									"name": "tag",
									"source": 12,
									"value": "127"
								},
								{
									"begin": 5389,
									"end": 5445,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5469,
									"end": 5507,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "129"
								},
								{
									"begin": 5501,
									"end": 5505,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 5495,
									"end": 5506,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 5469,
									"end": 5507,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "41"
								},
								{
									"begin": 5469,
									"end": 5507,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5469,
									"end": 5507,
									"name": "tag",
									"source": 12,
									"value": "129"
								},
								{
									"begin": 5469,
									"end": 5507,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5554,
									"end": 5621,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "130"
								},
								{
									"begin": 5614,
									"end": 5620,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 5606,
									"end": 5612,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 5600,
									"end": 5604,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 5554,
									"end": 5621,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "54"
								},
								{
									"begin": 5554,
									"end": 5621,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5554,
									"end": 5621,
									"name": "tag",
									"source": 12,
									"value": "130"
								},
								{
									"begin": 5554,
									"end": 5621,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5648,
									"end": 5649,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 5672,
									"end": 5676,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 5659,
									"end": 5676,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5659,
									"end": 5676,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5704,
									"end": 5706,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 5696,
									"end": 5702,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 5693,
									"end": 5707,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 5721,
									"end": 5722,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 5716,
									"end": 6334,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 5716,
									"end": 6334,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 5716,
									"end": 6334,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "132"
								},
								{
									"begin": 5716,
									"end": 6334,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 6378,
									"end": 6379,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 6395,
									"end": 6401,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 6392,
									"end": 6469,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 6392,
									"end": 6469,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "133"
								},
								{
									"begin": 6392,
									"end": 6469,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 6444,
									"end": 6453,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 6439,
									"end": 6442,
									"name": "DUP8",
									"source": 12
								},
								{
									"begin": 6435,
									"end": 6454,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 6429,
									"end": 6455,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 6420,
									"end": 6455,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 6420,
									"end": 6455,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6392,
									"end": 6469,
									"name": "tag",
									"source": 12,
									"value": "133"
								},
								{
									"begin": 6392,
									"end": 6469,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6495,
									"end": 6562,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "134"
								},
								{
									"begin": 6555,
									"end": 6561,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 6548,
									"end": 6553,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 6495,
									"end": 6562,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "57"
								},
								{
									"begin": 6495,
									"end": 6562,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6495,
									"end": 6562,
									"name": "tag",
									"source": 12,
									"value": "134"
								},
								{
									"begin": 6495,
									"end": 6562,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6489,
									"end": 6493,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 6482,
									"end": 6563,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 6351,
									"end": 6573,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5686,
									"end": 6573,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "131"
								},
								{
									"begin": 5686,
									"end": 6573,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5716,
									"end": 6334,
									"name": "tag",
									"source": 12,
									"value": "132"
								},
								{
									"begin": 5716,
									"end": 6334,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5768,
									"end": 5772,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 5764,
									"end": 5773,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 5756,
									"end": 5762,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 5752,
									"end": 5774,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 5802,
									"end": 5839,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "135"
								},
								{
									"begin": 5834,
									"end": 5838,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 5802,
									"end": 5839,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "42"
								},
								{
									"begin": 5802,
									"end": 5839,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5802,
									"end": 5839,
									"name": "tag",
									"source": 12,
									"value": "135"
								},
								{
									"begin": 5802,
									"end": 5839,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5861,
									"end": 5862,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 5875,
									"end": 6083,
									"name": "tag",
									"source": 12,
									"value": "136"
								},
								{
									"begin": 5875,
									"end": 6083,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5889,
									"end": 5896,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 5886,
									"end": 5887,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 5883,
									"end": 5897,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 5875,
									"end": 6083,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 5875,
									"end": 6083,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "138"
								},
								{
									"begin": 5875,
									"end": 6083,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 5968,
									"end": 5977,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 5963,
									"end": 5966,
									"name": "DUP10",
									"source": 12
								},
								{
									"begin": 5959,
									"end": 5978,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 5953,
									"end": 5979,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 5945,
									"end": 5951,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 5938,
									"end": 5980,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 6019,
									"end": 6020,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 6011,
									"end": 6017,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 6007,
									"end": 6021,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 5997,
									"end": 6021,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 5997,
									"end": 6021,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6066,
									"end": 6068,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 6055,
									"end": 6064,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 6051,
									"end": 6069,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 6038,
									"end": 6069,
									"name": "SWAP5",
									"source": 12
								},
								{
									"begin": 6038,
									"end": 6069,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5912,
									"end": 5916,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 5909,
									"end": 5910,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 5905,
									"end": 5917,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 5900,
									"end": 5917,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5900,
									"end": 5917,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5875,
									"end": 6083,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "136"
								},
								{
									"begin": 5875,
									"end": 6083,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5875,
									"end": 6083,
									"name": "tag",
									"source": 12,
									"value": "138"
								},
								{
									"begin": 5875,
									"end": 6083,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6111,
									"end": 6117,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 6102,
									"end": 6109,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 6099,
									"end": 6118,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 6096,
									"end": 6275,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 6096,
									"end": 6275,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "139"
								},
								{
									"begin": 6096,
									"end": 6275,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 6169,
									"end": 6178,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 6164,
									"end": 6167,
									"name": "DUP10",
									"source": 12
								},
								{
									"begin": 6160,
									"end": 6179,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 6154,
									"end": 6180,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 6212,
									"end": 6260,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "140"
								},
								{
									"begin": 6254,
									"end": 6258,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 6246,
									"end": 6252,
									"name": "DUP10",
									"source": 12
								},
								{
									"begin": 6242,
									"end": 6259,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 6231,
									"end": 6240,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 6212,
									"end": 6260,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "56"
								},
								{
									"begin": 6212,
									"end": 6260,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6212,
									"end": 6260,
									"name": "tag",
									"source": 12,
									"value": "140"
								},
								{
									"begin": 6212,
									"end": 6260,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6204,
									"end": 6210,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 6197,
									"end": 6261,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 6119,
									"end": 6275,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6096,
									"end": 6275,
									"name": "tag",
									"source": 12,
									"value": "139"
								},
								{
									"begin": 6096,
									"end": 6275,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6321,
									"end": 6322,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 6317,
									"end": 6318,
									"name": "PUSH",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 6309,
									"end": 6315,
									"name": "DUP9",
									"source": 12
								},
								{
									"begin": 6305,
									"end": 6319,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 6301,
									"end": 6323,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 6295,
									"end": 6299,
									"name": "DUP9",
									"source": 12
								},
								{
									"begin": 6288,
									"end": 6324,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 5723,
									"end": 6334,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5723,
									"end": 6334,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5723,
									"end": 6334,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5686,
									"end": 6573,
									"name": "tag",
									"source": 12,
									"value": "131"
								},
								{
									"begin": 5686,
									"end": 6573,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5686,
									"end": 6573,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5276,
									"end": 6579,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5276,
									"end": 6579,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5276,
									"end": 6579,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5184,
									"end": 6579,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5184,
									"end": 6579,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5184,
									"end": 6579,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6585,
									"end": 6754,
									"name": "tag",
									"source": 12,
									"value": "58"
								},
								{
									"begin": 6585,
									"end": 6754,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6669,
									"end": 6680,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 6703,
									"end": 6709,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 6698,
									"end": 6701,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 6691,
									"end": 6710,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 6743,
									"end": 6747,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 6738,
									"end": 6741,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 6734,
									"end": 6748,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 6719,
									"end": 6748,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 6719,
									"end": 6748,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6585,
									"end": 6754,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 6585,
									"end": 6754,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 6585,
									"end": 6754,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6585,
									"end": 6754,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6585,
									"end": 6754,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6760,
									"end": 6931,
									"name": "tag",
									"source": 12,
									"value": "59"
								},
								{
									"begin": 6760,
									"end": 6931,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6900,
									"end": 6923,
									"name": "PUSH",
									"source": 12,
									"value": "496E76616C6964207661756C7420616464726573730000000000000000000000"
								},
								{
									"begin": 6896,
									"end": 6897,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 6888,
									"end": 6894,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 6884,
									"end": 6898,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 6877,
									"end": 6924,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 6760,
									"end": 6931,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6760,
									"end": 6931,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6937,
									"end": 7303,
									"name": "tag",
									"source": 12,
									"value": "60"
								},
								{
									"begin": 6937,
									"end": 7303,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7079,
									"end": 7082,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 7100,
									"end": 7167,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "144"
								},
								{
									"begin": 7164,
									"end": 7166,
									"name": "PUSH",
									"source": 12,
									"value": "15"
								},
								{
									"begin": 7159,
									"end": 7162,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 7100,
									"end": 7167,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "58"
								},
								{
									"begin": 7100,
									"end": 7167,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7100,
									"end": 7167,
									"name": "tag",
									"source": 12,
									"value": "144"
								},
								{
									"begin": 7100,
									"end": 7167,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7093,
									"end": 7167,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 7093,
									"end": 7167,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7176,
									"end": 7269,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "145"
								},
								{
									"begin": 7265,
									"end": 7268,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 7176,
									"end": 7269,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "59"
								},
								{
									"begin": 7176,
									"end": 7269,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7176,
									"end": 7269,
									"name": "tag",
									"source": 12,
									"value": "145"
								},
								{
									"begin": 7176,
									"end": 7269,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7294,
									"end": 7296,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 7289,
									"end": 7292,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 7285,
									"end": 7297,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 7278,
									"end": 7297,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 7278,
									"end": 7297,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6937,
									"end": 7303,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 6937,
									"end": 7303,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 6937,
									"end": 7303,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6937,
									"end": 7303,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7309,
									"end": 7728,
									"name": "tag",
									"source": 12,
									"value": "13"
								},
								{
									"begin": 7309,
									"end": 7728,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7475,
									"end": 7479,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 7513,
									"end": 7515,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 7502,
									"end": 7511,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 7498,
									"end": 7516,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 7490,
									"end": 7516,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 7490,
									"end": 7516,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7562,
									"end": 7571,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 7556,
									"end": 7560,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 7552,
									"end": 7572,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 7548,
									"end": 7549,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 7537,
									"end": 7546,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 7533,
									"end": 7550,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 7526,
									"end": 7573,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 7590,
									"end": 7721,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "147"
								},
								{
									"begin": 7716,
									"end": 7720,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 7590,
									"end": 7721,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "60"
								},
								{
									"begin": 7590,
									"end": 7721,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7590,
									"end": 7721,
									"name": "tag",
									"source": 12,
									"value": "147"
								},
								{
									"begin": 7590,
									"end": 7721,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7582,
									"end": 7721,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 7582,
									"end": 7721,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7309,
									"end": 7728,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 7309,
									"end": 7728,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 7309,
									"end": 7728,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7309,
									"end": 7728,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7734,
									"end": 7897,
									"name": "tag",
									"source": 12,
									"value": "61"
								},
								{
									"begin": 7734,
									"end": 7897,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7874,
									"end": 7889,
									"name": "PUSH",
									"source": 12,
									"value": "496E76616C69642061646D696E00000000000000000000000000000000000000"
								},
								{
									"begin": 7870,
									"end": 7871,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 7862,
									"end": 7868,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 7858,
									"end": 7872,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 7851,
									"end": 7890,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 7734,
									"end": 7897,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7734,
									"end": 7897,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7903,
									"end": 8269,
									"name": "tag",
									"source": 12,
									"value": "62"
								},
								{
									"begin": 7903,
									"end": 8269,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8045,
									"end": 8048,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 8066,
									"end": 8133,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "150"
								},
								{
									"begin": 8130,
									"end": 8132,
									"name": "PUSH",
									"source": 12,
									"value": "D"
								},
								{
									"begin": 8125,
									"end": 8128,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 8066,
									"end": 8133,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "58"
								},
								{
									"begin": 8066,
									"end": 8133,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 8066,
									"end": 8133,
									"name": "tag",
									"source": 12,
									"value": "150"
								},
								{
									"begin": 8066,
									"end": 8133,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8059,
									"end": 8133,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 8059,
									"end": 8133,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8142,
									"end": 8235,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "151"
								},
								{
									"begin": 8231,
									"end": 8234,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 8142,
									"end": 8235,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "61"
								},
								{
									"begin": 8142,
									"end": 8235,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 8142,
									"end": 8235,
									"name": "tag",
									"source": 12,
									"value": "151"
								},
								{
									"begin": 8142,
									"end": 8235,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8260,
									"end": 8262,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 8255,
									"end": 8258,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 8251,
									"end": 8263,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 8244,
									"end": 8263,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 8244,
									"end": 8263,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7903,
									"end": 8269,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 7903,
									"end": 8269,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 7903,
									"end": 8269,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7903,
									"end": 8269,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 8275,
									"end": 8694,
									"name": "tag",
									"source": 12,
									"value": "16"
								},
								{
									"begin": 8275,
									"end": 8694,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8441,
									"end": 8445,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 8479,
									"end": 8481,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 8468,
									"end": 8477,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 8464,
									"end": 8482,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 8456,
									"end": 8482,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 8456,
									"end": 8482,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8528,
									"end": 8537,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 8522,
									"end": 8526,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 8518,
									"end": 8538,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 8514,
									"end": 8515,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 8503,
									"end": 8512,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 8499,
									"end": 8516,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 8492,
									"end": 8539,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 8556,
									"end": 8687,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "153"
								},
								{
									"begin": 8682,
									"end": 8686,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 8556,
									"end": 8687,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "62"
								},
								{
									"begin": 8556,
									"end": 8687,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 8556,
									"end": 8687,
									"name": "tag",
									"source": 12,
									"value": "153"
								},
								{
									"begin": 8556,
									"end": 8687,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8548,
									"end": 8687,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 8548,
									"end": 8687,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8275,
									"end": 8694,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 8275,
									"end": 8694,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 8275,
									"end": 8694,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8275,
									"end": 8694,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 725,
									"end": 2918,
									"name": "tag",
									"source": 11,
									"value": "21"
								},
								{
									"begin": 725,
									"end": 2918,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 725,
									"end": 2918,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 725,
									"end": 2918,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 725,
									"end": 2918,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 725,
									"end": 2918,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 725,
									"end": 2918,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 725,
									"end": 2918,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 725,
									"end": 2918,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a9bedc9257f7682c654ed3c122af6a5bc293ee837f06c504b5928a73e32699fe64736f6c634300081e0033",
									".code": [
										{
											"begin": 725,
											"end": 2918,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "tag",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "SHR",
											"source": 11
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "PUSH",
											"source": 11,
											"value": "5C975ABB"
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "27"
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "PUSH",
											"source": 11,
											"value": "A9059CBB"
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "28"
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "PUSH",
											"source": 11,
											"value": "A9059CBB"
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "21"
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "PUSH",
											"source": 11,
											"value": "D5391393"
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "PUSH",
											"source": 11,
											"value": "D547741F"
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "23"
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "PUSH",
											"source": 11,
											"value": "DD62ED3E"
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "PUSH",
											"source": 11,
											"value": "E63AB1E9"
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "25"
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "PUSH",
											"source": 11,
											"value": "FBFA77CF"
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "26"
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "tag",
											"source": 11,
											"value": "28"
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "PUSH",
											"source": 11,
											"value": "5C975ABB"
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "15"
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "PUSH",
											"source": 11,
											"value": "70A08231"
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "16"
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "PUSH",
											"source": 11,
											"value": "8456CB59"
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "17"
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "PUSH",
											"source": 11,
											"value": "91D14854"
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "18"
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "PUSH",
											"source": 11,
											"value": "95D89B41"
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "19"
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "PUSH",
											"source": 11,
											"value": "A217FDDF"
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "tag",
											"source": 11,
											"value": "27"
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "PUSH",
											"source": 11,
											"value": "248A9CA3"
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "PUSH",
											"source": 11,
											"value": "248A9CA3"
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "PUSH",
											"source": 11,
											"value": "2F2FF15D"
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "PUSH",
											"source": 11,
											"value": "313CE567"
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "PUSH",
											"source": 11,
											"value": "36568ABE"
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "PUSH",
											"source": 11,
											"value": "3F4BA83A"
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "13"
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "PUSH",
											"source": 11,
											"value": "40C10F19"
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "tag",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "PUSH",
											"source": 11,
											"value": "1FFC9A7"
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "PUSH",
											"source": 11,
											"value": "6FDDE03"
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "PUSH",
											"source": 11,
											"value": "95EA7B3"
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "PUSH",
											"source": 11,
											"value": "18160DDD"
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "PUSH",
											"source": 11,
											"value": "1C83BA4A"
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "PUSH",
											"source": 11,
											"value": "23B872DD"
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "tag",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 725,
											"end": 2918,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 3979,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 3979,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 3979,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 2830,
											"end": 2927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "tag",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 2830,
											"end": 2927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "tag",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2621,
											"name": "tag",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 2293,
											"end": 2621,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2293,
											"end": 2621,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "49"
										},
										{
											"begin": 2293,
											"end": 2621,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2293,
											"end": 2621,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2293,
											"end": 2621,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 2293,
											"end": 2621,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2293,
											"end": 2621,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2293,
											"end": 2621,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2293,
											"end": 2621,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2293,
											"end": 2621,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "50"
										},
										{
											"begin": 2293,
											"end": 2621,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2293,
											"end": 2621,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2293,
											"end": 2621,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "42"
										},
										{
											"begin": 2293,
											"end": 2621,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2293,
											"end": 2621,
											"name": "tag",
											"source": 11,
											"value": "50"
										},
										{
											"begin": 2293,
											"end": 2621,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2293,
											"end": 2621,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "51"
										},
										{
											"begin": 2293,
											"end": 2621,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2293,
											"end": 2621,
											"name": "tag",
											"source": 11,
											"value": "49"
										},
										{
											"begin": 2293,
											"end": 2621,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2293,
											"end": 2621,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 4757,
											"end": 5001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 4757,
											"end": 5001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 4757,
											"end": 5001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 4226,
											"end": 4362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 4226,
											"end": 4362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 2688,
											"end": 2770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 2688,
											"end": 2770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 5328,
											"end": 5573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 5328,
											"end": 5573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2839,
											"end": 2916,
											"name": "tag",
											"source": 11,
											"value": "13"
										},
										{
											"begin": 2839,
											"end": 2916,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2839,
											"end": 2916,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "74"
										},
										{
											"begin": 2839,
											"end": 2916,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "75"
										},
										{
											"begin": 2839,
											"end": 2916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2839,
											"end": 2916,
											"name": "tag",
											"source": 11,
											"value": "74"
										},
										{
											"begin": 2839,
											"end": 2916,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2839,
											"end": 2916,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 1786,
											"end": 2151,
											"name": "tag",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 1786,
											"end": 2151,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1786,
											"end": 2151,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "76"
										},
										{
											"begin": 1786,
											"end": 2151,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1786,
											"end": 2151,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1786,
											"end": 2151,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 1786,
											"end": 2151,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1786,
											"end": 2151,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1786,
											"end": 2151,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1786,
											"end": 2151,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1786,
											"end": 2151,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "77"
										},
										{
											"begin": 1786,
											"end": 2151,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1786,
											"end": 2151,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1786,
											"end": 2151,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "42"
										},
										{
											"begin": 1786,
											"end": 2151,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1786,
											"end": 2151,
											"name": "tag",
											"source": 11,
											"value": "77"
										},
										{
											"begin": 1786,
											"end": 2151,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1786,
											"end": 2151,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "78"
										},
										{
											"begin": 1786,
											"end": 2151,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1786,
											"end": 2151,
											"name": "tag",
											"source": 11,
											"value": "76"
										},
										{
											"begin": 1786,
											"end": 2151,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1786,
											"end": 2151,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "tag",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 1726,
											"end": 1810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "tag",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "81"
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 1726,
											"end": 1810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "tag",
											"source": 8,
											"value": "81"
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 2985,
											"end": 3101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 2985,
											"end": 3101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 2985,
											"end": 3101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2711,
											"end": 2784,
											"name": "tag",
											"source": 11,
											"value": "17"
										},
										{
											"begin": 2711,
											"end": 2784,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2711,
											"end": 2784,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "87"
										},
										{
											"begin": 2711,
											"end": 2784,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "88"
										},
										{
											"begin": 2711,
											"end": 2784,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2711,
											"end": 2784,
											"name": "tag",
											"source": 11,
											"value": "87"
										},
										{
											"begin": 2711,
											"end": 2784,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2711,
											"end": 2784,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 2187,
											"end": 2236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 2187,
											"end": 2236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 3296,
											"end": 3474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 3296,
											"end": 3474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 3296,
											"end": 3474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 806,
											"end": 868,
											"name": "tag",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 806,
											"end": 868,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 806,
											"end": 868,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "103"
										},
										{
											"begin": 806,
											"end": 868,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "104"
										},
										{
											"begin": 806,
											"end": 868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 806,
											"end": 868,
											"name": "tag",
											"source": 11,
											"value": "103"
										},
										{
											"begin": 806,
											"end": 868,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 806,
											"end": 868,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 806,
											"end": 868,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 806,
											"end": 868,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "105"
										},
										{
											"begin": 806,
											"end": 868,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 806,
											"end": 868,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 806,
											"end": 868,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "62"
										},
										{
											"begin": 806,
											"end": 868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 806,
											"end": 868,
											"name": "tag",
											"source": 11,
											"value": "105"
										},
										{
											"begin": 806,
											"end": 868,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 806,
											"end": 868,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 806,
											"end": 868,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 806,
											"end": 868,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 806,
											"end": 868,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 806,
											"end": 868,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 806,
											"end": 868,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 806,
											"end": 868,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 4642,
											"end": 4780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 4642,
											"end": 4780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 3532,
											"end": 3672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 3532,
											"end": 3672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 3532,
											"end": 3672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 874,
											"end": 936,
											"name": "tag",
											"source": 11,
											"value": "25"
										},
										{
											"begin": 874,
											"end": 936,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 874,
											"end": 936,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "114"
										},
										{
											"begin": 874,
											"end": 936,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "115"
										},
										{
											"begin": 874,
											"end": 936,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 874,
											"end": 936,
											"name": "tag",
											"source": 11,
											"value": "114"
										},
										{
											"begin": 874,
											"end": 936,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 874,
											"end": 936,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 874,
											"end": 936,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 874,
											"end": 936,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "116"
										},
										{
											"begin": 874,
											"end": 936,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 874,
											"end": 936,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 874,
											"end": 936,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "62"
										},
										{
											"begin": 874,
											"end": 936,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 874,
											"end": 936,
											"name": "tag",
											"source": 11,
											"value": "116"
										},
										{
											"begin": 874,
											"end": 936,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 874,
											"end": 936,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 874,
											"end": 936,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 874,
											"end": 936,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 874,
											"end": 936,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 874,
											"end": 936,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 874,
											"end": 936,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 874,
											"end": 936,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 984,
											"end": 1010,
											"name": "tag",
											"source": 11,
											"value": "26"
										},
										{
											"begin": 984,
											"end": 1010,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 984,
											"end": 1010,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "117"
										},
										{
											"begin": 984,
											"end": 1010,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "118"
										},
										{
											"begin": 984,
											"end": 1010,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 984,
											"end": 1010,
											"name": "tag",
											"source": 11,
											"value": "117"
										},
										{
											"begin": 984,
											"end": 1010,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 984,
											"end": 1010,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 984,
											"end": 1010,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 984,
											"end": 1010,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "119"
										},
										{
											"begin": 984,
											"end": 1010,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 984,
											"end": 1010,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 984,
											"end": 1010,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "120"
										},
										{
											"begin": 984,
											"end": 1010,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 984,
											"end": 1010,
											"name": "tag",
											"source": 11,
											"value": "119"
										},
										{
											"begin": 984,
											"end": 1010,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 984,
											"end": 1010,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 984,
											"end": 1010,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 984,
											"end": 1010,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 984,
											"end": 1010,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 984,
											"end": 1010,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 984,
											"end": 1010,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 984,
											"end": 1010,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2650,
											"end": 2654,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2688,
											"end": 2720,
											"name": "PUSH",
											"source": 0,
											"value": "7965DB0B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2684,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 2760,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 2748,
											"end": 2759,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 2747,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 2724,
											"end": 2760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 2760,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 2724,
											"end": 2760,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2666,
											"end": 2760,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2666,
											"end": 2760,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1805,
											"end": 1818,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1837,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 1830,
											"end": 1842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 1830,
											"end": 1842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4052,
											"end": 4056,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4068,
											"end": 4081,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4084,
											"end": 4096,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 4084,
											"end": 4094,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 4084,
											"end": 4096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4084,
											"end": 4096,
											"name": "tag",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 4084,
											"end": 4096,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4068,
											"end": 4096,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4068,
											"end": 4096,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 4115,
											"end": 4120,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4122,
											"end": 4129,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4131,
											"end": 4136,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4106,
											"end": 4114,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 4106,
											"end": 4137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "tag",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4154,
											"end": 4158,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 4147,
											"end": 4158,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4147,
											"end": 4158,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4147,
											"end": 4158,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "tag",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2882,
											"end": 2889,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2908,
											"end": 2920,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2908,
											"end": 2920,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2901,
											"end": 2920,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2901,
											"end": 2920,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2830,
											"end": 2927,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2621,
											"name": "tag",
											"source": 11,
											"value": "51"
										},
										{
											"begin": 2293,
											"end": 2621,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 844,
											"end": 868,
											"name": "PUSH",
											"source": 11,
											"value": "9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1350,
											"end": 1369,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "142"
										},
										{
											"begin": 1350,
											"end": 1367,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "143"
										},
										{
											"begin": 1350,
											"end": 1369,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1350,
											"end": 1369,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "142"
										},
										{
											"begin": 1350,
											"end": 1369,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2453,
											"end": 2454,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2437,
											"end": 2455,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2437,
											"end": 2455,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2437,
											"end": 2441,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2437,
											"end": 2455,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2437,
											"end": 2455,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2437,
											"end": 2455,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2429,
											"end": 2475,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "145"
										},
										{
											"begin": 2429,
											"end": 2475,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2429,
											"end": 2475,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2429,
											"end": 2475,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2429,
											"end": 2475,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2429,
											"end": 2475,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2429,
											"end": 2475,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2429,
											"end": 2475,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2429,
											"end": 2475,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2429,
											"end": 2475,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "146"
										},
										{
											"begin": 2429,
											"end": 2475,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2429,
											"end": 2475,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "147"
										},
										{
											"begin": 2429,
											"end": 2475,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2429,
											"end": 2475,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "146"
										},
										{
											"begin": 2429,
											"end": 2475,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2429,
											"end": 2475,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2429,
											"end": 2475,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2429,
											"end": 2475,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2429,
											"end": 2475,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2429,
											"end": 2475,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2429,
											"end": 2475,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2429,
											"end": 2475,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2429,
											"end": 2475,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "145"
										},
										{
											"begin": 2429,
											"end": 2475,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2512,
											"end": 2518,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2493,
											"end": 2508,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "148"
										},
										{
											"begin": 2503,
											"end": 2507,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2493,
											"end": 2502,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "85"
										},
										{
											"begin": 2493,
											"end": 2508,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2493,
											"end": 2508,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "148"
										},
										{
											"begin": 2493,
											"end": 2508,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2493,
											"end": 2518,
											"modifierDepth": 2,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 2493,
											"end": 2518,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2485,
											"end": 2543,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "149"
										},
										{
											"begin": 2485,
											"end": 2543,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2485,
											"end": 2543,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2485,
											"end": 2543,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2485,
											"end": 2543,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2485,
											"end": 2543,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2485,
											"end": 2543,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2485,
											"end": 2543,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2485,
											"end": 2543,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2485,
											"end": 2543,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "150"
										},
										{
											"begin": 2485,
											"end": 2543,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2485,
											"end": 2543,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "151"
										},
										{
											"begin": 2485,
											"end": 2543,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2485,
											"end": 2543,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "150"
										},
										{
											"begin": 2485,
											"end": 2543,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2485,
											"end": 2543,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2485,
											"end": 2543,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2485,
											"end": 2543,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2485,
											"end": 2543,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2485,
											"end": 2543,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2485,
											"end": 2543,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2485,
											"end": 2543,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2485,
											"end": 2543,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "149"
										},
										{
											"begin": 2485,
											"end": 2543,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2554,
											"end": 2559,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 2554,
											"end": 2559,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2554,
											"end": 2559,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2554,
											"end": 2559,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2554,
											"end": 2559,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2554,
											"end": 2559,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 2554,
											"end": 2559,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 2554,
											"end": 2559,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2554,
											"end": 2559,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 2554,
											"end": 2559,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2554,
											"end": 2559,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2554,
											"end": 2577,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2554,
											"end": 2577,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2554,
											"end": 2577,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "ECAD4F68"
										},
										{
											"begin": 2578,
											"end": 2584,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2554,
											"end": 2585,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2554,
											"end": 2585,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2554,
											"end": 2585,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2554,
											"end": 2585,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2554,
											"end": 2585,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2554,
											"end": 2585,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 2554,
											"end": 2585,
											"modifierDepth": 2,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 2554,
											"end": 2585,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2554,
											"end": 2585,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2554,
											"end": 2585,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2554,
											"end": 2585,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2554,
											"end": 2585,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "152"
										},
										{
											"begin": 2554,
											"end": 2585,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2554,
											"end": 2585,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2554,
											"end": 2585,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "48"
										},
										{
											"begin": 2554,
											"end": 2585,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2554,
											"end": 2585,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "152"
										},
										{
											"begin": 2554,
											"end": 2585,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2554,
											"end": 2585,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2554,
											"end": 2585,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2554,
											"end": 2585,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2554,
											"end": 2585,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2554,
											"end": 2585,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2554,
											"end": 2585,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2554,
											"end": 2585,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2554,
											"end": 2585,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2554,
											"end": 2585,
											"modifierDepth": 2,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 2554,
											"end": 2585,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2554,
											"end": 2585,
											"modifierDepth": 2,
											"name": "EXTCODESIZE",
											"source": 11
										},
										{
											"begin": 2554,
											"end": 2585,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2554,
											"end": 2585,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2554,
											"end": 2585,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2554,
											"end": 2585,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "153"
										},
										{
											"begin": 2554,
											"end": 2585,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2554,
											"end": 2585,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2554,
											"end": 2585,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2554,
											"end": 2585,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2554,
											"end": 2585,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "153"
										},
										{
											"begin": 2554,
											"end": 2585,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2554,
											"end": 2585,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2554,
											"end": 2585,
											"modifierDepth": 2,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 2554,
											"end": 2585,
											"modifierDepth": 2,
											"name": "CALL",
											"source": 11
										},
										{
											"begin": 2554,
											"end": 2585,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2554,
											"end": 2585,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2554,
											"end": 2585,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2554,
											"end": 2585,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "155"
										},
										{
											"begin": 2554,
											"end": 2585,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2554,
											"end": 2585,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 2554,
											"end": 2585,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2554,
											"end": 2585,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2554,
											"end": 2585,
											"modifierDepth": 2,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 2554,
											"end": 2585,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 2554,
											"end": 2585,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2554,
											"end": 2585,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2554,
											"end": 2585,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "155"
										},
										{
											"begin": 2554,
											"end": 2585,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2554,
											"end": 2585,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2554,
											"end": 2585,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2554,
											"end": 2585,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2554,
											"end": 2585,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2595,
											"end": 2614,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "156"
										},
										{
											"begin": 2601,
											"end": 2605,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2607,
											"end": 2613,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2595,
											"end": 2600,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "157"
										},
										{
											"begin": 2595,
											"end": 2614,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2595,
											"end": 2614,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "156"
										},
										{
											"begin": 2595,
											"end": 2614,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2293,
											"end": 2621,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2293,
											"end": 2621,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2293,
											"end": 2621,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2293,
											"end": 2621,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4844,
											"end": 4848,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4860,
											"end": 4875,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4878,
											"end": 4890,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 4878,
											"end": 4888,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 4878,
											"end": 4890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4878,
											"end": 4890,
											"name": "tag",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 4878,
											"end": 4890,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4860,
											"end": 4890,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4860,
											"end": 4890,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4900,
											"end": 4937,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 4916,
											"end": 4920,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4922,
											"end": 4929,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4931,
											"end": 4936,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4900,
											"end": 4915,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 4900,
											"end": 4937,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4900,
											"end": 4937,
											"name": "tag",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 4900,
											"end": 4937,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4947,
											"end": 4973,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 4957,
											"end": 4961,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4963,
											"end": 4965,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4967,
											"end": 4972,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4947,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 4947,
											"end": 4973,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4947,
											"end": 4973,
											"name": "tag",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 4947,
											"end": 4973,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4990,
											"end": 4994,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 4983,
											"end": 4994,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4983,
											"end": 4994,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4983,
											"end": 4994,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3875,
											"end": 3882,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3901,
											"end": 3907,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3908,
											"end": 3912,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3894,
											"end": 3923,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3894,
											"end": 3923,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4300,
											"end": 4318,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 4313,
											"end": 4317,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4300,
											"end": 4312,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 4300,
											"end": 4318,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4300,
											"end": 4318,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 4300,
											"end": 4318,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 4341,
											"end": 4345,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4347,
											"end": 4354,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4340,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 4330,
											"end": 4355,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2737,
											"end": 2742,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2761,
											"end": 2763,
											"name": "PUSH",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 2754,
											"end": 2763,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2754,
											"end": 2763,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5443,
											"end": 5455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 5443,
											"end": 5453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 5443,
											"end": 5455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5443,
											"end": 5455,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 5443,
											"end": 5455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5421,
											"end": 5439,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "6697B23200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 5541,
											"end": 5545,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5547,
											"end": 5565,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5540,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 5529,
											"end": 5566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2839,
											"end": 2916,
											"name": "tag",
											"source": 11,
											"value": "75"
										},
										{
											"begin": 2839,
											"end": 2916,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 912,
											"end": 936,
											"name": "PUSH",
											"source": 11,
											"value": "65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2899,
											"end": 2909,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "180"
										},
										{
											"begin": 2899,
											"end": 2907,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "181"
										},
										{
											"begin": 2899,
											"end": 2909,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2899,
											"end": 2909,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "180"
										},
										{
											"begin": 2899,
											"end": 2909,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2839,
											"end": 2916,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2839,
											"end": 2916,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1786,
											"end": 2151,
											"name": "tag",
											"source": 11,
											"value": "78"
										},
										{
											"begin": 1786,
											"end": 2151,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 844,
											"end": 868,
											"name": "PUSH",
											"source": 11,
											"value": "9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1350,
											"end": 1369,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "185"
										},
										{
											"begin": 1350,
											"end": 1367,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "143"
										},
										{
											"begin": 1350,
											"end": 1369,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1350,
											"end": 1369,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "185"
										},
										{
											"begin": 1350,
											"end": 1369,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1933,
											"end": 1934,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1919,
											"end": 1935,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1919,
											"end": 1935,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1919,
											"end": 1921,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1919,
											"end": 1935,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1919,
											"end": 1935,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1919,
											"end": 1935,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1911,
											"end": 1957,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "187"
										},
										{
											"begin": 1911,
											"end": 1957,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1911,
											"end": 1957,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1911,
											"end": 1957,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1911,
											"end": 1957,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1911,
											"end": 1957,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1911,
											"end": 1957,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1911,
											"end": 1957,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1911,
											"end": 1957,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1911,
											"end": 1957,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "188"
										},
										{
											"begin": 1911,
											"end": 1957,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1911,
											"end": 1957,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "189"
										},
										{
											"begin": 1911,
											"end": 1957,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1911,
											"end": 1957,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "188"
										},
										{
											"begin": 1911,
											"end": 1957,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1911,
											"end": 1957,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1911,
											"end": 1957,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1911,
											"end": 1957,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1911,
											"end": 1957,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1911,
											"end": 1957,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1911,
											"end": 1957,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1911,
											"end": 1957,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1911,
											"end": 1957,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "187"
										},
										{
											"begin": 1911,
											"end": 1957,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1984,
											"end": 1985,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1975,
											"end": 1981,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1975,
											"end": 1985,
											"modifierDepth": 2,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 1967,
											"end": 2008,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "190"
										},
										{
											"begin": 1967,
											"end": 2008,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1967,
											"end": 2008,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1967,
											"end": 2008,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1967,
											"end": 2008,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1967,
											"end": 2008,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1967,
											"end": 2008,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1967,
											"end": 2008,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1967,
											"end": 2008,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1967,
											"end": 2008,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "191"
										},
										{
											"begin": 1967,
											"end": 2008,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1967,
											"end": 2008,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "192"
										},
										{
											"begin": 1967,
											"end": 2008,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1967,
											"end": 2008,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "191"
										},
										{
											"begin": 1967,
											"end": 2008,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1967,
											"end": 2008,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1967,
											"end": 2008,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1967,
											"end": 2008,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1967,
											"end": 2008,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1967,
											"end": 2008,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1967,
											"end": 2008,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1967,
											"end": 2008,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1967,
											"end": 2008,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "190"
										},
										{
											"begin": 1967,
											"end": 2008,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2052,
											"end": 2058,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2026,
											"end": 2031,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 2026,
											"end": 2031,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2026,
											"end": 2031,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2026,
											"end": 2031,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2026,
											"end": 2031,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2026,
											"end": 2031,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 2026,
											"end": 2031,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 2026,
											"end": 2031,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2026,
											"end": 2031,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 2026,
											"end": 2031,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2026,
											"end": 2031,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2026,
											"end": 2046,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2026,
											"end": 2046,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2026,
											"end": 2046,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FF9B1B11"
										},
										{
											"begin": 2026,
											"end": 2048,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2026,
											"end": 2048,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2026,
											"end": 2048,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2026,
											"end": 2048,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2026,
											"end": 2048,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2026,
											"end": 2048,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 2026,
											"end": 2048,
											"modifierDepth": 2,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 2026,
											"end": 2048,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2026,
											"end": 2048,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2026,
											"end": 2048,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2026,
											"end": 2048,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2026,
											"end": 2048,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2026,
											"end": 2048,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2026,
											"end": 2048,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2026,
											"end": 2048,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2026,
											"end": 2048,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2026,
											"end": 2048,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2026,
											"end": 2048,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2026,
											"end": 2048,
											"modifierDepth": 2,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 2026,
											"end": 2048,
											"modifierDepth": 2,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 2026,
											"end": 2048,
											"modifierDepth": 2,
											"name": "STATICCALL",
											"source": 11
										},
										{
											"begin": 2026,
											"end": 2048,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2026,
											"end": 2048,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2026,
											"end": 2048,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2026,
											"end": 2048,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "194"
										},
										{
											"begin": 2026,
											"end": 2048,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2026,
											"end": 2048,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 2026,
											"end": 2048,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2026,
											"end": 2048,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2026,
											"end": 2048,
											"modifierDepth": 2,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 2026,
											"end": 2048,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 2026,
											"end": 2048,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2026,
											"end": 2048,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2026,
											"end": 2048,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "194"
										},
										{
											"begin": 2026,
											"end": 2048,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2026,
											"end": 2048,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2026,
											"end": 2048,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2026,
											"end": 2048,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2026,
											"end": 2048,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2026,
											"end": 2048,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2026,
											"end": 2048,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2026,
											"end": 2048,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 2026,
											"end": 2048,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 2026,
											"end": 2048,
											"modifierDepth": 2,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 2026,
											"end": 2048,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 2026,
											"end": 2048,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2026,
											"end": 2048,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2026,
											"end": 2048,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2026,
											"end": 2048,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2026,
											"end": 2048,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2026,
											"end": 2048,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2026,
											"end": 2048,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2026,
											"end": 2048,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2026,
											"end": 2048,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2026,
											"end": 2048,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2026,
											"end": 2048,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2026,
											"end": 2048,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2026,
											"end": 2048,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "195"
										},
										{
											"begin": 2026,
											"end": 2048,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2026,
											"end": 2048,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2026,
											"end": 2048,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "196"
										},
										{
											"begin": 2026,
											"end": 2048,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2026,
											"end": 2048,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "195"
										},
										{
											"begin": 2026,
											"end": 2048,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2026,
											"end": 2058,
											"modifierDepth": 2,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 2026,
											"end": 2058,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2018,
											"end": 2078,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "197"
										},
										{
											"begin": 2018,
											"end": 2078,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2018,
											"end": 2078,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2018,
											"end": 2078,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2018,
											"end": 2078,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2018,
											"end": 2078,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2018,
											"end": 2078,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2018,
											"end": 2078,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2018,
											"end": 2078,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2018,
											"end": 2078,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "198"
										},
										{
											"begin": 2018,
											"end": 2078,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2018,
											"end": 2078,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "199"
										},
										{
											"begin": 2018,
											"end": 2078,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2018,
											"end": 2078,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "198"
										},
										{
											"begin": 2018,
											"end": 2078,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2018,
											"end": 2078,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2018,
											"end": 2078,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2018,
											"end": 2078,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2018,
											"end": 2078,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2018,
											"end": 2078,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2018,
											"end": 2078,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2018,
											"end": 2078,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2018,
											"end": 2078,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "197"
										},
										{
											"begin": 2018,
											"end": 2078,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2089,
											"end": 2094,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 2089,
											"end": 2094,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2089,
											"end": 2094,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2089,
											"end": 2094,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2089,
											"end": 2094,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2089,
											"end": 2094,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 2089,
											"end": 2094,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 2089,
											"end": 2094,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2089,
											"end": 2094,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 2089,
											"end": 2094,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2089,
											"end": 2094,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2089,
											"end": 2109,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2089,
											"end": 2109,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2089,
											"end": 2109,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "3DD0104E"
										},
										{
											"begin": 2110,
											"end": 2116,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2089,
											"end": 2117,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2089,
											"end": 2117,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2089,
											"end": 2117,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2089,
											"end": 2117,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2089,
											"end": 2117,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2089,
											"end": 2117,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 2089,
											"end": 2117,
											"modifierDepth": 2,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 2089,
											"end": 2117,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2089,
											"end": 2117,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2089,
											"end": 2117,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2089,
											"end": 2117,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2089,
											"end": 2117,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "200"
										},
										{
											"begin": 2089,
											"end": 2117,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2089,
											"end": 2117,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2089,
											"end": 2117,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "48"
										},
										{
											"begin": 2089,
											"end": 2117,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2089,
											"end": 2117,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "200"
										},
										{
											"begin": 2089,
											"end": 2117,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2089,
											"end": 2117,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2089,
											"end": 2117,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2089,
											"end": 2117,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2089,
											"end": 2117,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2089,
											"end": 2117,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2089,
											"end": 2117,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2089,
											"end": 2117,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2089,
											"end": 2117,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2089,
											"end": 2117,
											"modifierDepth": 2,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 2089,
											"end": 2117,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2089,
											"end": 2117,
											"modifierDepth": 2,
											"name": "EXTCODESIZE",
											"source": 11
										},
										{
											"begin": 2089,
											"end": 2117,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2089,
											"end": 2117,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2089,
											"end": 2117,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2089,
											"end": 2117,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "201"
										},
										{
											"begin": 2089,
											"end": 2117,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2089,
											"end": 2117,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2089,
											"end": 2117,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2089,
											"end": 2117,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2089,
											"end": 2117,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "201"
										},
										{
											"begin": 2089,
											"end": 2117,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2089,
											"end": 2117,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2089,
											"end": 2117,
											"modifierDepth": 2,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 2089,
											"end": 2117,
											"modifierDepth": 2,
											"name": "CALL",
											"source": 11
										},
										{
											"begin": 2089,
											"end": 2117,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2089,
											"end": 2117,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2089,
											"end": 2117,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2089,
											"end": 2117,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "203"
										},
										{
											"begin": 2089,
											"end": 2117,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2089,
											"end": 2117,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 2089,
											"end": 2117,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2089,
											"end": 2117,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2089,
											"end": 2117,
											"modifierDepth": 2,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 2089,
											"end": 2117,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 2089,
											"end": 2117,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2089,
											"end": 2117,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2089,
											"end": 2117,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "203"
										},
										{
											"begin": 2089,
											"end": 2117,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2089,
											"end": 2117,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2089,
											"end": 2117,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2089,
											"end": 2117,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2089,
											"end": 2117,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2127,
											"end": 2144,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "204"
										},
										{
											"begin": 2133,
											"end": 2135,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2137,
											"end": 2143,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2127,
											"end": 2132,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "205"
										},
										{
											"begin": 2127,
											"end": 2144,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2127,
											"end": 2144,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "204"
										},
										{
											"begin": 2127,
											"end": 2144,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1786,
											"end": 2151,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1786,
											"end": 2151,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1786,
											"end": 2151,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1786,
											"end": 2151,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "tag",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1773,
											"end": 1777,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1796,
											"end": 1803,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 1796,
											"end": 1803,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1796,
											"end": 1803,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1796,
											"end": 1803,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1796,
											"end": 1803,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1796,
											"end": 1803,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1796,
											"end": 1803,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 1796,
											"end": 1803,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1796,
											"end": 1803,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 1796,
											"end": 1803,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 1796,
											"end": 1803,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1789,
											"end": 1803,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1789,
											"end": 1803,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1726,
											"end": 1810,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3050,
											"end": 3057,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3085,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3086,
											"end": 3093,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3069,
											"end": 3094,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3069,
											"end": 3094,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2711,
											"end": 2784,
											"name": "tag",
											"source": 11,
											"value": "88"
										},
										{
											"begin": 2711,
											"end": 2784,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 912,
											"end": 936,
											"name": "PUSH",
											"source": 11,
											"value": "65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2769,
											"end": 2777,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "211"
										},
										{
											"begin": 2769,
											"end": 2775,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "212"
										},
										{
											"begin": 2769,
											"end": 2777,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2769,
											"end": 2777,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "211"
										},
										{
											"begin": 2769,
											"end": 2777,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2711,
											"end": 2784,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2711,
											"end": 2784,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2931,
											"end": 2935,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2960,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2961,
											"end": 2965,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2974,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2974,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2975,
											"end": 2982,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2947,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2947,
											"end": 2983,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2009,
											"end": 2022,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2041,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "215"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 2034,
											"end": 2048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 3,
											"value": "215"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "216"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 2034,
											"end": 2048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 3,
											"value": "216"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "217"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "218"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "217"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 3,
											"value": "218"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 3,
											"value": "219"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "219"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 3,
											"value": "217"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2232,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3365,
											"end": 3369,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3381,
											"end": 3394,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3397,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "221"
										},
										{
											"begin": 3397,
											"end": 3407,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 3397,
											"end": 3409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3397,
											"end": 3409,
											"name": "tag",
											"source": 3,
											"value": "221"
										},
										{
											"begin": 3397,
											"end": 3409,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3381,
											"end": 3409,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3381,
											"end": 3409,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3419,
											"end": 3446,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "222"
										},
										{
											"begin": 3429,
											"end": 3434,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3436,
											"end": 3438,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3440,
											"end": 3445,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3419,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 3419,
											"end": 3446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3419,
											"end": 3446,
											"name": "tag",
											"source": 3,
											"value": "222"
										},
										{
											"begin": 3419,
											"end": 3446,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3463,
											"end": 3467,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3456,
											"end": 3467,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3456,
											"end": 3467,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3456,
											"end": 3467,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3474,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 806,
											"end": 868,
											"name": "tag",
											"source": 11,
											"value": "104"
										},
										{
											"begin": 806,
											"end": 868,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 844,
											"end": 868,
											"name": "PUSH",
											"source": 11,
											"value": "9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6"
										},
										{
											"begin": 806,
											"end": 868,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 806,
											"end": 868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 4730,
											"end": 4734,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4717,
											"end": 4729,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 4717,
											"end": 4735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "tag",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 4759,
											"end": 4763,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4765,
											"end": 4772,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4758,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 4747,
											"end": 4773,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3612,
											"end": 3619,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3638,
											"end": 3649,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3650,
											"end": 3655,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3664,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3631,
											"end": 3665,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3631,
											"end": 3665,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 874,
											"end": 936,
											"name": "tag",
											"source": 11,
											"value": "115"
										},
										{
											"begin": 874,
											"end": 936,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 912,
											"end": 936,
											"name": "PUSH",
											"source": 11,
											"value": "65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A"
										},
										{
											"begin": 874,
											"end": 936,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 874,
											"end": 936,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 984,
											"end": 1010,
											"name": "tag",
											"source": 11,
											"value": "118"
										},
										{
											"begin": 984,
											"end": 1010,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 984,
											"end": 1010,
											"name": "PUSH",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 984,
											"end": 1010,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 984,
											"end": 1010,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 984,
											"end": 1010,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 984,
											"end": 1010,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 984,
											"end": 1010,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 984,
											"end": 1010,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 984,
											"end": 1010,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 984,
											"end": 1010,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 984,
											"end": 1010,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 984,
											"end": 1010,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 984,
											"end": 1010,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 984,
											"end": 1010,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 763,
											"end": 909,
											"name": "tag",
											"source": 9,
											"value": "124"
										},
										{
											"begin": 763,
											"end": 909,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 839,
											"end": 843,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 877,
											"end": 902,
											"name": "PUSH",
											"source": 9,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 862,
											"end": 902,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 862,
											"end": 902,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 862,
											"end": 902,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 862,
											"end": 873,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 862,
											"end": 902,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 862,
											"end": 902,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 862,
											"end": 902,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 862,
											"end": 902,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 855,
											"end": 902,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 855,
											"end": 902,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 763,
											"end": 909,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 763,
											"end": 909,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 763,
											"end": 909,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 763,
											"end": 909,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 7,
											"value": "134"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "tag",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8791,
											"end": 8828,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "232"
										},
										{
											"begin": 8800,
											"end": 8805,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8807,
											"end": 8814,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8816,
											"end": 8821,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8823,
											"end": 8827,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 8791,
											"end": 8799,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "233"
										},
										{
											"begin": 8791,
											"end": 8828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8791,
											"end": 8828,
											"name": "tag",
											"source": 3,
											"value": "232"
										},
										{
											"begin": 8791,
											"end": 8828,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8707,
											"end": 8835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3295,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 3276,
											"end": 3280,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3282,
											"end": 3294,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 3282,
											"end": 3292,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 3282,
											"end": 3294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3282,
											"end": 3294,
											"name": "tag",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 3282,
											"end": 3294,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 3265,
											"end": 3295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3295,
											"name": "tag",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 3265,
											"end": 3295,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3199,
											"end": 3302,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1878,
											"end": 2006,
											"name": "tag",
											"source": 8,
											"value": "143"
										},
										{
											"begin": 1878,
											"end": 2006,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1943,
											"end": 1951,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "239"
										},
										{
											"begin": 1943,
											"end": 1949,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 1943,
											"end": 1951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1943,
											"end": 1951,
											"name": "tag",
											"source": 8,
											"value": "239"
										},
										{
											"begin": 1943,
											"end": 1951,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1939,
											"end": 2000,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1939,
											"end": 2000,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "240"
										},
										{
											"begin": 1939,
											"end": 2000,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1974,
											"end": 1989,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1974,
											"end": 1989,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1974,
											"end": 1989,
											"name": "PUSH",
											"source": 8,
											"value": "D93C066500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1974,
											"end": 1989,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1974,
											"end": 1989,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1974,
											"end": 1989,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1974,
											"end": 1989,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1974,
											"end": 1989,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1974,
											"end": 1989,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1974,
											"end": 1989,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1974,
											"end": 1989,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1974,
											"end": 1989,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1974,
											"end": 1989,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1974,
											"end": 1989,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1939,
											"end": 2000,
											"name": "tag",
											"source": 8,
											"value": "240"
										},
										{
											"begin": 1939,
											"end": 2000,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1878,
											"end": 2006,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7965,
											"end": 8171,
											"name": "tag",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 7965,
											"end": 8171,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8054,
											"end": 8055,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8035,
											"end": 8056,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8035,
											"end": 8056,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8035,
											"end": 8042,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8035,
											"end": 8056,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8035,
											"end": 8056,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8035,
											"end": 8056,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8031,
											"end": 8120,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "242"
										},
										{
											"begin": 8031,
											"end": 8120,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8106,
											"end": 8107,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "PUSH",
											"source": 3,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "243"
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "244"
										},
										{
											"begin": 8079,
											"end": 8109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "tag",
											"source": 3,
											"value": "243"
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 8031,
											"end": 8120,
											"name": "tag",
											"source": 3,
											"value": "242"
										},
										{
											"begin": 8031,
											"end": 8120,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8129,
											"end": 8164,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "245"
										},
										{
											"begin": 8137,
											"end": 8144,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8154,
											"end": 8155,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8158,
											"end": 8163,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8129,
											"end": 8136,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "246"
										},
										{
											"begin": 8129,
											"end": 8164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8129,
											"end": 8164,
											"name": "tag",
											"source": 3,
											"value": "245"
										},
										{
											"begin": 8129,
											"end": 8164,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7965,
											"end": 8171,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7965,
											"end": 8171,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7965,
											"end": 8171,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "tag",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10495,
											"end": 10519,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10522,
											"end": 10547,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "248"
										},
										{
											"begin": 10532,
											"end": 10537,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10539,
											"end": 10546,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10522,
											"end": 10531,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 10522,
											"end": 10547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10522,
											"end": 10547,
											"name": "tag",
											"source": 3,
											"value": "248"
										},
										{
											"begin": 10522,
											"end": 10547,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10495,
											"end": 10547,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10495,
											"end": 10547,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10580,
											"end": 10597,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10561,
											"end": 10577,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10561,
											"end": 10597,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "249"
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10636,
											"end": 10641,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10617,
											"end": 10633,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10617,
											"end": 10641,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "250"
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10695,
											"end": 10702,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10704,
											"end": 10720,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10722,
											"end": 10727,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH",
											"source": 3,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "251"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "252"
										},
										{
											"begin": 10668,
											"end": 10728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "tag",
											"source": 3,
											"value": "251"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "tag",
											"source": 3,
											"value": "250"
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10784,
											"end": 10841,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "253"
										},
										{
											"begin": 10793,
											"end": 10798,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10800,
											"end": 10807,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10828,
											"end": 10833,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10809,
											"end": 10825,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10809,
											"end": 10833,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10835,
											"end": 10840,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10784,
											"end": 10792,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "233"
										},
										{
											"begin": 10784,
											"end": 10841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10784,
											"end": 10841,
											"name": "tag",
											"source": 3,
											"value": "253"
										},
										{
											"begin": 10784,
											"end": 10841,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "tag",
											"source": 3,
											"value": "249"
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10485,
											"end": 10872,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10396,
											"end": 10872,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "tag",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5473,
											"end": 5474,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5457,
											"end": 5461,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "255"
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5525,
											"end": 5526,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH",
											"source": 3,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "256"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "244"
										},
										{
											"begin": 5498,
											"end": 5528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "tag",
											"source": 3,
											"value": "256"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "tag",
											"source": 3,
											"value": "255"
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5566,
											"end": 5567,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5552,
											"end": 5554,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "257"
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5620,
											"end": 5621,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH",
											"source": 3,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "258"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "244"
										},
										{
											"begin": 5591,
											"end": 5623,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "tag",
											"source": 3,
											"value": "258"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "tag",
											"source": 3,
											"value": "257"
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5643,
											"end": 5667,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "259"
										},
										{
											"begin": 5651,
											"end": 5655,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5657,
											"end": 5659,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5661,
											"end": 5666,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5643,
											"end": 5650,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "246"
										},
										{
											"begin": 5643,
											"end": 5667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5643,
											"end": 5667,
											"name": "tag",
											"source": 3,
											"value": "259"
										},
										{
											"begin": 5643,
											"end": 5667,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5374,
											"end": 5674,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6256,
											"end": 6260,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6277,
											"end": 6299,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 6285,
											"end": 6289,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6298,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6277,
											"end": 6284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 6277,
											"end": 6299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6277,
											"end": 6299,
											"name": "tag",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 6277,
											"end": 6299,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6347,
											"end": 6351,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6315,
											"end": 6321,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6322,
											"end": 6326,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6335,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6335,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6336,
											"end": 6343,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6397,
											"end": 6409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 6397,
											"end": 6407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 6397,
											"end": 6409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6397,
											"end": 6409,
											"name": "tag",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 6397,
											"end": 6409,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6388,
											"end": 6395,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6382,
											"end": 6386,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 6431,
											"end": 6435,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "tag",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6473,
											"end": 6478,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6466,
											"end": 6478,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6466,
											"end": 6478,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "tag",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 7049,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 6732,
											"end": 7049,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6810,
											"end": 6814,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6830,
											"end": 6852,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 6838,
											"end": 6842,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6851,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6830,
											"end": 6837,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 6830,
											"end": 6852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6830,
											"end": 6852,
											"name": "tag",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 6830,
											"end": 6852,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6826,
											"end": 7043,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6826,
											"end": 7043,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 6826,
											"end": 7043,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6900,
											"end": 6905,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6868,
											"end": 6874,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 6868,
											"end": 6880,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6875,
											"end": 6879,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6880,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6880,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6880,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6868,
											"end": 6880,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6880,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6880,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6880,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6880,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6868,
											"end": 6880,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6880,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6868,
											"end": 6880,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6888,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6868,
											"end": 6888,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6897,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6889,
											"end": 6896,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6897,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6868,
											"end": 6897,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6897,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6868,
											"end": 6897,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6897,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6897,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6897,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6868,
											"end": 6897,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6897,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6897,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6897,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6897,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6868,
											"end": 6897,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6897,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6868,
											"end": 6897,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6897,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6868,
											"end": 6905,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6868,
											"end": 6905,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6905,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6905,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6905,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6905,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 6868,
											"end": 6905,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6905,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6905,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6905,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6905,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6905,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6905,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6905,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6905,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6905,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6905,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6905,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6951,
											"end": 6963,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 6951,
											"end": 6961,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 6951,
											"end": 6963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6951,
											"end": 6963,
											"name": "tag",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 6951,
											"end": 6963,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6924,
											"end": 6964,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6924,
											"end": 6964,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6942,
											"end": 6949,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6924,
											"end": 6964,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6924,
											"end": 6964,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6936,
											"end": 6940,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6924,
											"end": 6964,
											"name": "PUSH",
											"source": 0,
											"value": "F6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
										},
										{
											"begin": 6924,
											"end": 6964,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6924,
											"end": 6964,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6924,
											"end": 6964,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6924,
											"end": 6964,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6924,
											"end": 6964,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6924,
											"end": 6964,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6924,
											"end": 6964,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6924,
											"end": 6964,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6924,
											"end": 6964,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 6985,
											"end": 6989,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6978,
											"end": 6989,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6978,
											"end": 6989,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6978,
											"end": 6989,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 6978,
											"end": 6989,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6826,
											"end": 7043,
											"name": "tag",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 6826,
											"end": 7043,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7027,
											"end": 7032,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7020,
											"end": 7032,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7020,
											"end": 7032,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 7049,
											"name": "tag",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 6732,
											"end": 7049,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 7049,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 7049,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 7049,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 7049,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 7049,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2586,
											"end": 2703,
											"name": "tag",
											"source": 8,
											"value": "181"
										},
										{
											"begin": 2586,
											"end": 2703,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1597,
											"end": 1613,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "271"
										},
										{
											"begin": 1597,
											"end": 1611,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "272"
										},
										{
											"begin": 1597,
											"end": 1613,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1597,
											"end": 1613,
											"name": "tag",
											"source": 8,
											"value": "271"
										},
										{
											"begin": 1597,
											"end": 1613,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2654,
											"end": 2659,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2644,
											"end": 2651,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 2644,
											"end": 2651,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2644,
											"end": 2659,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 2644,
											"end": 2659,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 2644,
											"end": 2659,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2644,
											"end": 2659,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2644,
											"end": 2659,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2644,
											"end": 2659,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 2644,
											"end": 2659,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 2644,
											"end": 2659,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 2644,
											"end": 2659,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2644,
											"end": 2659,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2644,
											"end": 2659,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2644,
											"end": 2659,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2644,
											"end": 2659,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2644,
											"end": 2659,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 2644,
											"end": 2659,
											"modifierDepth": 1,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 2644,
											"end": 2659,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2644,
											"end": 2659,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 2644,
											"end": 2659,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2674,
											"end": 2696,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA"
										},
										{
											"begin": 2683,
											"end": 2695,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "274"
										},
										{
											"begin": 2683,
											"end": 2693,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "134"
										},
										{
											"begin": 2683,
											"end": 2695,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2683,
											"end": 2695,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "274"
										},
										{
											"begin": 2683,
											"end": 2695,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2674,
											"end": 2696,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2674,
											"end": 2696,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2674,
											"end": 2696,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "275"
										},
										{
											"begin": 2674,
											"end": 2696,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2674,
											"end": 2696,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2674,
											"end": 2696,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "244"
										},
										{
											"begin": 2674,
											"end": 2696,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2674,
											"end": 2696,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "275"
										},
										{
											"begin": 2674,
											"end": 2696,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2674,
											"end": 2696,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2674,
											"end": 2696,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2674,
											"end": 2696,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2674,
											"end": 2696,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2674,
											"end": 2696,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2674,
											"end": 2696,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2674,
											"end": 2696,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 8
										},
										{
											"begin": 2586,
											"end": 2703,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7439,
											"end": 7647,
											"name": "tag",
											"source": 3,
											"value": "205"
										},
										{
											"begin": 7439,
											"end": 7647,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7528,
											"end": 7529,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7509,
											"end": 7530,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7509,
											"end": 7530,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7509,
											"end": 7516,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7509,
											"end": 7530,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7509,
											"end": 7530,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7509,
											"end": 7530,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7505,
											"end": 7596,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "277"
										},
										{
											"begin": 7505,
											"end": 7596,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7582,
											"end": 7583,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "PUSH",
											"source": 3,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "278"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "244"
										},
										{
											"begin": 7553,
											"end": 7585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "tag",
											"source": 3,
											"value": "278"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7505,
											"end": 7596,
											"name": "tag",
											"source": 3,
											"value": "277"
										},
										{
											"begin": 7505,
											"end": 7596,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7605,
											"end": 7640,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "279"
										},
										{
											"begin": 7621,
											"end": 7622,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7625,
											"end": 7632,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7634,
											"end": 7639,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7605,
											"end": 7612,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "246"
										},
										{
											"begin": 7605,
											"end": 7640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7605,
											"end": 7640,
											"name": "tag",
											"source": 3,
											"value": "279"
										},
										{
											"begin": 7605,
											"end": 7640,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7439,
											"end": 7647,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7439,
											"end": 7647,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7439,
											"end": 7647,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2339,
											"end": 2454,
											"name": "tag",
											"source": 8,
											"value": "212"
										},
										{
											"begin": 2339,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1350,
											"end": 1369,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "281"
										},
										{
											"begin": 1350,
											"end": 1367,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "143"
										},
										{
											"begin": 1350,
											"end": 1369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1350,
											"end": 1369,
											"name": "tag",
											"source": 8,
											"value": "281"
										},
										{
											"begin": 1350,
											"end": 1369,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2408,
											"end": 2412,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2398,
											"end": 2405,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 2398,
											"end": 2405,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2398,
											"end": 2412,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 2398,
											"end": 2412,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 2398,
											"end": 2412,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2398,
											"end": 2412,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2398,
											"end": 2412,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2398,
											"end": 2412,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 2398,
											"end": 2412,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 2398,
											"end": 2412,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 2398,
											"end": 2412,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2398,
											"end": 2412,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2398,
											"end": 2412,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2398,
											"end": 2412,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2398,
											"end": 2412,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2398,
											"end": 2412,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 2398,
											"end": 2412,
											"modifierDepth": 1,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 2398,
											"end": 2412,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2398,
											"end": 2412,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 2398,
											"end": 2412,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2427,
											"end": 2447,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
										},
										{
											"begin": 2434,
											"end": 2446,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "283"
										},
										{
											"begin": 2434,
											"end": 2444,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "134"
										},
										{
											"begin": 2434,
											"end": 2446,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2434,
											"end": 2446,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "283"
										},
										{
											"begin": 2434,
											"end": 2446,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2427,
											"end": 2447,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2427,
											"end": 2447,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2427,
											"end": 2447,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "284"
										},
										{
											"begin": 2427,
											"end": 2447,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2427,
											"end": 2447,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2427,
											"end": 2447,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "244"
										},
										{
											"begin": 2427,
											"end": 2447,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2427,
											"end": 2447,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "284"
										},
										{
											"begin": 2427,
											"end": 2447,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2427,
											"end": 2447,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2427,
											"end": 2447,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2427,
											"end": 2447,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2427,
											"end": 2447,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2427,
											"end": 2447,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2427,
											"end": 2447,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2427,
											"end": 2447,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 8
										},
										{
											"begin": 2339,
											"end": 2454,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "tag",
											"source": 3,
											"value": "233"
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9811,
											"end": 9812,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9794,
											"end": 9799,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "286"
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9865,
											"end": 9866,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH",
											"source": 3,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "287"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "244"
										},
										{
											"begin": 9836,
											"end": 9868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "tag",
											"source": 3,
											"value": "287"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "tag",
											"source": 3,
											"value": "286"
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9911,
											"end": 9912,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9892,
											"end": 9899,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "288"
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9964,
											"end": 9965,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH",
											"source": 3,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "289"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "244"
										},
										{
											"begin": 9936,
											"end": 9967,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "tag",
											"source": 3,
											"value": "289"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "tag",
											"source": 3,
											"value": "288"
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10017,
											"end": 10022,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 9998,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9999,
											"end": 10004,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10013,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10022,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10022,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10022,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10022,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10036,
											"end": 10045,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "290"
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10082,
											"end": 10089,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10075,
											"end": 10080,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 3,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10091,
											"end": 10096,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "291"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 10066,
											"end": 10097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "tag",
											"source": 3,
											"value": "291"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "tag",
											"source": 3,
											"value": "290"
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9682,
											"end": 10114,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "tag",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3520,
											"end": 3542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 3528,
											"end": 3532,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3541,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3520,
											"end": 3527,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 3520,
											"end": 3542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3520,
											"end": 3542,
											"name": "tag",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 3520,
											"end": 3542,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3598,
											"end": 3605,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3607,
											"end": 3611,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "E2517D3F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 3565,
											"end": 3612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "tag",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "tag",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3432,
											"end": 3629,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1113,
											"end": 1258,
											"name": "tag",
											"source": 5,
											"value": "246"
										},
										{
											"begin": 1113,
											"end": 1258,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1350,
											"end": 1369,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "298"
										},
										{
											"begin": 1350,
											"end": 1367,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "143"
										},
										{
											"begin": 1350,
											"end": 1369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1350,
											"end": 1369,
											"name": "tag",
											"source": 8,
											"value": "298"
										},
										{
											"begin": 1350,
											"end": 1369,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1221,
											"end": 1251,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "300"
										},
										{
											"begin": 1235,
											"end": 1239,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1241,
											"end": 1243,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1245,
											"end": 1250,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1221,
											"end": 1234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "301"
										},
										{
											"begin": 1221,
											"end": 1251,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1221,
											"end": 1251,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "300"
										},
										{
											"begin": 1221,
											"end": 1251,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1113,
											"end": 1258,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1113,
											"end": 1258,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1113,
											"end": 1258,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1113,
											"end": 1258,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2078,
											"end": 2204,
											"name": "tag",
											"source": 8,
											"value": "272"
										},
										{
											"begin": 2078,
											"end": 2204,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2141,
											"end": 2149,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "303"
										},
										{
											"begin": 2141,
											"end": 2147,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 2141,
											"end": 2149,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2141,
											"end": 2149,
											"name": "tag",
											"source": 8,
											"value": "303"
										},
										{
											"begin": 2141,
											"end": 2149,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2136,
											"end": 2198,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "304"
										},
										{
											"begin": 2136,
											"end": 2198,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2172,
											"end": 2187,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2172,
											"end": 2187,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2172,
											"end": 2187,
											"name": "PUSH",
											"source": 8,
											"value": "8DFC202B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2172,
											"end": 2187,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2172,
											"end": 2187,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2172,
											"end": 2187,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2172,
											"end": 2187,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2172,
											"end": 2187,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2172,
											"end": 2187,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2172,
											"end": 2187,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2172,
											"end": 2187,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2172,
											"end": 2187,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2172,
											"end": 2187,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2172,
											"end": 2187,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2136,
											"end": 2198,
											"name": "tag",
											"source": 8,
											"value": "304"
										},
										{
											"begin": 2136,
											"end": 2198,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2078,
											"end": 2204,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "tag",
											"source": 3,
											"value": "301"
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6094,
											"end": 6095,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6078,
											"end": 6082,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "306"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6230,
											"end": 6235,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6214,
											"end": 6226,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 6214,
											"end": 6226,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "307"
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "308"
										},
										{
											"begin": 6214,
											"end": 6235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "tag",
											"source": 3,
											"value": "307"
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "309"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "tag",
											"source": 3,
											"value": "306"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6266,
											"end": 6285,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6288,
											"end": 6297,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6298,
											"end": 6302,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6266,
											"end": 6303,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6266,
											"end": 6303,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6335,
											"end": 6340,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6321,
											"end": 6332,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6321,
											"end": 6340,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "310"
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6392,
											"end": 6396,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6398,
											"end": 6409,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6411,
											"end": 6416,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH",
											"source": 3,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "311"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "252"
										},
										{
											"begin": 6367,
											"end": 6417,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "tag",
											"source": 3,
											"value": "311"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "tag",
											"source": 3,
											"value": "310"
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6584,
											"end": 6589,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6581,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6589,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6561,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6562,
											"end": 6566,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6589,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6589,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6589,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6589,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6252,
											"end": 6614,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "tag",
											"source": 3,
											"value": "309"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6642,
											"end": 6643,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6628,
											"end": 6630,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "312"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6807,
											"end": 6812,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6791,
											"end": 6803,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 6791,
											"end": 6803,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "313"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "tag",
											"source": 3,
											"value": "312"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7019,
											"end": 7024,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7011,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7012,
											"end": 7014,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "tag",
											"source": 3,
											"value": "313"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7079,
											"end": 7081,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7073,
											"end": 7077,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 3,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7083,
											"end": 7088,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "314"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 7064,
											"end": 7089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "tag",
											"source": 3,
											"value": "314"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5989,
											"end": 7096,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 12,
											"value": "316"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 12,
											"value": "318"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 12,
											"value": "319"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "367"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "318"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 12,
											"value": "367"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "368"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 12,
											"value": "368"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 12,
											"value": "320"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "370"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "319"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 12,
											"value": "370"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 12,
											"value": "32"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "372"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "373"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "316"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 12,
											"value": "373"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 12,
											"value": "372"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "374"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "320"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 12,
											"value": "374"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 12,
											"value": "321"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 12,
											"value": "322"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "377"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "321"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 12,
											"value": "377"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 12,
											"value": "35"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "379"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "322"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 12,
											"value": "379"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "tag",
											"source": 12,
											"value": "323"
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1570,
											"end": 1576,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1604,
											"end": 1609,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1598,
											"end": 1610,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "tag",
											"source": 12,
											"value": "324"
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1707,
											"end": 1718,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1736,
											"end": 1739,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1729,
											"end": 1748,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1781,
											"end": 1785,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1776,
											"end": 1779,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1772,
											"end": 1786,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1623,
											"end": 1792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "tag",
											"source": 12,
											"value": "325"
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1887,
											"end": 1893,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1882,
											"end": 1885,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1877,
											"end": 1880,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1871,
											"end": 1894,
											"name": "MCOPY",
											"source": 12
										},
										{
											"begin": 1928,
											"end": 1929,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1919,
											"end": 1925,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1914,
											"end": 1917,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1910,
											"end": 1926,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1903,
											"end": 1930,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1798,
											"end": 1937,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "tag",
											"source": 12,
											"value": "326"
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1984,
											"end": 1990,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2035,
											"end": 2037,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 2031,
											"end": 2038,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 2026,
											"end": 2028,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 2019,
											"end": 2024,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2015,
											"end": 2029,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2011,
											"end": 2039,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2001,
											"end": 2039,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2001,
											"end": 2039,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1943,
											"end": 2045,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "tag",
											"source": 12,
											"value": "327"
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2139,
											"end": 2142,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2167,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "385"
										},
										{
											"begin": 2200,
											"end": 2205,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2167,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "323"
										},
										{
											"begin": 2167,
											"end": 2206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2167,
											"end": 2206,
											"name": "tag",
											"source": 12,
											"value": "385"
										},
										{
											"begin": 2167,
											"end": 2206,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2222,
											"end": 2293,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "386"
										},
										{
											"begin": 2286,
											"end": 2292,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2281,
											"end": 2284,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2222,
											"end": 2293,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "324"
										},
										{
											"begin": 2222,
											"end": 2293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2222,
											"end": 2293,
											"name": "tag",
											"source": 12,
											"value": "386"
										},
										{
											"begin": 2222,
											"end": 2293,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2215,
											"end": 2293,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 2215,
											"end": 2293,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2302,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "387"
										},
										{
											"begin": 2360,
											"end": 2366,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2355,
											"end": 2358,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2348,
											"end": 2352,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2341,
											"end": 2346,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 2337,
											"end": 2353,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2302,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "325"
										},
										{
											"begin": 2302,
											"end": 2367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2302,
											"end": 2367,
											"name": "tag",
											"source": 12,
											"value": "387"
										},
										{
											"begin": 2302,
											"end": 2367,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "388"
										},
										{
											"begin": 2414,
											"end": 2420,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "326"
										},
										{
											"begin": 2392,
											"end": 2421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "tag",
											"source": 12,
											"value": "388"
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2387,
											"end": 2390,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2383,
											"end": 2422,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2376,
											"end": 2422,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2376,
											"end": 2422,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2143,
											"end": 2428,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2051,
											"end": 2428,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "tag",
											"source": 12,
											"value": "39"
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2547,
											"end": 2551,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2585,
											"end": 2587,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2574,
											"end": 2583,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2570,
											"end": 2588,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2562,
											"end": 2588,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2562,
											"end": 2588,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2634,
											"end": 2643,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2628,
											"end": 2632,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2624,
											"end": 2644,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2620,
											"end": 2621,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2609,
											"end": 2618,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2605,
											"end": 2622,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2598,
											"end": 2645,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2662,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "390"
										},
										{
											"begin": 2735,
											"end": 2739,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2726,
											"end": 2732,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2662,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "327"
										},
										{
											"begin": 2662,
											"end": 2740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2662,
											"end": 2740,
											"name": "tag",
											"source": 12,
											"value": "390"
										},
										{
											"begin": 2662,
											"end": 2740,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2654,
											"end": 2740,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2654,
											"end": 2740,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2434,
											"end": 2747,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2753,
											"end": 2879,
											"name": "tag",
											"source": 12,
											"value": "328"
										},
										{
											"begin": 2753,
											"end": 2879,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2790,
											"end": 2797,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2830,
											"end": 2872,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2823,
											"end": 2828,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2819,
											"end": 2873,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2808,
											"end": 2873,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2808,
											"end": 2873,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2753,
											"end": 2879,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2753,
											"end": 2879,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2753,
											"end": 2879,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2753,
											"end": 2879,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2885,
											"end": 2981,
											"name": "tag",
											"source": 12,
											"value": "329"
										},
										{
											"begin": 2885,
											"end": 2981,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2922,
											"end": 2929,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2951,
											"end": 2975,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "393"
										},
										{
											"begin": 2969,
											"end": 2974,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2951,
											"end": 2975,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "328"
										},
										{
											"begin": 2951,
											"end": 2975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2951,
											"end": 2975,
											"name": "tag",
											"source": 12,
											"value": "393"
										},
										{
											"begin": 2951,
											"end": 2975,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2940,
											"end": 2975,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2940,
											"end": 2975,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2885,
											"end": 2981,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2885,
											"end": 2981,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2885,
											"end": 2981,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2885,
											"end": 2981,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2987,
											"end": 3109,
											"name": "tag",
											"source": 12,
											"value": "330"
										},
										{
											"begin": 2987,
											"end": 3109,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3060,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "395"
										},
										{
											"begin": 3078,
											"end": 3083,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3060,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "329"
										},
										{
											"begin": 3060,
											"end": 3084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3060,
											"end": 3084,
											"name": "tag",
											"source": 12,
											"value": "395"
										},
										{
											"begin": 3060,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3053,
											"end": 3058,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3050,
											"end": 3085,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 3040,
											"end": 3103,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "396"
										},
										{
											"begin": 3040,
											"end": 3103,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3099,
											"end": 3100,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3096,
											"end": 3097,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3089,
											"end": 3101,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3040,
											"end": 3103,
											"name": "tag",
											"source": 12,
											"value": "396"
										},
										{
											"begin": 3040,
											"end": 3103,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2987,
											"end": 3109,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2987,
											"end": 3109,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3115,
											"end": 3254,
											"name": "tag",
											"source": 12,
											"value": "331"
										},
										{
											"begin": 3115,
											"end": 3254,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3161,
											"end": 3166,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3199,
											"end": 3205,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3186,
											"end": 3206,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 3177,
											"end": 3206,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3177,
											"end": 3206,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3215,
											"end": 3248,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "398"
										},
										{
											"begin": 3242,
											"end": 3247,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3215,
											"end": 3248,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "330"
										},
										{
											"begin": 3215,
											"end": 3248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3215,
											"end": 3248,
											"name": "tag",
											"source": 12,
											"value": "398"
										},
										{
											"begin": 3215,
											"end": 3248,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3115,
											"end": 3254,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3115,
											"end": 3254,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3115,
											"end": 3254,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3115,
											"end": 3254,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3115,
											"end": 3254,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3260,
											"end": 3337,
											"name": "tag",
											"source": 12,
											"value": "332"
										},
										{
											"begin": 3260,
											"end": 3337,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3297,
											"end": 3304,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3326,
											"end": 3331,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3315,
											"end": 3331,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3315,
											"end": 3331,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3260,
											"end": 3337,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3260,
											"end": 3337,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3260,
											"end": 3337,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3260,
											"end": 3337,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3343,
											"end": 3465,
											"name": "tag",
											"source": 12,
											"value": "333"
										},
										{
											"begin": 3343,
											"end": 3465,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3416,
											"end": 3440,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "401"
										},
										{
											"begin": 3434,
											"end": 3439,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3416,
											"end": 3440,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "332"
										},
										{
											"begin": 3416,
											"end": 3440,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3416,
											"end": 3440,
											"name": "tag",
											"source": 12,
											"value": "401"
										},
										{
											"begin": 3416,
											"end": 3440,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3409,
											"end": 3414,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3406,
											"end": 3441,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 3396,
											"end": 3459,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "402"
										},
										{
											"begin": 3396,
											"end": 3459,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3455,
											"end": 3456,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3452,
											"end": 3453,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3445,
											"end": 3457,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3396,
											"end": 3459,
											"name": "tag",
											"source": 12,
											"value": "402"
										},
										{
											"begin": 3396,
											"end": 3459,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3343,
											"end": 3465,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3343,
											"end": 3465,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3471,
											"end": 3610,
											"name": "tag",
											"source": 12,
											"value": "334"
										},
										{
											"begin": 3471,
											"end": 3610,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3517,
											"end": 3522,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3555,
											"end": 3561,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3542,
											"end": 3562,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 3533,
											"end": 3562,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3533,
											"end": 3562,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3571,
											"end": 3604,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "404"
										},
										{
											"begin": 3598,
											"end": 3603,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3571,
											"end": 3604,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "333"
										},
										{
											"begin": 3571,
											"end": 3604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3571,
											"end": 3604,
											"name": "tag",
											"source": 12,
											"value": "404"
										},
										{
											"begin": 3571,
											"end": 3604,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3471,
											"end": 3610,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3471,
											"end": 3610,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3471,
											"end": 3610,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3471,
											"end": 3610,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3471,
											"end": 3610,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3616,
											"end": 4090,
											"name": "tag",
											"source": 12,
											"value": "42"
										},
										{
											"begin": 3616,
											"end": 4090,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3684,
											"end": 3690,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3692,
											"end": 3698,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3741,
											"end": 3743,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3729,
											"end": 3738,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3720,
											"end": 3727,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3716,
											"end": 3739,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3712,
											"end": 3744,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 3709,
											"end": 3828,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3709,
											"end": 3828,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "406"
										},
										{
											"begin": 3709,
											"end": 3828,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3747,
											"end": 3826,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "407"
										},
										{
											"begin": 3747,
											"end": 3826,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "316"
										},
										{
											"begin": 3747,
											"end": 3826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3747,
											"end": 3826,
											"name": "tag",
											"source": 12,
											"value": "407"
										},
										{
											"begin": 3747,
											"end": 3826,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3709,
											"end": 3828,
											"name": "tag",
											"source": 12,
											"value": "406"
										},
										{
											"begin": 3709,
											"end": 3828,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3867,
											"end": 3868,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3892,
											"end": 3945,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "408"
										},
										{
											"begin": 3937,
											"end": 3944,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3928,
											"end": 3934,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3917,
											"end": 3926,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 3913,
											"end": 3935,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3892,
											"end": 3945,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "331"
										},
										{
											"begin": 3892,
											"end": 3945,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3892,
											"end": 3945,
											"name": "tag",
											"source": 12,
											"value": "408"
										},
										{
											"begin": 3892,
											"end": 3945,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3882,
											"end": 3945,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3882,
											"end": 3945,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3838,
											"end": 3955,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3994,
											"end": 3996,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4020,
											"end": 4073,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "409"
										},
										{
											"begin": 4065,
											"end": 4072,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 4056,
											"end": 4062,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4045,
											"end": 4054,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 4041,
											"end": 4063,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4020,
											"end": 4073,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "334"
										},
										{
											"begin": 4020,
											"end": 4073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4020,
											"end": 4073,
											"name": "tag",
											"source": 12,
											"value": "409"
										},
										{
											"begin": 4020,
											"end": 4073,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4010,
											"end": 4073,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4010,
											"end": 4073,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3965,
											"end": 4083,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3616,
											"end": 4090,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3616,
											"end": 4090,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3616,
											"end": 4090,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3616,
											"end": 4090,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3616,
											"end": 4090,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3616,
											"end": 4090,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4096,
											"end": 4214,
											"name": "tag",
											"source": 12,
											"value": "335"
										},
										{
											"begin": 4096,
											"end": 4214,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4183,
											"end": 4207,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "411"
										},
										{
											"begin": 4201,
											"end": 4206,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4183,
											"end": 4207,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "332"
										},
										{
											"begin": 4183,
											"end": 4207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4183,
											"end": 4207,
											"name": "tag",
											"source": 12,
											"value": "411"
										},
										{
											"begin": 4183,
											"end": 4207,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4178,
											"end": 4181,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4171,
											"end": 4208,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4096,
											"end": 4214,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4096,
											"end": 4214,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4096,
											"end": 4214,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4220,
											"end": 4442,
											"name": "tag",
											"source": 12,
											"value": "48"
										},
										{
											"begin": 4220,
											"end": 4442,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4313,
											"end": 4317,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4351,
											"end": 4353,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4340,
											"end": 4349,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4336,
											"end": 4354,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4328,
											"end": 4354,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4328,
											"end": 4354,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4364,
											"end": 4435,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "413"
										},
										{
											"begin": 4432,
											"end": 4433,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4421,
											"end": 4430,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4417,
											"end": 4434,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4408,
											"end": 4414,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4364,
											"end": 4435,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "335"
										},
										{
											"begin": 4364,
											"end": 4435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4364,
											"end": 4435,
											"name": "tag",
											"source": 12,
											"value": "413"
										},
										{
											"begin": 4364,
											"end": 4435,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4220,
											"end": 4442,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4220,
											"end": 4442,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4220,
											"end": 4442,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4220,
											"end": 4442,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4220,
											"end": 4442,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4448,
											"end": 5067,
											"name": "tag",
											"source": 12,
											"value": "54"
										},
										{
											"begin": 4448,
											"end": 5067,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4525,
											"end": 4531,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4533,
											"end": 4539,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4541,
											"end": 4547,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4590,
											"end": 4592,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 4578,
											"end": 4587,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4569,
											"end": 4576,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 4565,
											"end": 4588,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 4561,
											"end": 4593,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 4558,
											"end": 4677,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4558,
											"end": 4677,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "415"
										},
										{
											"begin": 4558,
											"end": 4677,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4596,
											"end": 4675,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "416"
										},
										{
											"begin": 4596,
											"end": 4675,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "316"
										},
										{
											"begin": 4596,
											"end": 4675,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4596,
											"end": 4675,
											"name": "tag",
											"source": 12,
											"value": "416"
										},
										{
											"begin": 4596,
											"end": 4675,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4558,
											"end": 4677,
											"name": "tag",
											"source": 12,
											"value": "415"
										},
										{
											"begin": 4558,
											"end": 4677,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4716,
											"end": 4717,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4741,
											"end": 4794,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "417"
										},
										{
											"begin": 4786,
											"end": 4793,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 4777,
											"end": 4783,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4766,
											"end": 4775,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 4762,
											"end": 4784,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4741,
											"end": 4794,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "331"
										},
										{
											"begin": 4741,
											"end": 4794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4741,
											"end": 4794,
											"name": "tag",
											"source": 12,
											"value": "417"
										},
										{
											"begin": 4741,
											"end": 4794,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4731,
											"end": 4794,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 4731,
											"end": 4794,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4687,
											"end": 4804,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4843,
											"end": 4845,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4869,
											"end": 4922,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "418"
										},
										{
											"begin": 4914,
											"end": 4921,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 4905,
											"end": 4911,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4894,
											"end": 4903,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 4890,
											"end": 4912,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4869,
											"end": 4922,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "331"
										},
										{
											"begin": 4869,
											"end": 4922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4869,
											"end": 4922,
											"name": "tag",
											"source": 12,
											"value": "418"
										},
										{
											"begin": 4869,
											"end": 4922,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4859,
											"end": 4922,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4859,
											"end": 4922,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4814,
											"end": 4932,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4971,
											"end": 4973,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4997,
											"end": 5050,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "419"
										},
										{
											"begin": 5042,
											"end": 5049,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 5033,
											"end": 5039,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5022,
											"end": 5031,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 5018,
											"end": 5040,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4997,
											"end": 5050,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "334"
										},
										{
											"begin": 4997,
											"end": 5050,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4997,
											"end": 5050,
											"name": "tag",
											"source": 12,
											"value": "419"
										},
										{
											"begin": 4997,
											"end": 5050,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4987,
											"end": 5050,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4987,
											"end": 5050,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4942,
											"end": 5060,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4448,
											"end": 5067,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4448,
											"end": 5067,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4448,
											"end": 5067,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4448,
											"end": 5067,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4448,
											"end": 5067,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4448,
											"end": 5067,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5073,
											"end": 5150,
											"name": "tag",
											"source": 12,
											"value": "336"
										},
										{
											"begin": 5073,
											"end": 5150,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5110,
											"end": 5117,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5139,
											"end": 5144,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5128,
											"end": 5144,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5128,
											"end": 5144,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5073,
											"end": 5150,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5073,
											"end": 5150,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5073,
											"end": 5150,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5073,
											"end": 5150,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5156,
											"end": 5278,
											"name": "tag",
											"source": 12,
											"value": "337"
										},
										{
											"begin": 5156,
											"end": 5278,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5229,
											"end": 5253,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "422"
										},
										{
											"begin": 5247,
											"end": 5252,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5229,
											"end": 5253,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "336"
										},
										{
											"begin": 5229,
											"end": 5253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5229,
											"end": 5253,
											"name": "tag",
											"source": 12,
											"value": "422"
										},
										{
											"begin": 5229,
											"end": 5253,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5222,
											"end": 5227,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5219,
											"end": 5254,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 5209,
											"end": 5272,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "423"
										},
										{
											"begin": 5209,
											"end": 5272,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5268,
											"end": 5269,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5265,
											"end": 5266,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5258,
											"end": 5270,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 5209,
											"end": 5272,
											"name": "tag",
											"source": 12,
											"value": "423"
										},
										{
											"begin": 5209,
											"end": 5272,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5156,
											"end": 5278,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5156,
											"end": 5278,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5284,
											"end": 5423,
											"name": "tag",
											"source": 12,
											"value": "338"
										},
										{
											"begin": 5284,
											"end": 5423,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5330,
											"end": 5335,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5368,
											"end": 5374,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5355,
											"end": 5375,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 5346,
											"end": 5375,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5346,
											"end": 5375,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5384,
											"end": 5417,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "425"
										},
										{
											"begin": 5411,
											"end": 5416,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5384,
											"end": 5417,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "337"
										},
										{
											"begin": 5384,
											"end": 5417,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5384,
											"end": 5417,
											"name": "tag",
											"source": 12,
											"value": "425"
										},
										{
											"begin": 5384,
											"end": 5417,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5284,
											"end": 5423,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5284,
											"end": 5423,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5284,
											"end": 5423,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5284,
											"end": 5423,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5284,
											"end": 5423,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5429,
											"end": 5758,
											"name": "tag",
											"source": 12,
											"value": "59"
										},
										{
											"begin": 5429,
											"end": 5758,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5488,
											"end": 5494,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5537,
											"end": 5539,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5525,
											"end": 5534,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5516,
											"end": 5523,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 5512,
											"end": 5535,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 5508,
											"end": 5540,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 5505,
											"end": 5624,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5505,
											"end": 5624,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "427"
										},
										{
											"begin": 5505,
											"end": 5624,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5543,
											"end": 5622,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "428"
										},
										{
											"begin": 5543,
											"end": 5622,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "316"
										},
										{
											"begin": 5543,
											"end": 5622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5543,
											"end": 5622,
											"name": "tag",
											"source": 12,
											"value": "428"
										},
										{
											"begin": 5543,
											"end": 5622,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5505,
											"end": 5624,
											"name": "tag",
											"source": 12,
											"value": "427"
										},
										{
											"begin": 5505,
											"end": 5624,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5663,
											"end": 5664,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5688,
											"end": 5741,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "429"
										},
										{
											"begin": 5733,
											"end": 5740,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 5724,
											"end": 5730,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5713,
											"end": 5722,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 5709,
											"end": 5731,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5688,
											"end": 5741,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "338"
										},
										{
											"begin": 5688,
											"end": 5741,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5688,
											"end": 5741,
											"name": "tag",
											"source": 12,
											"value": "429"
										},
										{
											"begin": 5688,
											"end": 5741,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5678,
											"end": 5741,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5678,
											"end": 5741,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5634,
											"end": 5751,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5429,
											"end": 5758,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5429,
											"end": 5758,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5429,
											"end": 5758,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5429,
											"end": 5758,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5429,
											"end": 5758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5764,
											"end": 5882,
											"name": "tag",
											"source": 12,
											"value": "339"
										},
										{
											"begin": 5764,
											"end": 5882,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5851,
											"end": 5875,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "431"
										},
										{
											"begin": 5869,
											"end": 5874,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5851,
											"end": 5875,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "336"
										},
										{
											"begin": 5851,
											"end": 5875,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5851,
											"end": 5875,
											"name": "tag",
											"source": 12,
											"value": "431"
										},
										{
											"begin": 5851,
											"end": 5875,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5846,
											"end": 5849,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5839,
											"end": 5876,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5764,
											"end": 5882,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5764,
											"end": 5882,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5764,
											"end": 5882,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5888,
											"end": 6110,
											"name": "tag",
											"source": 12,
											"value": "62"
										},
										{
											"begin": 5888,
											"end": 6110,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5981,
											"end": 5985,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6019,
											"end": 6021,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6008,
											"end": 6017,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6004,
											"end": 6022,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5996,
											"end": 6022,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5996,
											"end": 6022,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6032,
											"end": 6103,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "433"
										},
										{
											"begin": 6100,
											"end": 6101,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6089,
											"end": 6098,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6085,
											"end": 6102,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6076,
											"end": 6082,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6032,
											"end": 6103,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "339"
										},
										{
											"begin": 6032,
											"end": 6103,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6032,
											"end": 6103,
											"name": "tag",
											"source": 12,
											"value": "433"
										},
										{
											"begin": 6032,
											"end": 6103,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5888,
											"end": 6110,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5888,
											"end": 6110,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5888,
											"end": 6110,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5888,
											"end": 6110,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5888,
											"end": 6110,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6116,
											"end": 6590,
											"name": "tag",
											"source": 12,
											"value": "65"
										},
										{
											"begin": 6116,
											"end": 6590,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6184,
											"end": 6190,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6192,
											"end": 6198,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6241,
											"end": 6243,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6229,
											"end": 6238,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6220,
											"end": 6227,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 6216,
											"end": 6239,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 6212,
											"end": 6244,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 6209,
											"end": 6328,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6209,
											"end": 6328,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "435"
										},
										{
											"begin": 6209,
											"end": 6328,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6247,
											"end": 6326,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "436"
										},
										{
											"begin": 6247,
											"end": 6326,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "316"
										},
										{
											"begin": 6247,
											"end": 6326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6247,
											"end": 6326,
											"name": "tag",
											"source": 12,
											"value": "436"
										},
										{
											"begin": 6247,
											"end": 6326,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6209,
											"end": 6328,
											"name": "tag",
											"source": 12,
											"value": "435"
										},
										{
											"begin": 6209,
											"end": 6328,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6367,
											"end": 6368,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6392,
											"end": 6445,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "437"
										},
										{
											"begin": 6437,
											"end": 6444,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 6428,
											"end": 6434,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6417,
											"end": 6426,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 6413,
											"end": 6435,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6392,
											"end": 6445,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "338"
										},
										{
											"begin": 6392,
											"end": 6445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6392,
											"end": 6445,
											"name": "tag",
											"source": 12,
											"value": "437"
										},
										{
											"begin": 6392,
											"end": 6445,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6382,
											"end": 6445,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6382,
											"end": 6445,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6338,
											"end": 6455,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6494,
											"end": 6496,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6520,
											"end": 6573,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "438"
										},
										{
											"begin": 6565,
											"end": 6572,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 6556,
											"end": 6562,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6545,
											"end": 6554,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 6541,
											"end": 6563,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6520,
											"end": 6573,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "331"
										},
										{
											"begin": 6520,
											"end": 6573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6520,
											"end": 6573,
											"name": "tag",
											"source": 12,
											"value": "438"
										},
										{
											"begin": 6520,
											"end": 6573,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6510,
											"end": 6573,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6510,
											"end": 6573,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6465,
											"end": 6583,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6116,
											"end": 6590,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6116,
											"end": 6590,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6116,
											"end": 6590,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6116,
											"end": 6590,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6116,
											"end": 6590,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6116,
											"end": 6590,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6596,
											"end": 6682,
											"name": "tag",
											"source": 12,
											"value": "340"
										},
										{
											"begin": 6596,
											"end": 6682,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6631,
											"end": 6638,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6671,
											"end": 6675,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 6664,
											"end": 6669,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6660,
											"end": 6676,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 6649,
											"end": 6676,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6649,
											"end": 6676,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6596,
											"end": 6682,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6596,
											"end": 6682,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6596,
											"end": 6682,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6596,
											"end": 6682,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6688,
											"end": 6800,
											"name": "tag",
											"source": 12,
											"value": "341"
										},
										{
											"begin": 6688,
											"end": 6800,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6771,
											"end": 6793,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "441"
										},
										{
											"begin": 6787,
											"end": 6792,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6771,
											"end": 6793,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "340"
										},
										{
											"begin": 6771,
											"end": 6793,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6771,
											"end": 6793,
											"name": "tag",
											"source": 12,
											"value": "441"
										},
										{
											"begin": 6771,
											"end": 6793,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6766,
											"end": 6769,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6759,
											"end": 6794,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6688,
											"end": 6800,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6688,
											"end": 6800,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6688,
											"end": 6800,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6806,
											"end": 7020,
											"name": "tag",
											"source": 12,
											"value": "70"
										},
										{
											"begin": 6806,
											"end": 7020,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6895,
											"end": 6899,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6933,
											"end": 6935,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6922,
											"end": 6931,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6918,
											"end": 6936,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6910,
											"end": 6936,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6910,
											"end": 6936,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6946,
											"end": 7013,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "443"
										},
										{
											"begin": 7010,
											"end": 7011,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6999,
											"end": 7008,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6995,
											"end": 7012,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6986,
											"end": 6992,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6946,
											"end": 7013,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "341"
										},
										{
											"begin": 6946,
											"end": 7013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6946,
											"end": 7013,
											"name": "tag",
											"source": 12,
											"value": "443"
										},
										{
											"begin": 6946,
											"end": 7013,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6806,
											"end": 7020,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6806,
											"end": 7020,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6806,
											"end": 7020,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6806,
											"end": 7020,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6806,
											"end": 7020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7026,
											"end": 7355,
											"name": "tag",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 7026,
											"end": 7355,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7085,
											"end": 7091,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7134,
											"end": 7136,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7122,
											"end": 7131,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7113,
											"end": 7120,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 7109,
											"end": 7132,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 7105,
											"end": 7137,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 7102,
											"end": 7221,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7102,
											"end": 7221,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "445"
										},
										{
											"begin": 7102,
											"end": 7221,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7140,
											"end": 7219,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "446"
										},
										{
											"begin": 7140,
											"end": 7219,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "316"
										},
										{
											"begin": 7140,
											"end": 7219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7140,
											"end": 7219,
											"name": "tag",
											"source": 12,
											"value": "446"
										},
										{
											"begin": 7140,
											"end": 7219,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7102,
											"end": 7221,
											"name": "tag",
											"source": 12,
											"value": "445"
										},
										{
											"begin": 7102,
											"end": 7221,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7260,
											"end": 7261,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7285,
											"end": 7338,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "447"
										},
										{
											"begin": 7330,
											"end": 7337,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 7321,
											"end": 7327,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7310,
											"end": 7319,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 7306,
											"end": 7328,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7285,
											"end": 7338,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "331"
										},
										{
											"begin": 7285,
											"end": 7338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7285,
											"end": 7338,
											"name": "tag",
											"source": 12,
											"value": "447"
										},
										{
											"begin": 7285,
											"end": 7338,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7275,
											"end": 7338,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7275,
											"end": 7338,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7231,
											"end": 7348,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7026,
											"end": 7355,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7026,
											"end": 7355,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7026,
											"end": 7355,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7026,
											"end": 7355,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7026,
											"end": 7355,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7361,
											"end": 7835,
											"name": "tag",
											"source": 12,
											"value": "111"
										},
										{
											"begin": 7361,
											"end": 7835,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7429,
											"end": 7435,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7437,
											"end": 7443,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7486,
											"end": 7488,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 7474,
											"end": 7483,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7465,
											"end": 7472,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 7461,
											"end": 7484,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 7457,
											"end": 7489,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 7454,
											"end": 7573,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7454,
											"end": 7573,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "449"
										},
										{
											"begin": 7454,
											"end": 7573,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7492,
											"end": 7571,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "450"
										},
										{
											"begin": 7492,
											"end": 7571,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "316"
										},
										{
											"begin": 7492,
											"end": 7571,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7492,
											"end": 7571,
											"name": "tag",
											"source": 12,
											"value": "450"
										},
										{
											"begin": 7492,
											"end": 7571,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7454,
											"end": 7573,
											"name": "tag",
											"source": 12,
											"value": "449"
										},
										{
											"begin": 7454,
											"end": 7573,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7612,
											"end": 7613,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7637,
											"end": 7690,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "451"
										},
										{
											"begin": 7682,
											"end": 7689,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 7673,
											"end": 7679,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7662,
											"end": 7671,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 7658,
											"end": 7680,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7637,
											"end": 7690,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "331"
										},
										{
											"begin": 7637,
											"end": 7690,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7637,
											"end": 7690,
											"name": "tag",
											"source": 12,
											"value": "451"
										},
										{
											"begin": 7637,
											"end": 7690,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7627,
											"end": 7690,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7627,
											"end": 7690,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7583,
											"end": 7700,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7739,
											"end": 7741,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7765,
											"end": 7818,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "452"
										},
										{
											"begin": 7810,
											"end": 7817,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 7801,
											"end": 7807,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7790,
											"end": 7799,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 7786,
											"end": 7808,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7765,
											"end": 7818,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "331"
										},
										{
											"begin": 7765,
											"end": 7818,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7765,
											"end": 7818,
											"name": "tag",
											"source": 12,
											"value": "452"
										},
										{
											"begin": 7765,
											"end": 7818,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7755,
											"end": 7818,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7755,
											"end": 7818,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7710,
											"end": 7828,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7361,
											"end": 7835,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7361,
											"end": 7835,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7361,
											"end": 7835,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7361,
											"end": 7835,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7361,
											"end": 7835,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7361,
											"end": 7835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7841,
											"end": 7901,
											"name": "tag",
											"source": 12,
											"value": "342"
										},
										{
											"begin": 7841,
											"end": 7901,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7869,
											"end": 7872,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7890,
											"end": 7895,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7883,
											"end": 7895,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7883,
											"end": 7895,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7841,
											"end": 7901,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7841,
											"end": 7901,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7841,
											"end": 7901,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7841,
											"end": 7901,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7907,
											"end": 8049,
											"name": "tag",
											"source": 12,
											"value": "343"
										},
										{
											"begin": 7907,
											"end": 8049,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7957,
											"end": 7966,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7990,
											"end": 8043,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "455"
										},
										{
											"begin": 8008,
											"end": 8042,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "456"
										},
										{
											"begin": 8017,
											"end": 8041,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "457"
										},
										{
											"begin": 8035,
											"end": 8040,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 8017,
											"end": 8041,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "328"
										},
										{
											"begin": 8017,
											"end": 8041,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8017,
											"end": 8041,
											"name": "tag",
											"source": 12,
											"value": "457"
										},
										{
											"begin": 8017,
											"end": 8041,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8008,
											"end": 8042,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "342"
										},
										{
											"begin": 8008,
											"end": 8042,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8008,
											"end": 8042,
											"name": "tag",
											"source": 12,
											"value": "456"
										},
										{
											"begin": 8008,
											"end": 8042,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7990,
											"end": 8043,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "328"
										},
										{
											"begin": 7990,
											"end": 8043,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7990,
											"end": 8043,
											"name": "tag",
											"source": 12,
											"value": "455"
										},
										{
											"begin": 7990,
											"end": 8043,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7977,
											"end": 8043,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7977,
											"end": 8043,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7907,
											"end": 8049,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7907,
											"end": 8049,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7907,
											"end": 8049,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7907,
											"end": 8049,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8055,
											"end": 8181,
											"name": "tag",
											"source": 12,
											"value": "344"
										},
										{
											"begin": 8055,
											"end": 8181,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8105,
											"end": 8114,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8138,
											"end": 8175,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "459"
										},
										{
											"begin": 8169,
											"end": 8174,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8138,
											"end": 8175,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "343"
										},
										{
											"begin": 8138,
											"end": 8175,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8138,
											"end": 8175,
											"name": "tag",
											"source": 12,
											"value": "459"
										},
										{
											"begin": 8138,
											"end": 8175,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8125,
											"end": 8175,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8125,
											"end": 8175,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8055,
											"end": 8181,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8055,
											"end": 8181,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8055,
											"end": 8181,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8055,
											"end": 8181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8187,
											"end": 8335,
											"name": "tag",
											"source": 12,
											"value": "345"
										},
										{
											"begin": 8187,
											"end": 8335,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8259,
											"end": 8268,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8292,
											"end": 8329,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "461"
										},
										{
											"begin": 8323,
											"end": 8328,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8292,
											"end": 8329,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "344"
										},
										{
											"begin": 8292,
											"end": 8329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8292,
											"end": 8329,
											"name": "tag",
											"source": 12,
											"value": "461"
										},
										{
											"begin": 8292,
											"end": 8329,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8279,
											"end": 8329,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8279,
											"end": 8329,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8187,
											"end": 8335,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8187,
											"end": 8335,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8187,
											"end": 8335,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8187,
											"end": 8335,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8341,
											"end": 8516,
											"name": "tag",
											"source": 12,
											"value": "346"
										},
										{
											"begin": 8341,
											"end": 8516,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8450,
											"end": 8509,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "463"
										},
										{
											"begin": 8503,
											"end": 8508,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8450,
											"end": 8509,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "345"
										},
										{
											"begin": 8450,
											"end": 8509,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8450,
											"end": 8509,
											"name": "tag",
											"source": 12,
											"value": "463"
										},
										{
											"begin": 8450,
											"end": 8509,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8445,
											"end": 8448,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8438,
											"end": 8510,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8341,
											"end": 8516,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8341,
											"end": 8516,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8341,
											"end": 8516,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8522,
											"end": 8788,
											"name": "tag",
											"source": 12,
											"value": "120"
										},
										{
											"begin": 8522,
											"end": 8788,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8637,
											"end": 8641,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8675,
											"end": 8677,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8664,
											"end": 8673,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8660,
											"end": 8678,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8652,
											"end": 8678,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8652,
											"end": 8678,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8688,
											"end": 8781,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "465"
										},
										{
											"begin": 8778,
											"end": 8779,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8767,
											"end": 8776,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8763,
											"end": 8780,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8754,
											"end": 8760,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 8688,
											"end": 8781,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "346"
										},
										{
											"begin": 8688,
											"end": 8781,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8688,
											"end": 8781,
											"name": "tag",
											"source": 12,
											"value": "465"
										},
										{
											"begin": 8688,
											"end": 8781,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8522,
											"end": 8788,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8522,
											"end": 8788,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8522,
											"end": 8788,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8522,
											"end": 8788,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8522,
											"end": 8788,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8794,
											"end": 8974,
											"name": "tag",
											"source": 12,
											"value": "347"
										},
										{
											"begin": 8794,
											"end": 8974,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8842,
											"end": 8919,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8839,
											"end": 8840,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8832,
											"end": 8920,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8939,
											"end": 8943,
											"name": "PUSH",
											"source": 12,
											"value": "22"
										},
										{
											"begin": 8936,
											"end": 8937,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 8929,
											"end": 8944,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8963,
											"end": 8967,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 8960,
											"end": 8961,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8953,
											"end": 8968,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 8980,
											"end": 9300,
											"name": "tag",
											"source": 12,
											"value": "127"
										},
										{
											"begin": 8980,
											"end": 9300,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9024,
											"end": 9030,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9061,
											"end": 9062,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 9055,
											"end": 9059,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9051,
											"end": 9063,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 9041,
											"end": 9063,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9041,
											"end": 9063,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9108,
											"end": 9109,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 9102,
											"end": 9106,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9098,
											"end": 9110,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 9129,
											"end": 9147,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9119,
											"end": 9200,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "468"
										},
										{
											"begin": 9119,
											"end": 9200,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9185,
											"end": 9189,
											"name": "PUSH",
											"source": 12,
											"value": "7F"
										},
										{
											"begin": 9177,
											"end": 9183,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9173,
											"end": 9190,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 9163,
											"end": 9190,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9163,
											"end": 9190,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9119,
											"end": 9200,
											"name": "tag",
											"source": 12,
											"value": "468"
										},
										{
											"begin": 9119,
											"end": 9200,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9247,
											"end": 9249,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9239,
											"end": 9245,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9236,
											"end": 9250,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 9216,
											"end": 9234,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9213,
											"end": 9251,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 9210,
											"end": 9294,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "469"
										},
										{
											"begin": 9210,
											"end": 9294,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9266,
											"end": 9284,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "470"
										},
										{
											"begin": 9266,
											"end": 9284,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "347"
										},
										{
											"begin": 9266,
											"end": 9284,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9266,
											"end": 9284,
											"name": "tag",
											"source": 12,
											"value": "470"
										},
										{
											"begin": 9266,
											"end": 9284,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9210,
											"end": 9294,
											"name": "tag",
											"source": 12,
											"value": "469"
										},
										{
											"begin": 9210,
											"end": 9294,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9031,
											"end": 9300,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8980,
											"end": 9300,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8980,
											"end": 9300,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8980,
											"end": 9300,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8980,
											"end": 9300,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9306,
											"end": 9471,
											"name": "tag",
											"source": 12,
											"value": "348"
										},
										{
											"begin": 9306,
											"end": 9471,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9446,
											"end": 9463,
											"name": "PUSH",
											"source": 12,
											"value": "496E76616C696420616464726573730000000000000000000000000000000000"
										},
										{
											"begin": 9442,
											"end": 9443,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9434,
											"end": 9440,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9430,
											"end": 9444,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9423,
											"end": 9464,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9306,
											"end": 9471,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9306,
											"end": 9471,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9477,
											"end": 9843,
											"name": "tag",
											"source": 12,
											"value": "349"
										},
										{
											"begin": 9477,
											"end": 9843,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9619,
											"end": 9622,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9640,
											"end": 9707,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "473"
										},
										{
											"begin": 9704,
											"end": 9706,
											"name": "PUSH",
											"source": 12,
											"value": "F"
										},
										{
											"begin": 9699,
											"end": 9702,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9640,
											"end": 9707,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "324"
										},
										{
											"begin": 9640,
											"end": 9707,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9640,
											"end": 9707,
											"name": "tag",
											"source": 12,
											"value": "473"
										},
										{
											"begin": 9640,
											"end": 9707,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9633,
											"end": 9707,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9633,
											"end": 9707,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9716,
											"end": 9809,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "474"
										},
										{
											"begin": 9805,
											"end": 9808,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9716,
											"end": 9809,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "348"
										},
										{
											"begin": 9716,
											"end": 9809,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9716,
											"end": 9809,
											"name": "tag",
											"source": 12,
											"value": "474"
										},
										{
											"begin": 9716,
											"end": 9809,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9834,
											"end": 9836,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9829,
											"end": 9832,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9825,
											"end": 9837,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9818,
											"end": 9837,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9818,
											"end": 9837,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9477,
											"end": 9843,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9477,
											"end": 9843,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9477,
											"end": 9843,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9477,
											"end": 9843,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9849,
											"end": 10268,
											"name": "tag",
											"source": 12,
											"value": "147"
										},
										{
											"begin": 9849,
											"end": 10268,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10015,
											"end": 10019,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10053,
											"end": 10055,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10042,
											"end": 10051,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10038,
											"end": 10056,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10030,
											"end": 10056,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10030,
											"end": 10056,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10102,
											"end": 10111,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10096,
											"end": 10100,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10092,
											"end": 10112,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 10088,
											"end": 10089,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10077,
											"end": 10086,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10073,
											"end": 10090,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10066,
											"end": 10113,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10130,
											"end": 10261,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "476"
										},
										{
											"begin": 10256,
											"end": 10260,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10130,
											"end": 10261,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "349"
										},
										{
											"begin": 10130,
											"end": 10261,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10130,
											"end": 10261,
											"name": "tag",
											"source": 12,
											"value": "476"
										},
										{
											"begin": 10130,
											"end": 10261,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10122,
											"end": 10261,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10122,
											"end": 10261,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9849,
											"end": 10268,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9849,
											"end": 10268,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9849,
											"end": 10268,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9849,
											"end": 10268,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10274,
											"end": 10444,
											"name": "tag",
											"source": 12,
											"value": "350"
										},
										{
											"begin": 10274,
											"end": 10444,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10414,
											"end": 10436,
											"name": "PUSH",
											"source": 12,
											"value": "496E73756666696369656E742062616C616E6365000000000000000000000000"
										},
										{
											"begin": 10410,
											"end": 10411,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10402,
											"end": 10408,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10398,
											"end": 10412,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10391,
											"end": 10437,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10274,
											"end": 10444,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10274,
											"end": 10444,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10450,
											"end": 10816,
											"name": "tag",
											"source": 12,
											"value": "351"
										},
										{
											"begin": 10450,
											"end": 10816,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10592,
											"end": 10595,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10613,
											"end": 10680,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "479"
										},
										{
											"begin": 10677,
											"end": 10679,
											"name": "PUSH",
											"source": 12,
											"value": "14"
										},
										{
											"begin": 10672,
											"end": 10675,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10613,
											"end": 10680,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "324"
										},
										{
											"begin": 10613,
											"end": 10680,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10613,
											"end": 10680,
											"name": "tag",
											"source": 12,
											"value": "479"
										},
										{
											"begin": 10613,
											"end": 10680,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10606,
											"end": 10680,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10606,
											"end": 10680,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10689,
											"end": 10782,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "480"
										},
										{
											"begin": 10778,
											"end": 10781,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10689,
											"end": 10782,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "350"
										},
										{
											"begin": 10689,
											"end": 10782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10689,
											"end": 10782,
											"name": "tag",
											"source": 12,
											"value": "480"
										},
										{
											"begin": 10689,
											"end": 10782,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10807,
											"end": 10809,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10802,
											"end": 10805,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10798,
											"end": 10810,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10791,
											"end": 10810,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10791,
											"end": 10810,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10450,
											"end": 10816,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10450,
											"end": 10816,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10450,
											"end": 10816,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10450,
											"end": 10816,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10822,
											"end": 11241,
											"name": "tag",
											"source": 12,
											"value": "151"
										},
										{
											"begin": 10822,
											"end": 11241,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10988,
											"end": 10992,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11026,
											"end": 11028,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 11015,
											"end": 11024,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11011,
											"end": 11029,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11003,
											"end": 11029,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11003,
											"end": 11029,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11075,
											"end": 11084,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11069,
											"end": 11073,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11065,
											"end": 11085,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 11061,
											"end": 11062,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11050,
											"end": 11059,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 11046,
											"end": 11063,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11039,
											"end": 11086,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11103,
											"end": 11234,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "482"
										},
										{
											"begin": 11229,
											"end": 11233,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11103,
											"end": 11234,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "351"
										},
										{
											"begin": 11103,
											"end": 11234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11103,
											"end": 11234,
											"name": "tag",
											"source": 12,
											"value": "482"
										},
										{
											"begin": 11103,
											"end": 11234,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11095,
											"end": 11234,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11095,
											"end": 11234,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10822,
											"end": 11241,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10822,
											"end": 11241,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10822,
											"end": 11241,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10822,
											"end": 11241,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11247,
											"end": 11414,
											"name": "tag",
											"source": 12,
											"value": "352"
										},
										{
											"begin": 11247,
											"end": 11414,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11387,
											"end": 11406,
											"name": "PUSH",
											"source": 12,
											"value": "496E76616C696420726563697069656E74000000000000000000000000000000"
										},
										{
											"begin": 11383,
											"end": 11384,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11375,
											"end": 11381,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11371,
											"end": 11385,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11364,
											"end": 11407,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11247,
											"end": 11414,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11247,
											"end": 11414,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11420,
											"end": 11786,
											"name": "tag",
											"source": 12,
											"value": "353"
										},
										{
											"begin": 11420,
											"end": 11786,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11562,
											"end": 11565,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11583,
											"end": 11650,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "485"
										},
										{
											"begin": 11647,
											"end": 11649,
											"name": "PUSH",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 11642,
											"end": 11645,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 11583,
											"end": 11650,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "324"
										},
										{
											"begin": 11583,
											"end": 11650,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11583,
											"end": 11650,
											"name": "tag",
											"source": 12,
											"value": "485"
										},
										{
											"begin": 11583,
											"end": 11650,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11576,
											"end": 11650,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11576,
											"end": 11650,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11659,
											"end": 11752,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "486"
										},
										{
											"begin": 11748,
											"end": 11751,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11659,
											"end": 11752,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "352"
										},
										{
											"begin": 11659,
											"end": 11752,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11659,
											"end": 11752,
											"name": "tag",
											"source": 12,
											"value": "486"
										},
										{
											"begin": 11659,
											"end": 11752,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11777,
											"end": 11779,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 11772,
											"end": 11775,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11768,
											"end": 11780,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11761,
											"end": 11780,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11761,
											"end": 11780,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11420,
											"end": 11786,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11420,
											"end": 11786,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11420,
											"end": 11786,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11420,
											"end": 11786,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11792,
											"end": 12211,
											"name": "tag",
											"source": 12,
											"value": "189"
										},
										{
											"begin": 11792,
											"end": 12211,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11958,
											"end": 11962,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11996,
											"end": 11998,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 11985,
											"end": 11994,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11981,
											"end": 11999,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11973,
											"end": 11999,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11973,
											"end": 11999,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12045,
											"end": 12054,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12039,
											"end": 12043,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12035,
											"end": 12055,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 12031,
											"end": 12032,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12020,
											"end": 12029,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12016,
											"end": 12033,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12009,
											"end": 12056,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12073,
											"end": 12204,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "488"
										},
										{
											"begin": 12199,
											"end": 12203,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12073,
											"end": 12204,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "353"
										},
										{
											"begin": 12073,
											"end": 12204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12073,
											"end": 12204,
											"name": "tag",
											"source": 12,
											"value": "488"
										},
										{
											"begin": 12073,
											"end": 12204,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12065,
											"end": 12204,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12065,
											"end": 12204,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11792,
											"end": 12211,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11792,
											"end": 12211,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11792,
											"end": 12211,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11792,
											"end": 12211,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12217,
											"end": 12385,
											"name": "tag",
											"source": 12,
											"value": "354"
										},
										{
											"begin": 12217,
											"end": 12385,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12357,
											"end": 12377,
											"name": "PUSH",
											"source": 12,
											"value": "416D6F756E74206D757374206265203E20300000000000000000000000000000"
										},
										{
											"begin": 12353,
											"end": 12354,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12345,
											"end": 12351,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12341,
											"end": 12355,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12334,
											"end": 12378,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12217,
											"end": 12385,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12217,
											"end": 12385,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12391,
											"end": 12757,
											"name": "tag",
											"source": 12,
											"value": "355"
										},
										{
											"begin": 12391,
											"end": 12757,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12533,
											"end": 12536,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12554,
											"end": 12621,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "491"
										},
										{
											"begin": 12618,
											"end": 12620,
											"name": "PUSH",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 12613,
											"end": 12616,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12554,
											"end": 12621,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "324"
										},
										{
											"begin": 12554,
											"end": 12621,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12554,
											"end": 12621,
											"name": "tag",
											"source": 12,
											"value": "491"
										},
										{
											"begin": 12554,
											"end": 12621,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12547,
											"end": 12621,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12547,
											"end": 12621,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12630,
											"end": 12723,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "492"
										},
										{
											"begin": 12719,
											"end": 12722,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12630,
											"end": 12723,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "354"
										},
										{
											"begin": 12630,
											"end": 12723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12630,
											"end": 12723,
											"name": "tag",
											"source": 12,
											"value": "492"
										},
										{
											"begin": 12630,
											"end": 12723,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12748,
											"end": 12750,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 12743,
											"end": 12746,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12739,
											"end": 12751,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12732,
											"end": 12751,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12732,
											"end": 12751,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12391,
											"end": 12757,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12391,
											"end": 12757,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12391,
											"end": 12757,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12391,
											"end": 12757,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12763,
											"end": 13182,
											"name": "tag",
											"source": 12,
											"value": "192"
										},
										{
											"begin": 12763,
											"end": 13182,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12929,
											"end": 12933,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12967,
											"end": 12969,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 12956,
											"end": 12965,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12952,
											"end": 12970,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12944,
											"end": 12970,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12944,
											"end": 12970,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13016,
											"end": 13025,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13010,
											"end": 13014,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13006,
											"end": 13026,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 13002,
											"end": 13003,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12991,
											"end": 13000,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12987,
											"end": 13004,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12980,
											"end": 13027,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13044,
											"end": 13175,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "494"
										},
										{
											"begin": 13170,
											"end": 13174,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13044,
											"end": 13175,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "355"
										},
										{
											"begin": 13044,
											"end": 13175,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13044,
											"end": 13175,
											"name": "tag",
											"source": 12,
											"value": "494"
										},
										{
											"begin": 13044,
											"end": 13175,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13036,
											"end": 13175,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13036,
											"end": 13175,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12763,
											"end": 13182,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12763,
											"end": 13182,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12763,
											"end": 13182,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12763,
											"end": 13182,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13188,
											"end": 13331,
											"name": "tag",
											"source": 12,
											"value": "356"
										},
										{
											"begin": 13188,
											"end": 13331,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13245,
											"end": 13250,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13276,
											"end": 13282,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13270,
											"end": 13283,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 13261,
											"end": 13283,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13261,
											"end": 13283,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13292,
											"end": 13325,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "496"
										},
										{
											"begin": 13319,
											"end": 13324,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13292,
											"end": 13325,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "333"
										},
										{
											"begin": 13292,
											"end": 13325,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13292,
											"end": 13325,
											"name": "tag",
											"source": 12,
											"value": "496"
										},
										{
											"begin": 13292,
											"end": 13325,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13188,
											"end": 13331,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 13188,
											"end": 13331,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13188,
											"end": 13331,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13188,
											"end": 13331,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13188,
											"end": 13331,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13337,
											"end": 13688,
											"name": "tag",
											"source": 12,
											"value": "196"
										},
										{
											"begin": 13337,
											"end": 13688,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13407,
											"end": 13413,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13456,
											"end": 13458,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 13444,
											"end": 13453,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13435,
											"end": 13442,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 13431,
											"end": 13454,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 13427,
											"end": 13459,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 13424,
											"end": 13543,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 13424,
											"end": 13543,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "498"
										},
										{
											"begin": 13424,
											"end": 13543,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 13462,
											"end": 13541,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "499"
										},
										{
											"begin": 13462,
											"end": 13541,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "316"
										},
										{
											"begin": 13462,
											"end": 13541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13462,
											"end": 13541,
											"name": "tag",
											"source": 12,
											"value": "499"
										},
										{
											"begin": 13462,
											"end": 13541,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13424,
											"end": 13543,
											"name": "tag",
											"source": 12,
											"value": "498"
										},
										{
											"begin": 13424,
											"end": 13543,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13582,
											"end": 13583,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13607,
											"end": 13671,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "500"
										},
										{
											"begin": 13663,
											"end": 13670,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 13654,
											"end": 13660,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13643,
											"end": 13652,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 13639,
											"end": 13661,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13607,
											"end": 13671,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "356"
										},
										{
											"begin": 13607,
											"end": 13671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13607,
											"end": 13671,
											"name": "tag",
											"source": 12,
											"value": "500"
										},
										{
											"begin": 13607,
											"end": 13671,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13597,
											"end": 13671,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13597,
											"end": 13671,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13553,
											"end": 13681,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13337,
											"end": 13688,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 13337,
											"end": 13688,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13337,
											"end": 13688,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13337,
											"end": 13688,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13337,
											"end": 13688,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13694,
											"end": 13859,
											"name": "tag",
											"source": 12,
											"value": "357"
										},
										{
											"begin": 13694,
											"end": 13859,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13834,
											"end": 13851,
											"name": "PUSH",
											"source": 12,
											"value": "4E6F7420656E6F75676820676F6C640000000000000000000000000000000000"
										},
										{
											"begin": 13830,
											"end": 13831,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13822,
											"end": 13828,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13818,
											"end": 13832,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13811,
											"end": 13852,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13694,
											"end": 13859,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13694,
											"end": 13859,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13865,
											"end": 14231,
											"name": "tag",
											"source": 12,
											"value": "358"
										},
										{
											"begin": 13865,
											"end": 14231,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14007,
											"end": 14010,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14028,
											"end": 14095,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "503"
										},
										{
											"begin": 14092,
											"end": 14094,
											"name": "PUSH",
											"source": 12,
											"value": "F"
										},
										{
											"begin": 14087,
											"end": 14090,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 14028,
											"end": 14095,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "324"
										},
										{
											"begin": 14028,
											"end": 14095,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14028,
											"end": 14095,
											"name": "tag",
											"source": 12,
											"value": "503"
										},
										{
											"begin": 14028,
											"end": 14095,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14021,
											"end": 14095,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14021,
											"end": 14095,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14104,
											"end": 14197,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "504"
										},
										{
											"begin": 14193,
											"end": 14196,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14104,
											"end": 14197,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "357"
										},
										{
											"begin": 14104,
											"end": 14197,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14104,
											"end": 14197,
											"name": "tag",
											"source": 12,
											"value": "504"
										},
										{
											"begin": 14104,
											"end": 14197,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14222,
											"end": 14224,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 14217,
											"end": 14220,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14213,
											"end": 14225,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14206,
											"end": 14225,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14206,
											"end": 14225,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13865,
											"end": 14231,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13865,
											"end": 14231,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13865,
											"end": 14231,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13865,
											"end": 14231,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14237,
											"end": 14656,
											"name": "tag",
											"source": 12,
											"value": "199"
										},
										{
											"begin": 14237,
											"end": 14656,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14403,
											"end": 14407,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14441,
											"end": 14443,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 14430,
											"end": 14439,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14426,
											"end": 14444,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14418,
											"end": 14444,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14418,
											"end": 14444,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14490,
											"end": 14499,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14484,
											"end": 14488,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14480,
											"end": 14500,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 14476,
											"end": 14477,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14465,
											"end": 14474,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 14461,
											"end": 14478,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14454,
											"end": 14501,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 14518,
											"end": 14649,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "506"
										},
										{
											"begin": 14644,
											"end": 14648,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14518,
											"end": 14649,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "358"
										},
										{
											"begin": 14518,
											"end": 14649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14518,
											"end": 14649,
											"name": "tag",
											"source": 12,
											"value": "506"
										},
										{
											"begin": 14518,
											"end": 14649,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14510,
											"end": 14649,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14510,
											"end": 14649,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14237,
											"end": 14656,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14237,
											"end": 14656,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14237,
											"end": 14656,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14237,
											"end": 14656,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14662,
											"end": 14780,
											"name": "tag",
											"source": 12,
											"value": "359"
										},
										{
											"begin": 14662,
											"end": 14780,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14749,
											"end": 14773,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "508"
										},
										{
											"begin": 14767,
											"end": 14772,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14749,
											"end": 14773,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "329"
										},
										{
											"begin": 14749,
											"end": 14773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14749,
											"end": 14773,
											"name": "tag",
											"source": 12,
											"value": "508"
										},
										{
											"begin": 14749,
											"end": 14773,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14744,
											"end": 14747,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14737,
											"end": 14774,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 14662,
											"end": 14780,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14662,
											"end": 14780,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14662,
											"end": 14780,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14786,
											"end": 15008,
											"name": "tag",
											"source": 12,
											"value": "244"
										},
										{
											"begin": 14786,
											"end": 15008,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14879,
											"end": 14883,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14917,
											"end": 14919,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 14906,
											"end": 14915,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14902,
											"end": 14920,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14894,
											"end": 14920,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14894,
											"end": 14920,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14930,
											"end": 15001,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "510"
										},
										{
											"begin": 14998,
											"end": 14999,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14987,
											"end": 14996,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 14983,
											"end": 15000,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14974,
											"end": 14980,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 14930,
											"end": 15001,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "359"
										},
										{
											"begin": 14930,
											"end": 15001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14930,
											"end": 15001,
											"name": "tag",
											"source": 12,
											"value": "510"
										},
										{
											"begin": 14930,
											"end": 15001,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14786,
											"end": 15008,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 14786,
											"end": 15008,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14786,
											"end": 15008,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14786,
											"end": 15008,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14786,
											"end": 15008,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15014,
											"end": 15456,
											"name": "tag",
											"source": 12,
											"value": "252"
										},
										{
											"begin": 15014,
											"end": 15456,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15163,
											"end": 15167,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15201,
											"end": 15203,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 15190,
											"end": 15199,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15186,
											"end": 15204,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15178,
											"end": 15204,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15178,
											"end": 15204,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15214,
											"end": 15285,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "512"
										},
										{
											"begin": 15282,
											"end": 15283,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15271,
											"end": 15280,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 15267,
											"end": 15284,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15258,
											"end": 15264,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 15214,
											"end": 15285,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "359"
										},
										{
											"begin": 15214,
											"end": 15285,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15214,
											"end": 15285,
											"name": "tag",
											"source": 12,
											"value": "512"
										},
										{
											"begin": 15214,
											"end": 15285,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15295,
											"end": 15367,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "513"
										},
										{
											"begin": 15363,
											"end": 15365,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 15352,
											"end": 15361,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 15348,
											"end": 15366,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15339,
											"end": 15345,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 15295,
											"end": 15367,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "335"
										},
										{
											"begin": 15295,
											"end": 15367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15295,
											"end": 15367,
											"name": "tag",
											"source": 12,
											"value": "513"
										},
										{
											"begin": 15295,
											"end": 15367,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15377,
											"end": 15449,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "514"
										},
										{
											"begin": 15445,
											"end": 15447,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 15434,
											"end": 15443,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 15430,
											"end": 15448,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15421,
											"end": 15427,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 15377,
											"end": 15449,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "335"
										},
										{
											"begin": 15377,
											"end": 15449,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15377,
											"end": 15449,
											"name": "tag",
											"source": 12,
											"value": "514"
										},
										{
											"begin": 15377,
											"end": 15449,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15014,
											"end": 15456,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 15014,
											"end": 15456,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 15014,
											"end": 15456,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15014,
											"end": 15456,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15014,
											"end": 15456,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15014,
											"end": 15456,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15014,
											"end": 15456,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15462,
											"end": 15794,
											"name": "tag",
											"source": 12,
											"value": "296"
										},
										{
											"begin": 15462,
											"end": 15794,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15583,
											"end": 15587,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15621,
											"end": 15623,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 15610,
											"end": 15619,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15606,
											"end": 15624,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15598,
											"end": 15624,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15598,
											"end": 15624,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15634,
											"end": 15705,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "516"
										},
										{
											"begin": 15702,
											"end": 15703,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15691,
											"end": 15700,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 15687,
											"end": 15704,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15678,
											"end": 15684,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 15634,
											"end": 15705,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "359"
										},
										{
											"begin": 15634,
											"end": 15705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15634,
											"end": 15705,
											"name": "tag",
											"source": 12,
											"value": "516"
										},
										{
											"begin": 15634,
											"end": 15705,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15715,
											"end": 15787,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "517"
										},
										{
											"begin": 15783,
											"end": 15785,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 15772,
											"end": 15781,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 15768,
											"end": 15786,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15759,
											"end": 15765,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 15715,
											"end": 15787,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "339"
										},
										{
											"begin": 15715,
											"end": 15787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15715,
											"end": 15787,
											"name": "tag",
											"source": 12,
											"value": "517"
										},
										{
											"begin": 15715,
											"end": 15787,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15462,
											"end": 15794,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 15462,
											"end": 15794,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 15462,
											"end": 15794,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15462,
											"end": 15794,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15462,
											"end": 15794,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15462,
											"end": 15794,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15800,
											"end": 15980,
											"name": "tag",
											"source": 12,
											"value": "360"
										},
										{
											"begin": 15800,
											"end": 15980,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15848,
											"end": 15925,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15845,
											"end": 15846,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15838,
											"end": 15926,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 15945,
											"end": 15949,
											"name": "PUSH",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 15942,
											"end": 15943,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 15935,
											"end": 15950,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 15969,
											"end": 15973,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 15966,
											"end": 15967,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15959,
											"end": 15974,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 15986,
											"end": 16177,
											"name": "tag",
											"source": 12,
											"value": "308"
										},
										{
											"begin": 15986,
											"end": 16177,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16026,
											"end": 16029,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16045,
											"end": 16065,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "520"
										},
										{
											"begin": 16063,
											"end": 16064,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16045,
											"end": 16065,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "332"
										},
										{
											"begin": 16045,
											"end": 16065,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16045,
											"end": 16065,
											"name": "tag",
											"source": 12,
											"value": "520"
										},
										{
											"begin": 16045,
											"end": 16065,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16040,
											"end": 16065,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 16040,
											"end": 16065,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16079,
											"end": 16099,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "521"
										},
										{
											"begin": 16097,
											"end": 16098,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 16079,
											"end": 16099,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "332"
										},
										{
											"begin": 16079,
											"end": 16099,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16079,
											"end": 16099,
											"name": "tag",
											"source": 12,
											"value": "521"
										},
										{
											"begin": 16079,
											"end": 16099,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16074,
											"end": 16099,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 16074,
											"end": 16099,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16122,
											"end": 16123,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16119,
											"end": 16120,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16115,
											"end": 16124,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16108,
											"end": 16124,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16108,
											"end": 16124,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16143,
											"end": 16146,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 16140,
											"end": 16141,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16137,
											"end": 16147,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 16134,
											"end": 16170,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 16134,
											"end": 16170,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "522"
										},
										{
											"begin": 16134,
											"end": 16170,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 16150,
											"end": 16168,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "523"
										},
										{
											"begin": 16150,
											"end": 16168,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "360"
										},
										{
											"begin": 16150,
											"end": 16168,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16150,
											"end": 16168,
											"name": "tag",
											"source": 12,
											"value": "523"
										},
										{
											"begin": 16150,
											"end": 16168,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16134,
											"end": 16170,
											"name": "tag",
											"source": 12,
											"value": "522"
										},
										{
											"begin": 16134,
											"end": 16170,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15986,
											"end": 16177,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 15986,
											"end": 16177,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 15986,
											"end": 16177,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15986,
											"end": 16177,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15986,
											"end": 16177,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Pausable.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"GoldToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"MINTER_ROLE()": "d5391393",
							"PAUSER_ROLE()": "e63ab1e9",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burnFromVault(address,uint256)": "1c83ba4a",
							"decimals()": "313ce567",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"pause()": "8456cb59",
							"paused()": "5c975abb",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"unpause()": "3f4ba83a",
							"vault()": "fbfa77cf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"vaultManagerAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PAUSER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFromVault\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vault\",\"outputs\":[{\"internalType\":\"contract IVaultManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Gunakan bersama VaultManager untuk kontrol cadangan\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burnFromVault(address,uint256)\":{\"details\":\"Digunakan oleh RedeemManager (yang diberi MINTER_ROLE)\"},\"constructor\":{\"details\":\"Konstruktor, hanya dipanggil saat deploy\",\"params\":{\"admin\":\"alamat admin utama\",\"vaultManagerAddress\":\"alamat kontrak VaultManager\"}},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"mint(address,uint256)\":{\"details\":\"Hanya SwapRouter atau role yang diizinkan yang bisa mint\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"title\":\"Aurix Gold Token (GOLD)\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"burnFromVault(address,uint256)\":{\"notice\":\"Burn token dari user saat redeem emas\"},\"mint(address,uint256)\":{\"notice\":\"Mint token sesuai jumlah emas yang tersedia\"},\"pause()\":{\"notice\":\"Pause seluruh aktivitas token (mint, burn, transfer)\"},\"unpause()\":{\"notice\":\"Unpause aktivitas\"}},\"notice\":\"ERC20 token yang 100% dijamin emas fisik\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"GoldToken.sol\":\"GoldToken\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xc1bebdee8943bd5e9ef1e0f2e63296aa1dd4171a66b9e74d0286220e891e1458\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://928cf2f0042c606f3dcb21bd8a272573f462a215cd65285d2d6b407f31e9bd67\",\"dweb:/ipfs/QmWGxjckno6sfjHPX5naPnsfsyisgy4PJDf46eLw9umfpx\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x4d9a2b261b56a1e4a37bb038151dec98b952fed16de2bdfdda27e38e2b12b530\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f724110f7aeb6151af800ab8c12e6060b29bda9e013f0ccb331eb754d6a7cbf0\",\"dweb:/ipfs/QmUcjzCZpxtUPdEThtAzE1f9LvuJiUGZxTdH9N6bHrb5Cf\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":{\"keccak256\":\"0x756aee61d83960d324973de3a64920a02b480efe662b611fb05ea506d844aa55\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4dfb71ab2f5fcc530226a25bba4d808f4d22a7f383cae4a3be3629ec057b276c\",\"dweb:/ipfs/QmRzyetUjbr9Gx1pcXYSsE5rz4XypfEbZgmBvZKUNUJQLR\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xdb484371dfbb848cb6f5d70464e9ac9b2900e4164ead76bbce4fef0b44bcc68f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9d6f6f6600a2bec622f699081b58350873b5e63ce05464d17d674a290bb8a7c\",\"dweb:/ipfs/QmQKVzSQY1PM3Bid4QhgVVZyx6B4Jx7XgaQzLKHj38vJz8\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"GoldToken.sol\":{\"keccak256\":\"0x5e87a7d109ca9c5fb99542b9a47d9928394a28934529440f3a4344a056d3c573\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6975ec8ba3e600ae717064114865b72bc8e0b8b5277e6acad81e1df89b6cb3dd\",\"dweb:/ipfs/QmbwPiwE2gVBPXQ7H6ENxKGhXGa5JjjKJdigbX2eqgeCmk\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 538,
								"contract": "GoldToken.sol:GoldToken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 544,
								"contract": "GoldToken.sol:GoldToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 546,
								"contract": "GoldToken.sol:GoldToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 548,
								"contract": "GoldToken.sol:GoldToken",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 550,
								"contract": "GoldToken.sol:GoldToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 1207,
								"contract": "GoldToken.sol:GoldToken",
								"label": "_paused",
								"offset": 0,
								"slot": "5",
								"type": "t_bool"
							},
							{
								"astId": 26,
								"contract": "GoldToken.sol:GoldToken",
								"label": "_roles",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)"
							},
							{
								"astId": 1386,
								"contract": "GoldToken.sol:GoldToken",
								"label": "vault",
								"offset": 0,
								"slot": "7",
								"type": "t_contract(IVaultManager)1368"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_contract(IVaultManager)1368": {
								"encoding": "inplace",
								"label": "contract IVaultManager",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)21_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(RoleData)21_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 18,
										"contract": "GoldToken.sol:GoldToken",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 20,
										"contract": "GoldToken.sol:GoldToken",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"burnFromVault(address,uint256)": {
								"notice": "Burn token dari user saat redeem emas"
							},
							"mint(address,uint256)": {
								"notice": "Mint token sesuai jumlah emas yang tersedia"
							},
							"pause()": {
								"notice": "Pause seluruh aktivitas token (mint, burn, transfer)"
							},
							"unpause()": {
								"notice": "Unpause aktivitas"
							}
						},
						"notice": "ERC20 token yang 100% dijamin emas fisik",
						"version": 1
					}
				},
				"IVaultManager": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "addReserveUsed",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "availableGrams",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "reduceReserveUsed",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "reserveUsed",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface kontrak untuk mengecek dan mengatur cadangan emas fisik",
						"kind": "dev",
						"methods": {},
						"title": "VaultManager Interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"addReserveUsed(uint256)": "3dd0104e",
							"availableGrams()": "ff9b1b11",
							"reduceReserveUsed(uint256)": "ecad4f68",
							"reserveUsed()": "c112a08f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"addReserveUsed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"availableGrams\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"reduceReserveUsed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reserveUsed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface kontrak untuk mengecek dan mengatur cadangan emas fisik\",\"kind\":\"dev\",\"methods\":{},\"title\":\"VaultManager Interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"GoldToken.sol\":\"IVaultManager\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xc1bebdee8943bd5e9ef1e0f2e63296aa1dd4171a66b9e74d0286220e891e1458\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://928cf2f0042c606f3dcb21bd8a272573f462a215cd65285d2d6b407f31e9bd67\",\"dweb:/ipfs/QmWGxjckno6sfjHPX5naPnsfsyisgy4PJDf46eLw9umfpx\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x4d9a2b261b56a1e4a37bb038151dec98b952fed16de2bdfdda27e38e2b12b530\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f724110f7aeb6151af800ab8c12e6060b29bda9e013f0ccb331eb754d6a7cbf0\",\"dweb:/ipfs/QmUcjzCZpxtUPdEThtAzE1f9LvuJiUGZxTdH9N6bHrb5Cf\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":{\"keccak256\":\"0x756aee61d83960d324973de3a64920a02b480efe662b611fb05ea506d844aa55\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4dfb71ab2f5fcc530226a25bba4d808f4d22a7f383cae4a3be3629ec057b276c\",\"dweb:/ipfs/QmRzyetUjbr9Gx1pcXYSsE5rz4XypfEbZgmBvZKUNUJQLR\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xdb484371dfbb848cb6f5d70464e9ac9b2900e4164ead76bbce4fef0b44bcc68f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9d6f6f6600a2bec622f699081b58350873b5e63ce05464d17d674a290bb8a7c\",\"dweb:/ipfs/QmQKVzSQY1PM3Bid4QhgVVZyx6B4Jx7XgaQzLKHj38vJz8\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"GoldToken.sol\":{\"keccak256\":\"0x5e87a7d109ca9c5fb99542b9a47d9928394a28934529440f3a4344a056d3c573\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6975ec8ba3e600ae717064114865b72bc8e0b8b5277e6acad81e1df89b6cb3dd\",\"dweb:/ipfs/QmbwPiwE2gVBPXQ7H6ENxKGhXGa5JjjKJdigbX2eqgeCmk\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
					"exportedSymbols": {
						"AccessControl": [
							295
						],
						"Context": [
							1198
						],
						"ERC165": [
							1330
						],
						"IAccessControl": [
							378
						]
					},
					"id": 296,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
							"file": "./IAccessControl.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 379,
							"src": "134:52:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "IAccessControl",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 378,
										"src": "142:14:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 1199,
							"src": "187:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1198,
										"src": "195:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../utils/introspection/ERC165.sol",
							"id": 7,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 1331,
							"src": "233:57:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 6,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1330,
										"src": "241:6:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 9,
										"name": "Context",
										"nameLocations": [
											"1988:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1198,
										"src": "1988:7:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "1988:7:0"
								},
								{
									"baseName": {
										"id": 11,
										"name": "IAccessControl",
										"nameLocations": [
											"1997:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 378,
										"src": "1997:14:0"
									},
									"id": 12,
									"nodeType": "InheritanceSpecifier",
									"src": "1997:14:0"
								},
								{
									"baseName": {
										"id": 13,
										"name": "ERC165",
										"nameLocations": [
											"2013:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1330,
										"src": "2013:6:0"
									},
									"id": 14,
									"nodeType": "InheritanceSpecifier",
									"src": "2013:6:0"
								}
							],
							"canonicalName": "AccessControl",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 8,
								"nodeType": "StructuredDocumentation",
								"src": "292:1660:0",
								"text": " @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."
							},
							"fullyImplemented": true,
							"id": 295,
							"linearizedBaseContracts": [
								295,
								1330,
								1342,
								378,
								1198
							],
							"name": "AccessControl",
							"nameLocation": "1971:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "AccessControl.RoleData",
									"id": 21,
									"members": [
										{
											"constant": false,
											"id": 18,
											"mutability": "mutable",
											"name": "hasRole",
											"nameLocation": "2085:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 21,
											"src": "2052:40:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 17,
												"keyName": "account",
												"keyNameLocation": "2068:7:0",
												"keyType": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2060:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "2052:32:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 16,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2079:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 20,
											"mutability": "mutable",
											"name": "adminRole",
											"nameLocation": "2110:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 21,
											"src": "2102:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 19,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "2102:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RoleData",
									"nameLocation": "2033:8:0",
									"nodeType": "StructDefinition",
									"scope": 295,
									"src": "2026:100:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 26,
									"mutability": "mutable",
									"name": "_roles",
									"nameLocation": "2174:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 295,
									"src": "2132:48:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
										"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
									},
									"typeName": {
										"id": 25,
										"keyName": "role",
										"keyNameLocation": "2148:4:0",
										"keyType": {
											"id": 22,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "2140:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "2132:33:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
											"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 24,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 23,
												"name": "RoleData",
												"nameLocations": [
													"2156:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 21,
												"src": "2156:8:0"
											},
											"referencedDeclaration": 21,
											"src": "2156:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RoleData_$21_storage_ptr",
												"typeString": "struct AccessControl.RoleData"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "a217fddf",
									"id": 29,
									"mutability": "constant",
									"name": "DEFAULT_ADMIN_ROLE",
									"nameLocation": "2211:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 295,
									"src": "2187:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 27,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2187:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "30783030",
										"id": 28,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2232:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "2454:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 35,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 32,
															"src": "2475:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 34,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															93,
															114
														],
														"referencedDeclaration": 93,
														"src": "2464:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32) view"
														}
													},
													"id": 36,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2464:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 37,
												"nodeType": "ExpressionStatement",
												"src": "2464:16:0"
											},
											{
												"id": 38,
												"nodeType": "PlaceholderStatement",
												"src": "2490:1:0"
											}
										]
									},
									"documentation": {
										"id": 30,
										"nodeType": "StructuredDocumentation",
										"src": "2243:174:0",
										"text": " @dev Modifier that checks that an account has a specific role. Reverts\n with an {AccessControlUnauthorizedAccount} error including the required role."
									},
									"id": 40,
									"name": "onlyRole",
									"nameLocation": "2431:8:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2448:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "2440:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 31,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:14:0"
									},
									"src": "2422:76:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1329
									],
									"body": {
										"id": 61,
										"nodeType": "Block",
										"src": "2656:111:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 59,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 54,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 49,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 43,
															"src": "2673:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 51,
																		"name": "IAccessControl",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 378,
																		"src": "2693:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$378_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$378_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	],
																	"id": 50,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2688:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 52,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2688:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IAccessControl_$378",
																	"typeString": "type(contract IAccessControl)"
																}
															},
															"id": 53,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "2709:11:0",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "2688:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "2673:47:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 57,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 43,
																"src": "2748:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 55,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "2724:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_AccessControl_$295_$",
																	"typeString": "type(contract super AccessControl)"
																}
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2730:17:0",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1329,
															"src": "2724:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 58,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2724:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2673:87:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 48,
												"id": 60,
												"nodeType": "Return",
												"src": "2666:94:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "2504:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 62,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "2574:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 45,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2632:8:0"
									},
									"parameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "2599:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "2592:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 42,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2592:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2591:20:0"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "2650:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 46,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2650:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2649:6:0"
									},
									"scope": 295,
									"src": "2565:202:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										345
									],
									"body": {
										"id": 79,
										"nodeType": "Block",
										"src": "2937:53:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"baseExpression": {
																"id": 72,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "2954:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 74,
															"indexExpression": {
																"id": 73,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "2961:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2954:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$21_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 75,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2967:7:0",
														"memberName": "hasRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 18,
														"src": "2954:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 77,
													"indexExpression": {
														"id": 76,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 67,
														"src": "2975:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2954:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 71,
												"id": 78,
												"nodeType": "Return",
												"src": "2947:36:0"
											}
										]
									},
									"documentation": {
										"id": 63,
										"nodeType": "StructuredDocumentation",
										"src": "2773:76:0",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 80,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "2863:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2879:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2871:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 64,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2871:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2893:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2885:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2885:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2870:31:0"
									},
									"returnParameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2931:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 69,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2931:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2930:6:0"
									},
									"scope": 295,
									"src": "2854:136:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 92,
										"nodeType": "Block",
										"src": "3255:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 83,
															"src": "3276:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 88,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1180,
																"src": "3282:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 89,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3282:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															93,
															114
														],
														"referencedDeclaration": 114,
														"src": "3265:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address) view"
														}
													},
													"id": 90,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3265:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 91,
												"nodeType": "ExpressionStatement",
												"src": "3265:30:0"
											}
										]
									},
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "2996:198:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier."
									},
									"id": 93,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3208:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3227:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "3219:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 82,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3219:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3218:14:0"
									},
									"returnParameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3255:0:0"
									},
									"scope": 295,
									"src": "3199:103:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 113,
										"nodeType": "Block",
										"src": "3505:124:0",
										"statements": [
											{
												"condition": {
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3519:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 102,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 96,
																"src": "3528:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 103,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 98,
																"src": "3534:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 101,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 80,
															"src": "3520:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 104,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3520:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 112,
												"nodeType": "IfStatement",
												"src": "3515:108:0",
												"trueBody": {
													"id": 111,
													"nodeType": "Block",
													"src": "3544:79:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 107,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 98,
																		"src": "3598:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 108,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 96,
																		"src": "3607:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 106,
																	"name": "AccessControlUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 305,
																	"src": "3565:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_bytes32_$returns$_t_error_$",
																		"typeString": "function (address,bytes32) pure returns (error)"
																	}
																},
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3565:47:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 110,
															"nodeType": "RevertStatement",
															"src": "3558:54:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 94,
										"nodeType": "StructuredDocumentation",
										"src": "3308:119:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n is missing `role`."
									},
									"id": 114,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3441:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3460:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "3452:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 95,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3452:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 98,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3474:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "3466:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 97,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3466:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3451:31:0"
									},
									"returnParameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3505:0:0"
									},
									"scope": 295,
									"src": "3432:197:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										353
									],
									"body": {
										"id": 127,
										"nodeType": "Block",
										"src": "3884:46:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 122,
															"name": "_roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 26,
															"src": "3901:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
															}
														},
														"id": 124,
														"indexExpression": {
															"id": 123,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 117,
															"src": "3908:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3901:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoleData_$21_storage",
															"typeString": "struct AccessControl.RoleData storage ref"
														}
													},
													"id": 125,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3914:9:0",
													"memberName": "adminRole",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 20,
													"src": "3901:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 121,
												"id": 126,
												"nodeType": "Return",
												"src": "3894:29:0"
											}
										]
									},
									"documentation": {
										"id": 115,
										"nodeType": "StructuredDocumentation",
										"src": "3635:170:0",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 128,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "3819:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3840:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "3832:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 116,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3832:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3831:14:0"
									},
									"returnParameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "3875:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 119,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3875:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3874:9:0"
									},
									"scope": 295,
									"src": "3810:120:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										361
									],
									"body": {
										"id": 146,
										"nodeType": "Block",
										"src": "4320:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 142,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 131,
															"src": "4341:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 143,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "4347:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 141,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "4330:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4330:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 145,
												"nodeType": "ExpressionStatement",
												"src": "4330:25:0"
											}
										]
									},
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "3936:285:0",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."
									},
									"functionSelector": "2f2ff15d",
									"id": 147,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 137,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 131,
															"src": "4313:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 136,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "4300:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4300:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 139,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 135,
												"name": "onlyRole",
												"nameLocations": [
													"4291:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "4291:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4291:28:0"
										}
									],
									"name": "grantRole",
									"nameLocation": "4235:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4253:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "4245:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 130,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4245:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4267:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "4259:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4259:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4244:31:0"
									},
									"returnParameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4320:0:0"
									},
									"scope": 295,
									"src": "4226:136:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										369
									],
									"body": {
										"id": 165,
										"nodeType": "Block",
										"src": "4737:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 161,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 150,
															"src": "4759:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 162,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 152,
															"src": "4765:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 160,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "4747:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4747:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 164,
												"nodeType": "ExpressionStatement",
												"src": "4747:26:0"
											}
										]
									},
									"documentation": {
										"id": 148,
										"nodeType": "StructuredDocumentation",
										"src": "4368:269:0",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "d547741f",
									"id": 166,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 156,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 150,
															"src": "4730:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 155,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "4717:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4717:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 158,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 154,
												"name": "onlyRole",
												"nameLocations": [
													"4708:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "4708:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4708:28:0"
										}
									],
									"name": "revokeRole",
									"nameLocation": "4651:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4670:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4662:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 149,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4662:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4684:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4676:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 151,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4676:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4661:31:0"
									},
									"returnParameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4737:0:0"
									},
									"scope": 295,
									"src": "4642:138:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										377
									],
									"body": {
										"id": 188,
										"nodeType": "Block",
										"src": "5407:166:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 174,
														"name": "callerConfirmation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "5421:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 175,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1180,
															"src": "5443:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 176,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5443:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5421:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 182,
												"nodeType": "IfStatement",
												"src": "5417:102:0",
												"trueBody": {
													"id": 181,
													"nodeType": "Block",
													"src": "5457:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 178,
																	"name": "AccessControlBadConfirmation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 308,
																	"src": "5478:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 179,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5478:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 180,
															"nodeType": "RevertStatement",
															"src": "5471:37:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 184,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 169,
															"src": "5541:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 185,
															"name": "callerConfirmation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 171,
															"src": "5547:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 183,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "5529:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5529:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 187,
												"nodeType": "ExpressionStatement",
												"src": "5529:37:0"
											}
										]
									},
									"documentation": {
										"id": 167,
										"nodeType": "StructuredDocumentation",
										"src": "4786:537:0",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "36568abe",
									"id": 189,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "5337:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5358:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "5350:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 168,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5350:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "5372:18:0",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "5364:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5364:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5349:42:0"
									},
									"returnParameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5407:0:0"
									},
									"scope": 295,
									"src": "5328:245:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 216,
										"nodeType": "Block",
										"src": "5771:174:0",
										"statements": [
											{
												"assignments": [
													198
												],
												"declarations": [
													{
														"constant": false,
														"id": 198,
														"mutability": "mutable",
														"name": "previousAdminRole",
														"nameLocation": "5789:17:0",
														"nodeType": "VariableDeclaration",
														"scope": 216,
														"src": "5781:25:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 197,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "5781:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 202,
												"initialValue": {
													"arguments": [
														{
															"id": 200,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "5822:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 199,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "5809:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5809:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5781:46:0"
											},
											{
												"expression": {
													"id": 208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 203,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "5837:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 205,
															"indexExpression": {
																"id": 204,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 192,
																"src": "5844:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5837:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$21_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 206,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5850:9:0",
														"memberName": "adminRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 20,
														"src": "5837:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 207,
														"name": "adminRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 194,
														"src": "5862:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "5837:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 209,
												"nodeType": "ExpressionStatement",
												"src": "5837:34:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 211,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "5903:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 212,
															"name": "previousAdminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 198,
															"src": "5909:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 213,
															"name": "adminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 194,
															"src": "5928:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 210,
														"name": "RoleAdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "5886:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32,bytes32)"
														}
													},
													"id": 214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5886:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 215,
												"nodeType": "EmitStatement",
												"src": "5881:57:0"
											}
										]
									},
									"documentation": {
										"id": 190,
										"nodeType": "StructuredDocumentation",
										"src": "5579:114:0",
										"text": " @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."
									},
									"id": 217,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setRoleAdmin",
									"nameLocation": "5707:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5729:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "5721:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 191,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5721:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "adminRole",
												"nameLocation": "5743:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "5735:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 193,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5735:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5720:33:0"
									},
									"returnParameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5771:0:0"
									},
									"scope": 295,
									"src": "5698:247:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 255,
										"nodeType": "Block",
										"src": "6262:233:0",
										"statements": [
											{
												"condition": {
													"id": 231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "6276:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 228,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 220,
																"src": "6285:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 229,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 222,
																"src": "6291:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 227,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 80,
															"src": "6277:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 230,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6277:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 253,
													"nodeType": "Block",
													"src": "6452:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 251,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6473:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 226,
															"id": 252,
															"nodeType": "Return",
															"src": "6466:12:0"
														}
													]
												},
												"id": 254,
												"nodeType": "IfStatement",
												"src": "6272:217:0",
												"trueBody": {
													"id": 250,
													"nodeType": "Block",
													"src": "6301:145:0",
													"statements": [
														{
															"expression": {
																"id": 239,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 232,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 26,
																				"src": "6315:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 234,
																			"indexExpression": {
																				"id": 233,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 220,
																				"src": "6322:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6315:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$21_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 235,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6328:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 18,
																		"src": "6315:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 237,
																	"indexExpression": {
																		"id": 236,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 222,
																		"src": "6336:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6315:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 238,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6347:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "6315:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 240,
															"nodeType": "ExpressionStatement",
															"src": "6315:36:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 242,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 220,
																		"src": "6382:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 243,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 222,
																		"src": "6388:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 244,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1180,
																			"src": "6397:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 245,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6397:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 241,
																	"name": "RoleGranted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 326,
																	"src": "6370:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 246,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6370:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 247,
															"nodeType": "EmitStatement",
															"src": "6365:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 248,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6431:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 226,
															"id": 249,
															"nodeType": "Return",
															"src": "6424:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 218,
										"nodeType": "StructuredDocumentation",
										"src": "5951:223:0",
										"text": " @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n Internal function without access restriction.\n May emit a {RoleGranted} event."
									},
									"id": 256,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_grantRole",
									"nameLocation": "6188:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6207:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6199:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 219,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6199:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6221:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6213:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6213:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6198:31:0"
									},
									"returnParameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6256:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 224,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6256:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6255:6:0"
									},
									"scope": 295,
									"src": "6179:316:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 293,
										"nodeType": "Block",
										"src": "6816:233:0",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 267,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 259,
															"src": "6838:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 268,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 261,
															"src": "6844:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 266,
														"name": "hasRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 80,
														"src": "6830:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) view returns (bool)"
														}
													},
													"id": 269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6830:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 291,
													"nodeType": "Block",
													"src": "7006:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 289,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7027:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 265,
															"id": 290,
															"nodeType": "Return",
															"src": "7020:12:0"
														}
													]
												},
												"id": 292,
												"nodeType": "IfStatement",
												"src": "6826:217:0",
												"trueBody": {
													"id": 288,
													"nodeType": "Block",
													"src": "6854:146:0",
													"statements": [
														{
															"expression": {
																"id": 277,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 270,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 26,
																				"src": "6868:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 272,
																			"indexExpression": {
																				"id": 271,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 259,
																				"src": "6875:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6868:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$21_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 273,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6881:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 18,
																		"src": "6868:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 275,
																	"indexExpression": {
																		"id": 274,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 261,
																		"src": "6889:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6868:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 276,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6900:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "6868:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 278,
															"nodeType": "ExpressionStatement",
															"src": "6868:37:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 280,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 259,
																		"src": "6936:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 281,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 261,
																		"src": "6942:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 282,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1180,
																			"src": "6951:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 283,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6951:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 279,
																	"name": "RoleRevoked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 335,
																	"src": "6924:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 284,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6924:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 285,
															"nodeType": "EmitStatement",
															"src": "6919:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 286,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6985:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 265,
															"id": 287,
															"nodeType": "Return",
															"src": "6978:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 257,
										"nodeType": "StructuredDocumentation",
										"src": "6501:226:0",
										"text": " @dev Attempts to revoke `role` from `account` and returns a boolean indicating if `role` was revoked.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."
									},
									"id": 294,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revokeRole",
									"nameLocation": "6741:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6761:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6753:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 258,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6753:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6775:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6767:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6767:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6752:31:0"
									},
									"returnParameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6810:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 263,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6810:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6809:6:0"
									},
									"scope": 295,
									"src": "6732:317:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 296,
							"src": "1953:5098:0",
							"usedErrors": [
								305,
								308
							],
							"usedEvents": [
								317,
								326,
								335
							]
						}
					],
					"src": "108:6944:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
					"exportedSymbols": {
						"IAccessControl": [
							378
						]
					},
					"id": 379,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 297,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IAccessControl",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 298,
								"nodeType": "StructuredDocumentation",
								"src": "135:90:1",
								"text": " @dev External interface of AccessControl declared to support ERC-165 detection."
							},
							"fullyImplemented": false,
							"id": 378,
							"linearizedBaseContracts": [
								378
							],
							"name": "IAccessControl",
							"nameLocation": "236:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 299,
										"nodeType": "StructuredDocumentation",
										"src": "257:56:1",
										"text": " @dev The `account` is missing a role."
									},
									"errorSelector": "e2517d3f",
									"id": 305,
									"name": "AccessControlUnauthorizedAccount",
									"nameLocation": "324:32:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "365:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "357:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 300,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "357:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "neededRole",
												"nameLocation": "382:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "374:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 302,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "374:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "356:37:1"
									},
									"src": "318:76:1"
								},
								{
									"documentation": {
										"id": 306,
										"nodeType": "StructuredDocumentation",
										"src": "400:148:1",
										"text": " @dev The caller of a function is not the expected one.\n NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
									},
									"errorSelector": "6697b232",
									"id": 308,
									"name": "AccessControlBadConfirmation",
									"nameLocation": "559:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "587:2:1"
									},
									"src": "553:37:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 309,
										"nodeType": "StructuredDocumentation",
										"src": "596:254:1",
										"text": " @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted to signal this."
									},
									"eventSelector": "bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff",
									"id": 317,
									"name": "RoleAdminChanged",
									"nameLocation": "861:16:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "894:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "878:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 310,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "878:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 313,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousAdminRole",
												"nameLocation": "916:17:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "900:33:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 312,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "900:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 315,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAdminRole",
												"nameLocation": "951:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "935:28:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 314,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "877:87:1"
									},
									"src": "855:110:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 318,
										"nodeType": "StructuredDocumentation",
										"src": "971:295:1",
										"text": " @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
									},
									"eventSelector": "2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
									"id": 326,
									"name": "RoleGranted",
									"nameLocation": "1277:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 320,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1305:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1289:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 319,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1289:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 322,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1327:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1311:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 321,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1311:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1352:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1336:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 323,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1336:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1288:71:1"
									},
									"src": "1271:89:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 327,
										"nodeType": "StructuredDocumentation",
										"src": "1366:275:1",
										"text": " @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
									},
									"eventSelector": "f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b",
									"id": 335,
									"name": "RoleRevoked",
									"nameLocation": "1652:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 329,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1680:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1664:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 328,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1664:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 331,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1702:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1686:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 330,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1686:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 333,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1727:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1711:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 332,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1711:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1663:71:1"
									},
									"src": "1646:89:1"
								},
								{
									"documentation": {
										"id": 336,
										"nodeType": "StructuredDocumentation",
										"src": "1741:76:1",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 345,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "1831:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1847:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1839:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 337,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1839:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1861:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1853:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 339,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1853:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1838:31:1"
									},
									"returnParameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1893:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 342,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1893:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1892:6:1"
									},
									"scope": 378,
									"src": "1822:77:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "1905:184:1",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 353,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "2103:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2124:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "2116:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 347,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2116:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2115:14:1"
									},
									"returnParameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "2153:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 350,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2153:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2152:9:1"
									},
									"scope": 378,
									"src": "2094:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 354,
										"nodeType": "StructuredDocumentation",
										"src": "2168:239:1",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 361,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "grantRole",
									"nameLocation": "2421:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 356,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2439:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "2431:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 355,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2431:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2453:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "2445:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 357,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2445:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:31:1"
									},
									"returnParameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2470:0:1"
									},
									"scope": 378,
									"src": "2412:59:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 362,
										"nodeType": "StructuredDocumentation",
										"src": "2477:223:1",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 369,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeRole",
									"nameLocation": "2714:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2733:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "2725:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 363,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2747:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "2739:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 365,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2739:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2724:31:1"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2764:0:1"
									},
									"scope": 378,
									"src": "2705:60:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 370,
										"nodeType": "StructuredDocumentation",
										"src": "2771:491:1",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`."
									},
									"functionSelector": "36568abe",
									"id": 377,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "3276:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3297:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "3289:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 371,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3289:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "3311:18:1",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "3303:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 373,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3303:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3288:42:1"
									},
									"returnParameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3339:0:1"
									},
									"scope": 378,
									"src": "3267:73:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 379,
							"src": "226:3116:1",
							"usedErrors": [
								305,
								308
							],
							"usedEvents": [
								317,
								326,
								335
							]
						}
					],
					"src": "109:3234:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							515
						],
						"IERC20Errors": [
							420
						],
						"IERC721Errors": [
							468
						]
					},
					"id": 516,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 380,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 381,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:2",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 420,
							"linearizedBaseContracts": [
								420
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:2",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 390,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "654:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "670:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 385,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "687:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:2"
									},
									"src": "623:80:2"
								},
								{
									"documentation": {
										"id": 391,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:2",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 395,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "891:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 392,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:2"
									},
									"src": "866:41:2"
								},
								{
									"documentation": {
										"id": 396,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:2",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 400,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "1104:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 397,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:2"
									},
									"src": "1077:45:2"
								},
								{
									"documentation": {
										"id": 401,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:2",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 409,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "1511:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 402,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "1528:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 404,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "1547:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 406,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:2"
									},
									"src": "1478:85:2"
								},
								{
									"documentation": {
										"id": 410,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:2",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 414,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 414,
												"src": "1775:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:2"
									},
									"src": "1748:45:2"
								},
								{
									"documentation": {
										"id": 415,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:2",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 419,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 419,
												"src": "2025:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 416,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:2"
									},
									"src": "1999:43:2"
								}
							],
							"scope": 516,
							"src": "280:1764:2",
							"usedErrors": [
								390,
								395,
								400,
								409,
								414,
								419
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 421,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:2",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 468,
							"linearizedBaseContracts": [
								468
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 422,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:2",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 426,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 424,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "2469:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 423,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:2"
									},
									"src": "2444:40:2"
								},
								{
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:2",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 431,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "2656:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 428,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:2"
									},
									"src": "2627:46:2"
								},
								{
									"documentation": {
										"id": 432,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:2",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 440,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 440,
												"src": "3000:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 433,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 436,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 440,
												"src": "3016:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 435,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 438,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 440,
												"src": "3033:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 437,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:2"
									},
									"src": "2973:75:2"
								},
								{
									"documentation": {
										"id": 441,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:2",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 445,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 443,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "3237:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 442,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:2"
									},
									"src": "3211:42:2"
								},
								{
									"documentation": {
										"id": 446,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:2",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 450,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "3451:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 447,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:2"
									},
									"src": "3423:46:2"
								},
								{
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:2",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 457,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "3760:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "3778:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 454,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:2"
									},
									"src": "3727:68:2"
								},
								{
									"documentation": {
										"id": 458,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:2",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 462,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 462,
												"src": "4008:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 459,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:2"
									},
									"src": "3980:46:2"
								},
								{
									"documentation": {
										"id": 463,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:2",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 467,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 465,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 467,
												"src": "4262:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 464,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:2"
									},
									"src": "4234:46:2"
								}
							],
							"scope": 516,
							"src": "2190:2092:2",
							"usedErrors": [
								426,
								431,
								440,
								445,
								450,
								457,
								462,
								467
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 469,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:2",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 515,
							"linearizedBaseContracts": [
								515
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 470,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:2",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 480,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 472,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "4860:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 471,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 474,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "4876:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 473,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 476,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "4893:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 475,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "4909:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 477,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:2"
									},
									"src": "4827:99:2"
								},
								{
									"documentation": {
										"id": 481,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:2",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 485,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 483,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "5116:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 482,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:2"
									},
									"src": "5089:43:2"
								},
								{
									"documentation": {
										"id": 486,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:2",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 490,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 488,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 490,
												"src": "5331:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 487,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:2"
									},
									"src": "5302:47:2"
								},
								{
									"documentation": {
										"id": 491,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:2",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 497,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 496,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 493,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "5651:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 492,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 495,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "5669:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 494,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:2"
									},
									"src": "5616:68:2"
								},
								{
									"documentation": {
										"id": 498,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:2",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 502,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 501,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 500,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 502,
												"src": "5898:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 499,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:2"
									},
									"src": "5869:47:2"
								},
								{
									"documentation": {
										"id": 503,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:2",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 507,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 506,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 505,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "6153:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 504,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:2"
									},
									"src": "6124:47:2"
								},
								{
									"documentation": {
										"id": 508,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:2",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 514,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 510,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 514,
												"src": "6494:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 509,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 512,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 514,
												"src": "6513:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 511,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:2"
									},
									"src": "6462:73:2"
								}
							],
							"scope": 516,
							"src": "4430:2107:2",
							"usedErrors": [
								480,
								485,
								490,
								497,
								502,
								507,
								514
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							1198
						],
						"ERC20": [
							1030
						],
						"IERC20": [
							1108
						],
						"IERC20Errors": [
							420
						],
						"IERC20Metadata": [
							1168
						]
					},
					"id": 1031,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 517,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 519,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1031,
							"sourceUnit": 1109,
							"src": "131:36:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 518,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1108,
										"src": "139:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 521,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1031,
							"sourceUnit": 1169,
							"src": "168:63:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 520,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1168,
										"src": "176:14:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 523,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1031,
							"sourceUnit": 1199,
							"src": "232:48:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 522,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1198,
										"src": "240:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 525,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1031,
							"sourceUnit": 516,
							"src": "281:65:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 524,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 420,
										"src": "289:12:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 527,
										"name": "Context",
										"nameLocations": [
											"1133:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1198,
										"src": "1133:7:3"
									},
									"id": 528,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:3"
								},
								{
									"baseName": {
										"id": 529,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1108,
										"src": "1142:6:3"
									},
									"id": 530,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:3"
								},
								{
									"baseName": {
										"id": 531,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1168,
										"src": "1150:14:3"
									},
									"id": 532,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:3"
								},
								{
									"baseName": {
										"id": 533,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 420,
										"src": "1166:12:3"
									},
									"id": 534,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:3"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 526,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:3",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 1030,
							"linearizedBaseContracts": [
								1030,
								420,
								1168,
								1108,
								1198
							],
							"name": "ERC20",
							"nameLocation": "1124:5:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 538,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:3",
									"nodeType": "VariableDeclaration",
									"scope": 1030,
									"src": "1185:53:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 537,
										"keyName": "account",
										"keyNameLocation": "1201:7:3",
										"keyType": {
											"id": 535,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 536,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 544,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:3",
									"nodeType": "VariableDeclaration",
									"scope": 1030,
									"src": "1245:83:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 543,
										"keyName": "account",
										"keyNameLocation": "1261:7:3",
										"keyType": {
											"id": 539,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 542,
											"keyName": "spender",
											"keyNameLocation": "1288:7:3",
											"keyType": {
												"id": 540,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:3",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 541,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 546,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:3",
									"nodeType": "VariableDeclaration",
									"scope": 1030,
									"src": "1335:28:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 545,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 548,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:3",
									"nodeType": "VariableDeclaration",
									"scope": 1030,
									"src": "1370:20:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 547,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 550,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 1030,
									"src": "1396:22:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 549,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 566,
										"nodeType": "Block",
										"src": "1638:57:3",
										"statements": [
											{
												"expression": {
													"id": 560,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 558,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 548,
														"src": "1648:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 559,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 553,
														"src": "1656:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1648:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 561,
												"nodeType": "ExpressionStatement",
												"src": "1648:13:3"
											},
											{
												"expression": {
													"id": 564,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 562,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 550,
														"src": "1671:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 563,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 555,
														"src": "1681:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1671:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 565,
												"nodeType": "ExpressionStatement",
												"src": "1671:17:3"
											}
										]
									},
									"documentation": {
										"id": 551,
										"nodeType": "StructuredDocumentation",
										"src": "1425:152:3",
										"text": " @dev Sets the values for {name} and {symbol}.\n Both values are immutable: they can only be set once during construction."
									},
									"id": 567,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 556,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 553,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1608:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "1594:19:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 552,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1594:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 555,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1629:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "1615:21:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 554,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1615:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1593:44:3"
									},
									"returnParameters": {
										"id": 557,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1638:0:3"
									},
									"scope": 1030,
									"src": "1582:113:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1155
									],
									"body": {
										"id": 575,
										"nodeType": "Block",
										"src": "1820:29:3",
										"statements": [
											{
												"expression": {
													"id": 573,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 548,
													"src": "1837:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 572,
												"id": 574,
												"nodeType": "Return",
												"src": "1830:12:3"
											}
										]
									},
									"documentation": {
										"id": 568,
										"nodeType": "StructuredDocumentation",
										"src": "1701:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 576,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1769:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 569,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1773:2:3"
									},
									"returnParameters": {
										"id": 572,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 571,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 576,
												"src": "1805:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 570,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1805:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1804:15:3"
									},
									"scope": 1030,
									"src": "1760:89:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1161
									],
									"body": {
										"id": 584,
										"nodeType": "Block",
										"src": "2024:31:3",
										"statements": [
											{
												"expression": {
													"id": 582,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 550,
													"src": "2041:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 581,
												"id": 583,
												"nodeType": "Return",
												"src": "2034:14:3"
											}
										]
									},
									"documentation": {
										"id": 577,
										"nodeType": "StructuredDocumentation",
										"src": "1855:102:3",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 585,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1971:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 578,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1977:2:3"
									},
									"returnParameters": {
										"id": 581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 585,
												"src": "2009:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 579,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2009:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2008:15:3"
									},
									"scope": 1030,
									"src": "1962:93:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1167
									],
									"body": {
										"id": 593,
										"nodeType": "Block",
										"src": "2744:26:3",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 591,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2761:2:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 590,
												"id": 592,
												"nodeType": "Return",
												"src": "2754:9:3"
											}
										]
									},
									"documentation": {
										"id": 586,
										"nodeType": "StructuredDocumentation",
										"src": "2061:622:3",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 594,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2697:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 587,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2705:2:3"
									},
									"returnParameters": {
										"id": 590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 589,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 594,
												"src": "2737:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 588,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2737:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2736:7:3"
									},
									"scope": 1030,
									"src": "2688:82:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1057
									],
									"body": {
										"id": 602,
										"nodeType": "Block",
										"src": "2891:36:3",
										"statements": [
											{
												"expression": {
													"id": 600,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 546,
													"src": "2908:12:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 599,
												"id": 601,
												"nodeType": "Return",
												"src": "2901:19:3"
											}
										]
									},
									"documentation": {
										"id": 595,
										"nodeType": "StructuredDocumentation",
										"src": "2776:49:3",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 603,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2839:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 596,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2850:2:3"
									},
									"returnParameters": {
										"id": 599,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 598,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 603,
												"src": "2882:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 597,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2882:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2881:9:3"
									},
									"scope": 1030,
									"src": "2830:97:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1065
									],
									"body": {
										"id": 615,
										"nodeType": "Block",
										"src": "3059:42:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 611,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 538,
														"src": "3076:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 613,
													"indexExpression": {
														"id": 612,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "3086:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3076:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 610,
												"id": 614,
												"nodeType": "Return",
												"src": "3069:25:3"
											}
										]
									},
									"documentation": {
										"id": 604,
										"nodeType": "StructuredDocumentation",
										"src": "2933:47:3",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 616,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2994:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 607,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 606,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3012:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 616,
												"src": "3004:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 605,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3004:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3003:17:3"
									},
									"returnParameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 616,
												"src": "3050:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3050:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3049:9:3"
									},
									"scope": 1030,
									"src": "2985:116:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1075
									],
									"body": {
										"id": 639,
										"nodeType": "Block",
										"src": "3371:103:3",
										"statements": [
											{
												"assignments": [
													627
												],
												"declarations": [
													{
														"constant": false,
														"id": 627,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3389:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 639,
														"src": "3381:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 626,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3381:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 630,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 628,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1180,
														"src": "3397:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 629,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3397:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3381:28:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 632,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 627,
															"src": "3429:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 633,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 619,
															"src": "3436:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 634,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 621,
															"src": "3440:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 631,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 760,
														"src": "3419:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 635,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3419:27:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 636,
												"nodeType": "ExpressionStatement",
												"src": "3419:27:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 637,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3463:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 625,
												"id": 638,
												"nodeType": "Return",
												"src": "3456:11:3"
											}
										]
									},
									"documentation": {
										"id": 617,
										"nodeType": "StructuredDocumentation",
										"src": "3107:184:3",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 640,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3305:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 622,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 619,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3322:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "3314:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 618,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3314:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 621,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3334:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "3326:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 620,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3326:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3313:27:3"
									},
									"returnParameters": {
										"id": 625,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 624,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "3365:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 623,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3365:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3364:6:3"
									},
									"scope": 1030,
									"src": "3296:178:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1085
									],
									"body": {
										"id": 656,
										"nodeType": "Block",
										"src": "3621:51:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 650,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 544,
															"src": "3638:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 652,
														"indexExpression": {
															"id": 651,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 643,
															"src": "3650:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3638:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 654,
													"indexExpression": {
														"id": 653,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 645,
														"src": "3657:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3638:27:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 649,
												"id": 655,
												"nodeType": "Return",
												"src": "3631:34:3"
											}
										]
									},
									"documentation": {
										"id": 641,
										"nodeType": "StructuredDocumentation",
										"src": "3480:47:3",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 657,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3541:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 643,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3559:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "3551:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 642,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3551:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 645,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3574:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "3566:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 644,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3566:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3550:32:3"
									},
									"returnParameters": {
										"id": 649,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 648,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "3612:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 647,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3612:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3611:9:3"
									},
									"scope": 1030,
									"src": "3532:140:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1095
									],
									"body": {
										"id": 680,
										"nodeType": "Block",
										"src": "4058:107:3",
										"statements": [
											{
												"assignments": [
													668
												],
												"declarations": [
													{
														"constant": false,
														"id": 668,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4076:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 680,
														"src": "4068:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 667,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4068:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 671,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 669,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1180,
														"src": "4084:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 670,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4084:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4068:28:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 673,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 668,
															"src": "4115:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 674,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 660,
															"src": "4122:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 675,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 662,
															"src": "4131:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 672,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															921,
															981
														],
														"referencedDeclaration": 921,
														"src": "4106:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 676,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4106:31:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 677,
												"nodeType": "ExpressionStatement",
												"src": "4106:31:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 678,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4154:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 666,
												"id": 679,
												"nodeType": "Return",
												"src": "4147:11:3"
											}
										]
									},
									"documentation": {
										"id": 658,
										"nodeType": "StructuredDocumentation",
										"src": "3678:296:3",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 681,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3988:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 663,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 660,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4004:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 681,
												"src": "3996:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 659,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3996:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 662,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4021:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 681,
												"src": "4013:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 661,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4013:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3995:32:3"
									},
									"returnParameters": {
										"id": 666,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 665,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 681,
												"src": "4052:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 664,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4052:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4051:6:3"
									},
									"scope": 1030,
									"src": "3979:186:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1107
									],
									"body": {
										"id": 712,
										"nodeType": "Block",
										"src": "4850:151:3",
										"statements": [
											{
												"assignments": [
													694
												],
												"declarations": [
													{
														"constant": false,
														"id": 694,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4868:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 712,
														"src": "4860:15:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 693,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4860:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 697,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 695,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1180,
														"src": "4878:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 696,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4878:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4860:30:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 699,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 684,
															"src": "4916:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 700,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 694,
															"src": "4922:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 701,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 688,
															"src": "4931:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 698,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1029,
														"src": "4900:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 702,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4900:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 703,
												"nodeType": "ExpressionStatement",
												"src": "4900:37:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 705,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 684,
															"src": "4957:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 706,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 686,
															"src": "4963:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 707,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 688,
															"src": "4967:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 704,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 760,
														"src": "4947:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 708,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4947:26:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 709,
												"nodeType": "ExpressionStatement",
												"src": "4947:26:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 710,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4990:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 692,
												"id": 711,
												"nodeType": "Return",
												"src": "4983:11:3"
											}
										]
									},
									"documentation": {
										"id": 682,
										"nodeType": "StructuredDocumentation",
										"src": "4171:581:3",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 713,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4766:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 689,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4787:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 713,
												"src": "4779:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 683,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4779:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 686,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4801:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 713,
												"src": "4793:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 685,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4793:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 688,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4813:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 713,
												"src": "4805:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 687,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4805:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4778:41:3"
									},
									"returnParameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 713,
												"src": "4844:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 690,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4844:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4843:6:3"
									},
									"scope": 1030,
									"src": "4757:244:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 759,
										"nodeType": "Block",
										"src": "5443:231:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 728,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 723,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 716,
														"src": "5457:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 726,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5473:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 725,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5465:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 724,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5465:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 727,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5465:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5457:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 737,
												"nodeType": "IfStatement",
												"src": "5453:86:3",
												"trueBody": {
													"id": 736,
													"nodeType": "Block",
													"src": "5477:62:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 732,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5525:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 731,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5517:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 730,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5517:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 733,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5517:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 729,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 395,
																	"src": "5498:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 734,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5498:30:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 735,
															"nodeType": "RevertStatement",
															"src": "5491:37:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 743,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 738,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 718,
														"src": "5552:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 741,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5566:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 740,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5558:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 739,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5558:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 742,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5558:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5552:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 752,
												"nodeType": "IfStatement",
												"src": "5548:86:3",
												"trueBody": {
													"id": 751,
													"nodeType": "Block",
													"src": "5570:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 747,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5620:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 746,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5612:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 745,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5612:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 748,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5612:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 744,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 400,
																	"src": "5591:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 749,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5591:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 750,
															"nodeType": "RevertStatement",
															"src": "5584:39:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 754,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 716,
															"src": "5651:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 755,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 718,
															"src": "5657:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 756,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 720,
															"src": "5661:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 753,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 837,
														"src": "5643:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 757,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5643:24:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 758,
												"nodeType": "ExpressionStatement",
												"src": "5643:24:3"
											}
										]
									},
									"documentation": {
										"id": 714,
										"nodeType": "StructuredDocumentation",
										"src": "5007:362:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 760,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5383:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 721,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 716,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5401:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "5393:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 715,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5393:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 718,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5415:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "5407:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 717,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5407:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 720,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5427:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "5419:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 719,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5419:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5392:41:3"
									},
									"returnParameters": {
										"id": 722,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5443:0:3"
									},
									"scope": 1030,
									"src": "5374:300:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 836,
										"nodeType": "Block",
										"src": "6064:1032:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 775,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 770,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 763,
														"src": "6078:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 773,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6094:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 772,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6086:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 771,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6086:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 774,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6086:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6078:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 807,
													"nodeType": "Block",
													"src": "6252:362:3",
													"statements": [
														{
															"assignments": [
																782
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 782,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6274:11:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 807,
																	"src": "6266:19:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 781,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6266:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 786,
															"initialValue": {
																"baseExpression": {
																	"id": 783,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 538,
																	"src": "6288:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 785,
																"indexExpression": {
																	"id": 784,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 763,
																	"src": "6298:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6288:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6266:37:3"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 789,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 787,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 782,
																	"src": "6321:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 788,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 767,
																	"src": "6335:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6321:19:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 797,
															"nodeType": "IfStatement",
															"src": "6317:115:3",
															"trueBody": {
																"id": 796,
																"nodeType": "Block",
																"src": "6342:90:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 791,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 763,
																					"src": "6392:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 792,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 782,
																					"src": "6398:11:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 793,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 767,
																					"src": "6411:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 790,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 390,
																				"src": "6367:24:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 794,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6367:50:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 795,
																		"nodeType": "RevertStatement",
																		"src": "6360:57:3"
																	}
																]
															}
														},
														{
															"id": 806,
															"nodeType": "UncheckedBlock",
															"src": "6445:159:3",
															"statements": [
																{
																	"expression": {
																		"id": 804,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 798,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 538,
																				"src": "6552:9:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 800,
																			"indexExpression": {
																				"id": 799,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 763,
																				"src": "6562:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6552:15:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 803,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 801,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 782,
																				"src": "6570:11:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 802,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 767,
																				"src": "6584:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6570:19:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6552:37:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 805,
																	"nodeType": "ExpressionStatement",
																	"src": "6552:37:3"
																}
															]
														}
													]
												},
												"id": 808,
												"nodeType": "IfStatement",
												"src": "6074:540:3",
												"trueBody": {
													"id": 780,
													"nodeType": "Block",
													"src": "6098:148:3",
													"statements": [
														{
															"expression": {
																"id": 778,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 776,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 546,
																	"src": "6214:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 777,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 767,
																	"src": "6230:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6214:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 779,
															"nodeType": "ExpressionStatement",
															"src": "6214:21:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 814,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 809,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 765,
														"src": "6628:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 812,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6642:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 811,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6634:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 810,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6634:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 813,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6634:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6628:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 828,
													"nodeType": "Block",
													"src": "6843:206:3",
													"statements": [
														{
															"id": 827,
															"nodeType": "UncheckedBlock",
															"src": "6857:182:3",
															"statements": [
																{
																	"expression": {
																		"id": 825,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 821,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 538,
																				"src": "7002:9:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 823,
																			"indexExpression": {
																				"id": 822,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 765,
																				"src": "7012:2:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7002:13:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 824,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 767,
																			"src": "7019:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7002:22:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 826,
																	"nodeType": "ExpressionStatement",
																	"src": "7002:22:3"
																}
															]
														}
													]
												},
												"id": 829,
												"nodeType": "IfStatement",
												"src": "6624:425:3",
												"trueBody": {
													"id": 820,
													"nodeType": "Block",
													"src": "6646:191:3",
													"statements": [
														{
															"id": 819,
															"nodeType": "UncheckedBlock",
															"src": "6660:167:3",
															"statements": [
																{
																	"expression": {
																		"id": 817,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 815,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 546,
																			"src": "6791:12:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 816,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 767,
																			"src": "6807:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6791:21:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 818,
																	"nodeType": "ExpressionStatement",
																	"src": "6791:21:3"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 831,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 763,
															"src": "7073:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 832,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 765,
															"src": "7079:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 833,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 767,
															"src": "7083:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 830,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1042,
														"src": "7064:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 834,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7064:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 835,
												"nodeType": "EmitStatement",
												"src": "7059:30:3"
											}
										]
									},
									"documentation": {
										"id": 761,
										"nodeType": "StructuredDocumentation",
										"src": "5680:304:3",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 837,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "5998:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 763,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6014:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 837,
												"src": "6006:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 762,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6006:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 765,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6028:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 837,
												"src": "6020:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 764,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6020:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 767,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6040:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 837,
												"src": "6032:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 766,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6032:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6005:41:3"
									},
									"returnParameters": {
										"id": 769,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6064:0:3"
									},
									"scope": 1030,
									"src": "5989:1107:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 869,
										"nodeType": "Block",
										"src": "7495:152:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 850,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 845,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 840,
														"src": "7509:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 848,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7528:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 847,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7520:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 846,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7520:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 849,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7520:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7509:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 859,
												"nodeType": "IfStatement",
												"src": "7505:91:3",
												"trueBody": {
													"id": 858,
													"nodeType": "Block",
													"src": "7532:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 854,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7582:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 853,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7574:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 852,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7574:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 855,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7574:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 851,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 400,
																	"src": "7553:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 856,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7553:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 857,
															"nodeType": "RevertStatement",
															"src": "7546:39:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 863,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7621:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 862,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7613:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 861,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7613:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 864,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7613:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 865,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 840,
															"src": "7625:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 866,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 842,
															"src": "7634:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 860,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 837,
														"src": "7605:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 867,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7605:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 868,
												"nodeType": "ExpressionStatement",
												"src": "7605:35:3"
											}
										]
									},
									"documentation": {
										"id": 838,
										"nodeType": "StructuredDocumentation",
										"src": "7102:332:3",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 870,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7448:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 840,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7462:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 870,
												"src": "7454:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 839,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7454:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7479:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 870,
												"src": "7471:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 841,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7471:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7453:32:3"
									},
									"returnParameters": {
										"id": 844,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7495:0:3"
									},
									"scope": 1030,
									"src": "7439:208:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 902,
										"nodeType": "Block",
										"src": "8021:150:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 883,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 878,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 873,
														"src": "8035:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 881,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8054:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 880,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8046:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 879,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8046:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 882,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8046:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8035:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 892,
												"nodeType": "IfStatement",
												"src": "8031:89:3",
												"trueBody": {
													"id": 891,
													"nodeType": "Block",
													"src": "8058:62:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 887,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8106:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 886,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8098:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 885,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8098:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 888,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8098:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 884,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 395,
																	"src": "8079:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 889,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8079:30:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 890,
															"nodeType": "RevertStatement",
															"src": "8072:37:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 894,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 873,
															"src": "8137:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 897,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8154:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 896,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8146:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 895,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8146:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 898,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8146:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 899,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 875,
															"src": "8158:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 893,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 837,
														"src": "8129:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 900,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8129:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 901,
												"nodeType": "ExpressionStatement",
												"src": "8129:35:3"
											}
										]
									},
									"documentation": {
										"id": 871,
										"nodeType": "StructuredDocumentation",
										"src": "7653:307:3",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 903,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7974:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 876,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 873,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7988:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 903,
												"src": "7980:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 872,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7980:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 875,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8005:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 903,
												"src": "7997:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 874,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7997:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7979:32:3"
									},
									"returnParameters": {
										"id": 877,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8021:0:3"
									},
									"scope": 1030,
									"src": "7965:206:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 920,
										"nodeType": "Block",
										"src": "8781:54:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 914,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 906,
															"src": "8800:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 915,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 908,
															"src": "8807:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 916,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 910,
															"src": "8816:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 917,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8823:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 913,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															921,
															981
														],
														"referencedDeclaration": 981,
														"src": "8791:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 918,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8791:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 919,
												"nodeType": "ExpressionStatement",
												"src": "8791:37:3"
											}
										]
									},
									"documentation": {
										"id": 904,
										"nodeType": "StructuredDocumentation",
										"src": "8177:525:3",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 921,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8716:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 911,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 906,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8733:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 921,
												"src": "8725:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 905,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8725:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 908,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8748:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 921,
												"src": "8740:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 907,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8740:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 910,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8765:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 921,
												"src": "8757:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 909,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8757:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8724:47:3"
									},
									"returnParameters": {
										"id": 912,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8781:0:3"
									},
									"scope": 1030,
									"src": "8707:128:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 980,
										"nodeType": "Block",
										"src": "9780:334:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 938,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 933,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 924,
														"src": "9794:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 936,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9811:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 935,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9803:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 934,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9803:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 937,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9803:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9794:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 947,
												"nodeType": "IfStatement",
												"src": "9790:89:3",
												"trueBody": {
													"id": 946,
													"nodeType": "Block",
													"src": "9815:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 942,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9865:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 941,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9857:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 940,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9857:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 943,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9857:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 939,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 414,
																	"src": "9836:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 944,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9836:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 945,
															"nodeType": "RevertStatement",
															"src": "9829:39:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 953,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 948,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 926,
														"src": "9892:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 951,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9911:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 950,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9903:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 949,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9903:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 952,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9903:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9892:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 962,
												"nodeType": "IfStatement",
												"src": "9888:90:3",
												"trueBody": {
													"id": 961,
													"nodeType": "Block",
													"src": "9915:63:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 957,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9964:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 956,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9956:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 955,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9956:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 958,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9956:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 954,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 419,
																	"src": "9936:19:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 959,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9936:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 960,
															"nodeType": "RevertStatement",
															"src": "9929:38:3"
														}
													]
												}
											},
											{
												"expression": {
													"id": 969,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 963,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 544,
																"src": "9987:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 966,
															"indexExpression": {
																"id": 964,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 924,
																"src": "9999:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9987:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 967,
														"indexExpression": {
															"id": 965,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 926,
															"src": "10006:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9987:27:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 968,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 928,
														"src": "10017:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9987:35:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 970,
												"nodeType": "ExpressionStatement",
												"src": "9987:35:3"
											},
											{
												"condition": {
													"id": 971,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 930,
													"src": "10036:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 979,
												"nodeType": "IfStatement",
												"src": "10032:76:3",
												"trueBody": {
													"id": 978,
													"nodeType": "Block",
													"src": "10047:61:3",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 973,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 924,
																		"src": "10075:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 974,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 926,
																		"src": "10082:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 975,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 928,
																		"src": "10091:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 972,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1051,
																	"src": "10066:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 976,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10066:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 977,
															"nodeType": "EmitStatement",
															"src": "10061:36:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 922,
										"nodeType": "StructuredDocumentation",
										"src": "8841:836:3",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 981,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9691:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 931,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 924,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9708:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "9700:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 923,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9700:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 926,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9723:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "9715:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 925,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9715:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 928,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9740:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "9732:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 927,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9732:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 930,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9752:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "9747:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 929,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9747:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9699:63:3"
									},
									"returnParameters": {
										"id": 932,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9780:0:3"
									},
									"scope": 1030,
									"src": "9682:432:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1028,
										"nodeType": "Block",
										"src": "10485:387:3",
										"statements": [
											{
												"assignments": [
													992
												],
												"declarations": [
													{
														"constant": false,
														"id": 992,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10503:16:3",
														"nodeType": "VariableDeclaration",
														"scope": 1028,
														"src": "10495:24:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 991,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10495:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 997,
												"initialValue": {
													"arguments": [
														{
															"id": 994,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 984,
															"src": "10532:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 995,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 986,
															"src": "10539:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 993,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 657,
														"src": "10522:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 996,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10522:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10495:52:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1004,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 998,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 992,
														"src": "10561:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1001,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10585:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1000,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10585:7:3",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 999,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10580:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1002,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10580:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 1003,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10594:3:3",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10580:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10561:36:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1027,
												"nodeType": "IfStatement",
												"src": "10557:309:3",
												"trueBody": {
													"id": 1026,
													"nodeType": "Block",
													"src": "10599:267:3",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1007,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1005,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 992,
																	"src": "10617:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1006,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 988,
																	"src": "10636:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10617:24:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1015,
															"nodeType": "IfStatement",
															"src": "10613:130:3",
															"trueBody": {
																"id": 1014,
																"nodeType": "Block",
																"src": "10643:100:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1009,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 986,
																					"src": "10695:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1010,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 992,
																					"src": "10704:16:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1011,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 988,
																					"src": "10722:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1008,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 409,
																				"src": "10668:26:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 1012,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10668:60:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 1013,
																		"nodeType": "RevertStatement",
																		"src": "10661:67:3"
																	}
																]
															}
														},
														{
															"id": 1025,
															"nodeType": "UncheckedBlock",
															"src": "10756:100:3",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 1017,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 984,
																				"src": "10793:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1018,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 986,
																				"src": "10800:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1021,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1019,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 992,
																					"src": "10809:16:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 1020,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 988,
																					"src": "10828:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10809:24:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 1022,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10835:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 1016,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				921,
																				981
																			],
																			"referencedDeclaration": 981,
																			"src": "10784:8:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 1023,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10784:57:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1024,
																	"nodeType": "ExpressionStatement",
																	"src": "10784:57:3"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 982,
										"nodeType": "StructuredDocumentation",
										"src": "10120:271:3",
										"text": " @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 1029,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10405:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 989,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 984,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10429:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1029,
												"src": "10421:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 983,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10421:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 986,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10444:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1029,
												"src": "10436:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 985,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10436:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 988,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10461:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1029,
												"src": "10453:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 987,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10453:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10420:47:3"
									},
									"returnParameters": {
										"id": 990,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10485:0:3"
									},
									"scope": 1030,
									"src": "10396:476:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1031,
							"src": "1106:9768:3",
							"usedErrors": [
								390,
								395,
								400,
								409,
								414,
								419
							],
							"usedEvents": [
								1042,
								1051
							]
						}
					],
					"src": "105:10770:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							1108
						]
					},
					"id": 1109,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1032,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1033,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:4",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 1108,
							"linearizedBaseContracts": [
								1108
							],
							"name": "IERC20",
							"nameLocation": "214:6:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1034,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:4",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1042,
									"name": "Transfer",
									"nameLocation": "396:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1041,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1036,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1042,
												"src": "405:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1035,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1038,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1042,
												"src": "427:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1037,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1040,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1042,
												"src": "447:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1039,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:4"
									},
									"src": "390:72:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1043,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:4",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1051,
									"name": "Approval",
									"nameLocation": "627:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1050,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1045,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "636:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1044,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1047,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "659:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1046,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1049,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "684:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1048,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:4"
									},
									"src": "621:78:4"
								},
								{
									"documentation": {
										"id": 1052,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:4",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 1057,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1053,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:4"
									},
									"returnParameters": {
										"id": 1056,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1055,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1057,
												"src": "821:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1054,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:4"
									},
									"scope": 1108,
									"src": "775:55:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1058,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:4",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 1065,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1061,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1060,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1065,
												"src": "931:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1059,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:4"
									},
									"returnParameters": {
										"id": 1064,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1063,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1065,
												"src": "971:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1062,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:4"
									},
									"scope": 1108,
									"src": "912:68:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1066,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:4",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 1075,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1071,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1068,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1075,
												"src": "1222:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1067,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1070,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1075,
												"src": "1234:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1069,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:4"
									},
									"returnParameters": {
										"id": 1074,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1073,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1075,
												"src": "1267:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1072,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:4"
									},
									"scope": 1108,
									"src": "1204:69:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1076,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:4",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 1085,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1081,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1078,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1085,
												"src": "1567:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1077,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1080,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1085,
												"src": "1582:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1079,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:4"
									},
									"returnParameters": {
										"id": 1084,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1083,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1085,
												"src": "1622:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1082,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:4"
									},
									"scope": 1108,
									"src": "1548:83:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1086,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:4",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1095,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1091,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1088,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1095,
												"src": "2326:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1087,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1090,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1095,
												"src": "2343:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1089,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:4"
									},
									"returnParameters": {
										"id": 1094,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1093,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1095,
												"src": "2376:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1092,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:4"
									},
									"scope": 1108,
									"src": "2309:73:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1096,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:4",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1107,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1098,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1107,
												"src": "2712:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1097,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1100,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1107,
												"src": "2726:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1099,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1102,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1107,
												"src": "2738:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1101,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:4"
									},
									"returnParameters": {
										"id": 1106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1105,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1107,
												"src": "2771:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1104,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:4"
									},
									"scope": 1108,
									"src": "2690:87:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1109,
							"src": "204:2575:4",
							"usedErrors": [],
							"usedEvents": [
								1042,
								1051
							]
						}
					],
					"src": "106:2674:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol",
					"exportedSymbols": {
						"ERC20": [
							1030
						],
						"ERC20Pausable": [
							1142
						],
						"Pausable": [
							1306
						]
					},
					"id": 1143,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1110,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "124:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "../ERC20.sol",
							"id": 1112,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1143,
							"sourceUnit": 1031,
							"src": "150:35:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1111,
										"name": "ERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1030,
										"src": "158:5:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Pausable.sol",
							"file": "../../../utils/Pausable.sol",
							"id": 1114,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1143,
							"sourceUnit": 1307,
							"src": "186:53:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1113,
										"name": "Pausable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1306,
										"src": "194:8:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1116,
										"name": "ERC20",
										"nameLocations": [
											"965:5:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1030,
										"src": "965:5:5"
									},
									"id": 1117,
									"nodeType": "InheritanceSpecifier",
									"src": "965:5:5"
								},
								{
									"baseName": {
										"id": 1118,
										"name": "Pausable",
										"nameLocations": [
											"972:8:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1306,
										"src": "972:8:5"
									},
									"id": 1119,
									"nodeType": "InheritanceSpecifier",
									"src": "972:8:5"
								}
							],
							"canonicalName": "ERC20Pausable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1115,
								"nodeType": "StructuredDocumentation",
								"src": "241:688:5",
								"text": " @dev ERC-20 token with pausable token transfers, minting and burning.\n Useful for scenarios such as preventing trades until the end of an evaluation\n period, or having an emergency switch for freezing all token transfers in the\n event of a large bug.\n IMPORTANT: This contract does not include public pause and unpause functions. In\n addition to inheriting this contract, you must define both functions, invoking the\n {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate\n access control, e.g. using {AccessControl} or {Ownable}. Not doing so will\n make the contract pause mechanism of the contract unreachable, and thus unusable."
							},
							"fullyImplemented": true,
							"id": 1142,
							"linearizedBaseContracts": [
								1142,
								1306,
								1030,
								420,
								1168,
								1108,
								1198
							],
							"name": "ERC20Pausable",
							"nameLocation": "948:13:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										837
									],
									"body": {
										"id": 1140,
										"nodeType": "Block",
										"src": "1211:47:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1135,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1122,
															"src": "1235:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1136,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1124,
															"src": "1241:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1137,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1126,
															"src": "1245:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1132,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "1221:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ERC20Pausable_$1142_$",
																"typeString": "type(contract super ERC20Pausable)"
															}
														},
														"id": 1134,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1227:7:5",
														"memberName": "_update",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 837,
														"src": "1221:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1221:30:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1139,
												"nodeType": "ExpressionStatement",
												"src": "1221:30:5"
											}
										]
									},
									"documentation": {
										"id": 1120,
										"nodeType": "StructuredDocumentation",
										"src": "987:121:5",
										"text": " @dev See {ERC20-_update}.\n Requirements:\n - the contract must not be paused."
									},
									"id": 1141,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1130,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1129,
												"name": "whenNotPaused",
												"nameLocations": [
													"1197:13:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1231,
												"src": "1197:13:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "1197:13:5"
										}
									],
									"name": "_update",
									"nameLocation": "1122:7:5",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1128,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1188:8:5"
									},
									"parameters": {
										"id": 1127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1122,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1138:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1141,
												"src": "1130:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1121,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1130:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1124,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1152:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1141,
												"src": "1144:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1123,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1144:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1126,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1164:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1141,
												"src": "1156:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1125,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1156:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1129:41:5"
									},
									"returnParameters": {
										"id": 1131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1211:0:5"
									},
									"scope": 1142,
									"src": "1113:145:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1143,
							"src": "930:330:5",
							"usedErrors": [
								390,
								395,
								400,
								409,
								414,
								419,
								1220,
								1223
							],
							"usedEvents": [
								1042,
								1051,
								1212,
								1217
							]
						}
					],
					"src": "124:1137:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							1108
						],
						"IERC20Metadata": [
							1168
						]
					},
					"id": 1169,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1144,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 1146,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1169,
							"sourceUnit": 1109,
							"src": "151:37:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1145,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1108,
										"src": "159:6:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1148,
										"name": "IERC20",
										"nameLocations": [
											"306:6:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1108,
										"src": "306:6:6"
									},
									"id": 1149,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:6"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1147,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:6",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 1168,
							"linearizedBaseContracts": [
								1168,
								1108
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1150,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:6",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 1155,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1151,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:6"
									},
									"returnParameters": {
										"id": 1154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1153,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1155,
												"src": "417:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1152,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:6"
									},
									"scope": 1168,
									"src": "378:54:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1156,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:6",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 1161,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1157,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:6"
									},
									"returnParameters": {
										"id": 1160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1159,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1161,
												"src": "540:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1158,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:6"
									},
									"scope": 1168,
									"src": "499:56:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1162,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:6",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 1167,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1163,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:6"
									},
									"returnParameters": {
										"id": 1166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1165,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1167,
												"src": "674:5:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1164,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:6"
									},
									"scope": 1168,
									"src": "631:50:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1169,
							"src": "278:405:6",
							"usedErrors": [],
							"usedEvents": [
								1042,
								1051
							]
						}
					],
					"src": "125:559:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1198
						]
					},
					"id": 1199,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1170,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:7"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1171,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:7",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1198,
							"linearizedBaseContracts": [
								1198
							],
							"name": "Context",
							"nameLocation": "642:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1179,
										"nodeType": "Block",
										"src": "718:34:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1176,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:7",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1175,
												"id": 1178,
												"nodeType": "Return",
												"src": "728:17:7"
											}
										]
									},
									"id": 1180,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1172,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:7"
									},
									"returnParameters": {
										"id": 1175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1174,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1180,
												"src": "709:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1173,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:7"
									},
									"scope": 1198,
									"src": "656:96:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1188,
										"nodeType": "Block",
										"src": "825:32:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1185,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:7",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1184,
												"id": 1187,
												"nodeType": "Return",
												"src": "835:15:7"
											}
										]
									},
									"id": 1189,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1181,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:7"
									},
									"returnParameters": {
										"id": 1184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1183,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1189,
												"src": "809:14:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1182,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:7"
									},
									"scope": 1198,
									"src": "758:99:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1196,
										"nodeType": "Block",
										"src": "935:25:7",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1194,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1193,
												"id": 1195,
												"nodeType": "Return",
												"src": "945:8:7"
											}
										]
									},
									"id": 1197,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1190,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:7"
									},
									"returnParameters": {
										"id": 1193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1192,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1197,
												"src": "926:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1191,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:7"
									},
									"scope": 1198,
									"src": "863:97:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1199,
							"src": "624:338:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/Pausable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Pausable.sol",
					"exportedSymbols": {
						"Context": [
							1198
						],
						"Pausable": [
							1306
						]
					},
					"id": 1307,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1200,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 1202,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1307,
							"sourceUnit": 1199,
							"src": "128:45:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1201,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1198,
										"src": "136:7:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1204,
										"name": "Context",
										"nameLocations": [
											"645:7:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1198,
										"src": "645:7:8"
									},
									"id": 1205,
									"nodeType": "InheritanceSpecifier",
									"src": "645:7:8"
								}
							],
							"canonicalName": "Pausable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1203,
								"nodeType": "StructuredDocumentation",
								"src": "175:439:8",
								"text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
							},
							"fullyImplemented": true,
							"id": 1306,
							"linearizedBaseContracts": [
								1306,
								1198
							],
							"name": "Pausable",
							"nameLocation": "633:8:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1207,
									"mutability": "mutable",
									"name": "_paused",
									"nameLocation": "672:7:8",
									"nodeType": "VariableDeclaration",
									"scope": 1306,
									"src": "659:20:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1206,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "659:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1208,
										"nodeType": "StructuredDocumentation",
										"src": "686:73:8",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
									"id": 1212,
									"name": "Paused",
									"nameLocation": "770:6:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1210,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "785:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1212,
												"src": "777:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1209,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "777:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "776:17:8"
									},
									"src": "764:30:8"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1213,
										"nodeType": "StructuredDocumentation",
										"src": "800:70:8",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
									"id": 1217,
									"name": "Unpaused",
									"nameLocation": "881:8:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1215,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "898:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1217,
												"src": "890:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1214,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "890:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "889:17:8"
									},
									"src": "875:32:8"
								},
								{
									"documentation": {
										"id": 1218,
										"nodeType": "StructuredDocumentation",
										"src": "913:76:8",
										"text": " @dev The operation failed because the contract is paused."
									},
									"errorSelector": "d93c0665",
									"id": 1220,
									"name": "EnforcedPause",
									"nameLocation": "1000:13:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1219,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1013:2:8"
									},
									"src": "994:22:8"
								},
								{
									"documentation": {
										"id": 1221,
										"nodeType": "StructuredDocumentation",
										"src": "1022:80:8",
										"text": " @dev The operation failed because the contract is not paused."
									},
									"errorSelector": "8dfc202b",
									"id": 1223,
									"name": "ExpectedPause",
									"nameLocation": "1113:13:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1222,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1126:2:8"
									},
									"src": "1107:22:8"
								},
								{
									"body": {
										"id": 1230,
										"nodeType": "Block",
										"src": "1340:47:8",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1226,
														"name": "_requireNotPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1260,
														"src": "1350:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 1227,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1350:19:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1228,
												"nodeType": "ExpressionStatement",
												"src": "1350:19:8"
											},
											{
												"id": 1229,
												"nodeType": "PlaceholderStatement",
												"src": "1379:1:8"
											}
										]
									},
									"documentation": {
										"id": 1224,
										"nodeType": "StructuredDocumentation",
										"src": "1135:175:8",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 1231,
									"name": "whenNotPaused",
									"nameLocation": "1324:13:8",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1225,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1337:2:8"
									},
									"src": "1315:72:8",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1238,
										"nodeType": "Block",
										"src": "1587:44:8",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1234,
														"name": "_requirePaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1273,
														"src": "1597:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 1235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1597:16:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1236,
												"nodeType": "ExpressionStatement",
												"src": "1597:16:8"
											},
											{
												"id": 1237,
												"nodeType": "PlaceholderStatement",
												"src": "1623:1:8"
											}
										]
									},
									"documentation": {
										"id": 1232,
										"nodeType": "StructuredDocumentation",
										"src": "1393:167:8",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 1239,
									"name": "whenPaused",
									"nameLocation": "1574:10:8",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1233,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1584:2:8"
									},
									"src": "1565:66:8",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1247,
										"nodeType": "Block",
										"src": "1779:31:8",
										"statements": [
											{
												"expression": {
													"id": 1245,
													"name": "_paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1207,
													"src": "1796:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1244,
												"id": 1246,
												"nodeType": "Return",
												"src": "1789:14:8"
											}
										]
									},
									"documentation": {
										"id": 1240,
										"nodeType": "StructuredDocumentation",
										"src": "1637:84:8",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 1248,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "1735:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1241,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1741:2:8"
									},
									"returnParameters": {
										"id": 1244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1243,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "1773:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1242,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1773:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:6:8"
									},
									"scope": 1306,
									"src": "1726:84:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1259,
										"nodeType": "Block",
										"src": "1929:77:8",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1252,
														"name": "paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1248,
														"src": "1943:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
															"typeString": "function () view returns (bool)"
														}
													},
													"id": 1253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1943:8:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1258,
												"nodeType": "IfStatement",
												"src": "1939:61:8",
												"trueBody": {
													"id": 1257,
													"nodeType": "Block",
													"src": "1953:47:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1254,
																	"name": "EnforcedPause",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1220,
																	"src": "1974:13:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1255,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1974:15:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1256,
															"nodeType": "RevertStatement",
															"src": "1967:22:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1249,
										"nodeType": "StructuredDocumentation",
										"src": "1816:57:8",
										"text": " @dev Throws if the contract is paused."
									},
									"id": 1260,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireNotPaused",
									"nameLocation": "1887:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1250,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1904:2:8"
									},
									"returnParameters": {
										"id": 1251,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1929:0:8"
									},
									"scope": 1306,
									"src": "1878:128:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1272,
										"nodeType": "Block",
										"src": "2126:78:8",
										"statements": [
											{
												"condition": {
													"id": 1266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "2140:9:8",
													"subExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1264,
															"name": "paused",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1248,
															"src": "2141:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																"typeString": "function () view returns (bool)"
															}
														},
														"id": 1265,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2141:8:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1271,
												"nodeType": "IfStatement",
												"src": "2136:62:8",
												"trueBody": {
													"id": 1270,
													"nodeType": "Block",
													"src": "2151:47:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1267,
																	"name": "ExpectedPause",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1223,
																	"src": "2172:13:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1268,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2172:15:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1269,
															"nodeType": "RevertStatement",
															"src": "2165:22:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1261,
										"nodeType": "StructuredDocumentation",
										"src": "2012:61:8",
										"text": " @dev Throws if the contract is not paused."
									},
									"id": 1273,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requirePaused",
									"nameLocation": "2087:14:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1262,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2101:2:8"
									},
									"returnParameters": {
										"id": 1263,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2126:0:8"
									},
									"scope": 1306,
									"src": "2078:126:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1288,
										"nodeType": "Block",
										"src": "2388:66:8",
										"statements": [
											{
												"expression": {
													"id": 1281,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1279,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1207,
														"src": "2398:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1280,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2408:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2398:14:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1282,
												"nodeType": "ExpressionStatement",
												"src": "2398:14:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1284,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1180,
																"src": "2434:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1285,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2434:12:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1283,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1212,
														"src": "2427:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1286,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2427:20:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1287,
												"nodeType": "EmitStatement",
												"src": "2422:25:8"
											}
										]
									},
									"documentation": {
										"id": 1274,
										"nodeType": "StructuredDocumentation",
										"src": "2210:124:8",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 1289,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1277,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1276,
												"name": "whenNotPaused",
												"nameLocations": [
													"2374:13:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1231,
												"src": "2374:13:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "2374:13:8"
										}
									],
									"name": "_pause",
									"nameLocation": "2348:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1275,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2354:2:8"
									},
									"returnParameters": {
										"id": 1278,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2388:0:8"
									},
									"scope": 1306,
									"src": "2339:115:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1304,
										"nodeType": "Block",
										"src": "2634:69:8",
										"statements": [
											{
												"expression": {
													"id": 1297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1295,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1207,
														"src": "2644:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1296,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2654:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2644:15:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1298,
												"nodeType": "ExpressionStatement",
												"src": "2644:15:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1300,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1180,
																"src": "2683:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1301,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2683:12:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1299,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1217,
														"src": "2674:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1302,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2674:22:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1303,
												"nodeType": "EmitStatement",
												"src": "2669:27:8"
											}
										]
									},
									"documentation": {
										"id": 1290,
										"nodeType": "StructuredDocumentation",
										"src": "2460:121:8",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 1305,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1293,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1292,
												"name": "whenPaused",
												"nameLocations": [
													"2623:10:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1239,
												"src": "2623:10:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "2623:10:8"
										}
									],
									"name": "_unpause",
									"nameLocation": "2595:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1291,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2603:2:8"
									},
									"returnParameters": {
										"id": 1294,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2634:0:8"
									},
									"scope": 1306,
									"src": "2586:117:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1307,
							"src": "615:2090:8",
							"usedErrors": [
								1220,
								1223
							],
							"usedEvents": [
								1212,
								1217
							]
						}
					],
					"src": "102:2604:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							1330
						],
						"IERC165": [
							1342
						]
					},
					"id": 1331,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1308,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1310,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1331,
							"sourceUnit": 1343,
							"src": "140:38:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1309,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1342,
										"src": "148:7:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1312,
										"name": "IERC165",
										"nameLocations": [
											"688:7:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1342,
										"src": "688:7:9"
									},
									"id": 1313,
									"nodeType": "InheritanceSpecifier",
									"src": "688:7:9"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1311,
								"nodeType": "StructuredDocumentation",
								"src": "180:479:9",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1330,
							"linearizedBaseContracts": [
								1330,
								1342
							],
							"name": "ERC165",
							"nameLocation": "678:6:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1341
									],
									"body": {
										"id": 1328,
										"nodeType": "Block",
										"src": "845:64:9",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1326,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1321,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1316,
														"src": "862:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1323,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1342,
																	"src": "882:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1342_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1342_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1322,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "877:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1324,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "877:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1342",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1325,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "891:11:9",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "877:25:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "862:40:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1320,
												"id": 1327,
												"nodeType": "Return",
												"src": "855:47:9"
											}
										]
									},
									"documentation": {
										"id": 1314,
										"nodeType": "StructuredDocumentation",
										"src": "702:56:9",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1329,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "772:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1316,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "797:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1329,
												"src": "790:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1315,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "790:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "789:20:9"
									},
									"returnParameters": {
										"id": 1320,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1319,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1329,
												"src": "839:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1318,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "839:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "838:6:9"
									},
									"scope": 1330,
									"src": "763:146:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1331,
							"src": "660:251:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "114:798:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1342
						]
					},
					"id": 1343,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1332,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1333,
								"nodeType": "StructuredDocumentation",
								"src": "141:280:10",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1342,
							"linearizedBaseContracts": [
								1342
							],
							"name": "IERC165",
							"nameLocation": "432:7:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1334,
										"nodeType": "StructuredDocumentation",
										"src": "446:340:10",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1341,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "800:17:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1336,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "825:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 1341,
												"src": "818:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1335,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "818:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "817:20:10"
									},
									"returnParameters": {
										"id": 1340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1339,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1341,
												"src": "861:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1338,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "861:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "860:6:10"
									},
									"scope": 1342,
									"src": "791:76:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1343,
							"src": "422:447:10",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:755:10"
				},
				"id": 10
			},
			"GoldToken.sol": {
				"ast": {
					"absolutePath": "GoldToken.sol",
					"exportedSymbols": {
						"AccessControl": [
							295
						],
						"Context": [
							1198
						],
						"ERC165": [
							1330
						],
						"ERC20": [
							1030
						],
						"ERC20Pausable": [
							1142
						],
						"GoldToken": [
							1558
						],
						"IAccessControl": [
							378
						],
						"IVaultManager": [
							1368
						],
						"Pausable": [
							1306
						]
					},
					"id": 1559,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1344,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:11"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol",
							"file": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol",
							"id": 1345,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1559,
							"sourceUnit": 1143,
							"src": "58:74:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
							"file": "@openzeppelin/contracts/access/AccessControl.sol",
							"id": 1346,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1559,
							"sourceUnit": 296,
							"src": "133:58:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IVaultManager",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1347,
								"nodeType": "StructuredDocumentation",
								"src": "193:114:11",
								"text": " @title VaultManager Interface\n @dev Interface kontrak untuk mengecek dan mengatur cadangan emas fisik"
							},
							"fullyImplemented": false,
							"id": 1368,
							"linearizedBaseContracts": [
								1368
							],
							"name": "IVaultManager",
							"nameLocation": "318:13:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "ff9b1b11",
									"id": 1352,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "availableGrams",
									"nameLocation": "347:14:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1348,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "361:2:11"
									},
									"returnParameters": {
										"id": 1351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1350,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1352,
												"src": "387:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1349,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "387:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "386:9:11"
									},
									"scope": 1368,
									"src": "338:58:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c112a08f",
									"id": 1357,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "reserveUsed",
									"nameLocation": "410:11:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1353,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "421:2:11"
									},
									"returnParameters": {
										"id": 1356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1355,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1357,
												"src": "447:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1354,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "446:9:11"
									},
									"scope": 1368,
									"src": "401:55:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "3dd0104e",
									"id": 1362,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addReserveUsed",
									"nameLocation": "470:14:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1359,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "493:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1362,
												"src": "485:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1358,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "485:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "484:16:11"
									},
									"returnParameters": {
										"id": 1361,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "509:0:11"
									},
									"scope": 1368,
									"src": "461:49:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ecad4f68",
									"id": 1367,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "reduceReserveUsed",
									"nameLocation": "524:17:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1365,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1364,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "550:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1367,
												"src": "542:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1363,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "542:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "541:16:11"
									},
									"returnParameters": {
										"id": 1366,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "566:0:11"
									},
									"scope": 1368,
									"src": "515:52:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1559,
							"src": "308:261:11",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1370,
										"name": "ERC20Pausable",
										"nameLocations": [
											"747:13:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1142,
										"src": "747:13:11"
									},
									"id": 1371,
									"nodeType": "InheritanceSpecifier",
									"src": "747:13:11"
								},
								{
									"baseName": {
										"id": 1372,
										"name": "AccessControl",
										"nameLocations": [
											"762:13:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 295,
										"src": "762:13:11"
									},
									"id": 1373,
									"nodeType": "InheritanceSpecifier",
									"src": "762:13:11"
								}
							],
							"canonicalName": "GoldToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1369,
								"nodeType": "StructuredDocumentation",
								"src": "571:153:11",
								"text": " @title Aurix Gold Token (GOLD)\n @notice ERC20 token yang 100% dijamin emas fisik\n @dev Gunakan bersama VaultManager untuk kontrol cadangan"
							},
							"fullyImplemented": true,
							"id": 1558,
							"linearizedBaseContracts": [
								1558,
								295,
								1330,
								1342,
								378,
								1142,
								1306,
								1030,
								420,
								1168,
								1108,
								1198
							],
							"name": "GoldToken",
							"nameLocation": "734:9:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"functionSelector": "d5391393",
									"id": 1378,
									"mutability": "constant",
									"name": "MINTER_ROLE",
									"nameLocation": "830:11:11",
									"nodeType": "VariableDeclaration",
									"scope": 1558,
									"src": "806:62:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1374,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "806:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "4d494e5445525f524f4c45",
												"id": 1376,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "854:13:11",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
													"typeString": "literal_string \"MINTER_ROLE\""
												},
												"value": "MINTER_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
													"typeString": "literal_string \"MINTER_ROLE\""
												}
											],
											"id": 1375,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "844:9:11",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 1377,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "844:24:11",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "e63ab1e9",
									"id": 1383,
									"mutability": "constant",
									"name": "PAUSER_ROLE",
									"nameLocation": "898:11:11",
									"nodeType": "VariableDeclaration",
									"scope": 1558,
									"src": "874:62:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1379,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "874:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "5041555345525f524f4c45",
												"id": 1381,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "922:13:11",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a",
													"typeString": "literal_string \"PAUSER_ROLE\""
												},
												"value": "PAUSER_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a",
													"typeString": "literal_string \"PAUSER_ROLE\""
												}
											],
											"id": 1380,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "912:9:11",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 1382,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "912:24:11",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "fbfa77cf",
									"id": 1386,
									"mutability": "mutable",
									"name": "vault",
									"nameLocation": "1005:5:11",
									"nodeType": "VariableDeclaration",
									"scope": 1558,
									"src": "984:26:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IVaultManager_$1368",
										"typeString": "contract IVaultManager"
									},
									"typeName": {
										"id": 1385,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1384,
											"name": "IVaultManager",
											"nameLocations": [
												"984:13:11"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1368,
											"src": "984:13:11"
										},
										"referencedDeclaration": 1368,
										"src": "984:13:11",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IVaultManager_$1368",
											"typeString": "contract IVaultManager"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 1439,
										"nodeType": "Block",
										"src": "1289:347:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1404,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1399,
																"name": "vaultManagerAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1389,
																"src": "1307:19:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1402,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1338:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1401,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1330:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1400,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1330:7:11",
																		"typeDescriptions": {}
																	}
																},
																"id": 1403,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1330:10:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1307:33:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964207661756c742061646472657373",
															"id": 1405,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1342:23:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1d4b05e5256c70cb19cbeae4f5dbc68cbf63906eed2b6782a552ca8fc044422e",
																"typeString": "literal_string \"Invalid vault address\""
															},
															"value": "Invalid vault address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1d4b05e5256c70cb19cbeae4f5dbc68cbf63906eed2b6782a552ca8fc044422e",
																"typeString": "literal_string \"Invalid vault address\""
															}
														],
														"id": 1398,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1299:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1406,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1299:67:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1407,
												"nodeType": "ExpressionStatement",
												"src": "1299:67:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1414,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1409,
																"name": "admin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1391,
																"src": "1384:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1412,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1401:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1411,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1393:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1410,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1393:7:11",
																		"typeDescriptions": {}
																	}
																},
																"id": 1413,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1393:10:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1384:19:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642061646d696e",
															"id": 1415,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1405:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_61dd2a6cf2ead59b09922a19257b57dec215ba2abf4fa7a561c379f2a10b24a5",
																"typeString": "literal_string \"Invalid admin\""
															},
															"value": "Invalid admin"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_61dd2a6cf2ead59b09922a19257b57dec215ba2abf4fa7a561c379f2a10b24a5",
																"typeString": "literal_string \"Invalid admin\""
															}
														],
														"id": 1408,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1376:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1416,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1376:45:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1417,
												"nodeType": "ExpressionStatement",
												"src": "1376:45:11"
											},
											{
												"expression": {
													"id": 1422,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1418,
														"name": "vault",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1386,
														"src": "1432:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IVaultManager_$1368",
															"typeString": "contract IVaultManager"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1420,
																"name": "vaultManagerAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1389,
																"src": "1454:19:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1419,
															"name": "IVaultManager",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1368,
															"src": "1440:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IVaultManager_$1368_$",
																"typeString": "type(contract IVaultManager)"
															}
														},
														"id": 1421,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1440:34:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IVaultManager_$1368",
															"typeString": "contract IVaultManager"
														}
													},
													"src": "1432:42:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IVaultManager_$1368",
														"typeString": "contract IVaultManager"
													}
												},
												"id": 1423,
												"nodeType": "ExpressionStatement",
												"src": "1432:42:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1425,
															"name": "DEFAULT_ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "1523:18:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1426,
															"name": "admin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1391,
															"src": "1543:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1424,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "1512:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 1427,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1512:37:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1428,
												"nodeType": "ExpressionStatement",
												"src": "1512:37:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1430,
															"name": "MINTER_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1378,
															"src": "1570:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1431,
															"name": "admin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1391,
															"src": "1583:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1429,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "1559:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 1432,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1559:30:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1433,
												"nodeType": "ExpressionStatement",
												"src": "1559:30:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1435,
															"name": "PAUSER_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1383,
															"src": "1610:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1436,
															"name": "admin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1391,
															"src": "1623:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1434,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "1599:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 1437,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1599:30:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1438,
												"nodeType": "ExpressionStatement",
												"src": "1599:30:11"
											}
										]
									},
									"documentation": {
										"id": 1387,
										"nodeType": "StructuredDocumentation",
										"src": "1017:165:11",
										"text": " @dev Konstruktor, hanya dipanggil saat deploy\n @param vaultManagerAddress alamat kontrak VaultManager\n @param admin alamat admin utama"
									},
									"id": 1440,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "417572697820476f6c6420546f6b656e",
													"id": 1394,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1257:18:11",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_07d2084bc64cb9efaabc1ea3286487518e4d53ad21b66530d59fef7d7ad6e0e8",
														"typeString": "literal_string \"Aurix Gold Token\""
													},
													"value": "Aurix Gold Token"
												},
												{
													"hexValue": "474f4c44",
													"id": 1395,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1277:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_dbd17891fc491ac6717dd01ab1f90f82509f1f2e91cd5066f68805860fbdeb72",
														"typeString": "literal_string \"GOLD\""
													},
													"value": "GOLD"
												}
											],
											"id": 1396,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1393,
												"name": "ERC20",
												"nameLocations": [
													"1251:5:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1030,
												"src": "1251:5:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "1251:33:11"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1392,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1389,
												"mutability": "mutable",
												"name": "vaultManagerAddress",
												"nameLocation": "1207:19:11",
												"nodeType": "VariableDeclaration",
												"scope": 1440,
												"src": "1199:27:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1388,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1199:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1391,
												"mutability": "mutable",
												"name": "admin",
												"nameLocation": "1236:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1440,
												"src": "1228:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1390,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1228:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1198:44:11"
									},
									"returnParameters": {
										"id": 1397,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1289:0:11"
									},
									"scope": 1558,
									"src": "1187:449:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1490,
										"nodeType": "Block",
										"src": "1901:250:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1459,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1454,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1443,
																"src": "1919:2:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1457,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1933:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1456,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1925:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1455,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1925:7:11",
																		"typeDescriptions": {}
																	}
																},
																"id": 1458,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1925:10:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1919:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420726563697069656e74",
															"id": 1460,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1937:19:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a6664b97aef19c137d44ec81dfc0c0cc28a2c3470357b125208345a2c048425d",
																"typeString": "literal_string \"Invalid recipient\""
															},
															"value": "Invalid recipient"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a6664b97aef19c137d44ec81dfc0c0cc28a2c3470357b125208345a2c048425d",
																"typeString": "literal_string \"Invalid recipient\""
															}
														],
														"id": 1453,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1911:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1461,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1911:46:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1462,
												"nodeType": "ExpressionStatement",
												"src": "1911:46:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1466,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1464,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1445,
																"src": "1975:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1465,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1984:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1975:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206d757374206265203e2030",
															"id": 1467,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1987:20:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb",
																"typeString": "literal_string \"Amount must be > 0\""
															},
															"value": "Amount must be > 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb",
																"typeString": "literal_string \"Amount must be > 0\""
															}
														],
														"id": 1463,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1967:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1468,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1967:41:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1469,
												"nodeType": "ExpressionStatement",
												"src": "1967:41:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1475,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 1471,
																		"name": "vault",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1386,
																		"src": "2026:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IVaultManager_$1368",
																			"typeString": "contract IVaultManager"
																		}
																	},
																	"id": 1472,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2032:14:11",
																	"memberName": "availableGrams",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1352,
																	"src": "2026:20:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																		"typeString": "function () view external returns (uint256)"
																	}
																},
																"id": 1473,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2026:22:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1474,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1445,
																"src": "2052:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2026:32:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420656e6f75676820676f6c64",
															"id": 1476,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2060:17:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7d5f8b7a385facf19389f22978f36cd75aee6d5cec328741ff39c84acdfadfaa",
																"typeString": "literal_string \"Not enough gold\""
															},
															"value": "Not enough gold"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7d5f8b7a385facf19389f22978f36cd75aee6d5cec328741ff39c84acdfadfaa",
																"typeString": "literal_string \"Not enough gold\""
															}
														],
														"id": 1470,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2018:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2018:60:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1478,
												"nodeType": "ExpressionStatement",
												"src": "2018:60:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1482,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1445,
															"src": "2110:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1479,
															"name": "vault",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1386,
															"src": "2089:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IVaultManager_$1368",
																"typeString": "contract IVaultManager"
															}
														},
														"id": 1481,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2095:14:11",
														"memberName": "addReserveUsed",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1362,
														"src": "2089:20:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256) external"
														}
													},
													"id": 1483,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2089:28:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1484,
												"nodeType": "ExpressionStatement",
												"src": "2089:28:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1486,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1443,
															"src": "2133:2:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1487,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1445,
															"src": "2137:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1485,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 870,
														"src": "2127:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2127:17:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1489,
												"nodeType": "ExpressionStatement",
												"src": "2127:17:11"
											}
										]
									},
									"documentation": {
										"id": 1441,
										"nodeType": "StructuredDocumentation",
										"src": "1642:139:11",
										"text": " @notice Mint token sesuai jumlah emas yang tersedia\n @dev Hanya SwapRouter atau role yang diizinkan yang bisa mint"
									},
									"functionSelector": "40c10f19",
									"id": 1491,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1448,
													"name": "MINTER_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1378,
													"src": "1862:11:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1449,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1447,
												"name": "onlyRole",
												"nameLocations": [
													"1853:8:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "1853:8:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "1853:21:11"
										},
										{
											"id": 1451,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1450,
												"name": "whenNotPaused",
												"nameLocations": [
													"1883:13:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1231,
												"src": "1883:13:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "1883:13:11"
										}
									],
									"name": "mint",
									"nameLocation": "1795:4:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1446,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1443,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1808:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 1491,
												"src": "1800:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1442,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1800:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1445,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1820:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1491,
												"src": "1812:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1444,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1812:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1799:28:11"
									},
									"returnParameters": {
										"id": 1452,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1901:0:11"
									},
									"scope": 1558,
									"src": "1786:365:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1534,
										"nodeType": "Block",
										"src": "2419:202:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1510,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1505,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1494,
																"src": "2437:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1508,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2453:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1507,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2445:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1506,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2445:7:11",
																		"typeDescriptions": {}
																	}
																},
																"id": 1509,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2445:10:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2437:18:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642061646472657373",
															"id": 1511,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2457:17:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
																"typeString": "literal_string \"Invalid address\""
															},
															"value": "Invalid address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
																"typeString": "literal_string \"Invalid address\""
															}
														],
														"id": 1504,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2429:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2429:46:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1513,
												"nodeType": "ExpressionStatement",
												"src": "2429:46:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1519,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1516,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1494,
																		"src": "2503:4:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1515,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 616,
																	"src": "2493:9:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view returns (uint256)"
																	}
																},
																"id": 1517,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2493:15:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1518,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1496,
																"src": "2512:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2493:25:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742062616c616e6365",
															"id": 1520,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2520:22:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															},
															"value": "Insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															}
														],
														"id": 1514,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2485:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2485:58:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1522,
												"nodeType": "ExpressionStatement",
												"src": "2485:58:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1526,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1496,
															"src": "2578:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1523,
															"name": "vault",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1386,
															"src": "2554:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IVaultManager_$1368",
																"typeString": "contract IVaultManager"
															}
														},
														"id": 1525,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2560:17:11",
														"memberName": "reduceReserveUsed",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1367,
														"src": "2554:23:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256) external"
														}
													},
													"id": 1527,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2554:31:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1528,
												"nodeType": "ExpressionStatement",
												"src": "2554:31:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1530,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1494,
															"src": "2601:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1531,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1496,
															"src": "2607:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1529,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 903,
														"src": "2595:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1532,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2595:19:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1533,
												"nodeType": "ExpressionStatement",
												"src": "2595:19:11"
											}
										]
									},
									"documentation": {
										"id": 1492,
										"nodeType": "StructuredDocumentation",
										"src": "2157:131:11",
										"text": " @notice Burn token dari user saat redeem emas\n @dev Digunakan oleh RedeemManager (yang diberi MINTER_ROLE)"
									},
									"functionSelector": "1c83ba4a",
									"id": 1535,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1499,
													"name": "MINTER_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1378,
													"src": "2380:11:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1500,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1498,
												"name": "onlyRole",
												"nameLocations": [
													"2371:8:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "2371:8:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "2371:21:11"
										},
										{
											"id": 1502,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1501,
												"name": "whenNotPaused",
												"nameLocations": [
													"2401:13:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1231,
												"src": "2401:13:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "2401:13:11"
										}
									],
									"name": "burnFromVault",
									"nameLocation": "2302:13:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1494,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2324:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1535,
												"src": "2316:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1493,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2316:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1496,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2338:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1535,
												"src": "2330:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2330:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2315:30:11"
									},
									"returnParameters": {
										"id": 1503,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2419:0:11"
									},
									"scope": 1558,
									"src": "2293:328:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1545,
										"nodeType": "Block",
										"src": "2759:25:11",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1542,
														"name": "_pause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1289,
														"src": "2769:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1543,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2769:8:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1544,
												"nodeType": "ExpressionStatement",
												"src": "2769:8:11"
											}
										]
									},
									"documentation": {
										"id": 1536,
										"nodeType": "StructuredDocumentation",
										"src": "2627:79:11",
										"text": " @notice Pause seluruh aktivitas token (mint, burn, transfer)"
									},
									"functionSelector": "8456cb59",
									"id": 1546,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1539,
													"name": "PAUSER_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1383,
													"src": "2746:11:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1540,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1538,
												"name": "onlyRole",
												"nameLocations": [
													"2737:8:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "2737:8:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "2737:21:11"
										}
									],
									"name": "pause",
									"nameLocation": "2720:5:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1537,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2725:2:11"
									},
									"returnParameters": {
										"id": 1541,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2759:0:11"
									},
									"scope": 1558,
									"src": "2711:73:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1556,
										"nodeType": "Block",
										"src": "2889:27:11",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1553,
														"name": "_unpause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1305,
														"src": "2899:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1554,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2899:10:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1555,
												"nodeType": "ExpressionStatement",
												"src": "2899:10:11"
											}
										]
									},
									"documentation": {
										"id": 1547,
										"nodeType": "StructuredDocumentation",
										"src": "2790:44:11",
										"text": " @notice Unpause aktivitas"
									},
									"functionSelector": "3f4ba83a",
									"id": 1557,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1550,
													"name": "PAUSER_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1383,
													"src": "2876:11:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1551,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1549,
												"name": "onlyRole",
												"nameLocations": [
													"2867:8:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "2867:8:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "2867:21:11"
										}
									],
									"name": "unpause",
									"nameLocation": "2848:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1548,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2855:2:11"
									},
									"returnParameters": {
										"id": 1552,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2889:0:11"
									},
									"scope": 1558,
									"src": "2839:77:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1559,
							"src": "725:2193:11",
							"usedErrors": [
								305,
								308,
								390,
								395,
								400,
								409,
								414,
								419,
								1220,
								1223
							],
							"usedEvents": [
								317,
								326,
								335,
								1042,
								1051,
								1212,
								1217
							]
						}
					],
					"src": "32:2887:11"
				},
				"id": 11
			}
		}
	}
}